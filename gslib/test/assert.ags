	.prefix

	.data

test.assert.eq	.closure	_test.assert.eq_c
_test.assert.eq_neq.s_neq	.string	\s≠\s

	.code

# §section §gs{test.assert.eq}

_test.assert.eq_c	.expr
test.property.t	.tygvar
_test.assert.eq_eq_ty	.tygvar
_test.assert.eq_p_ty	.tygvar
α	.tyarg	*
_test.assert.eq_x.s_c	.subcode
_test.assert.eq_y.s_c	.subcode
_test.assert.eq_neq.s_c	.subcode
_test.assert.eq_eq.s_c	.subcode
_test.assert.eq_eq.b_c	.subcode
test.assert	.gvar
eq	.larg	_test.assert.eq_eq_ty	α
p	.larg	_test.assert.eq_p_ty	α
x	.larg	α
y	.larg	α
x.s	.alloc	_test.assert.eq_x.s_c	α	|	p	x
y.s	.alloc	_test.assert.eq_y.s_c	α	|	p	y
neq.s	.alloc	_test.assert.eq_neq.s_c	|	x.s	y.s
eq.s	.alloc	_test.assert.eq_eq.s_c
eq.b	.alloc	_test.assert.eq_eq.b_c	α	|	eq	x	y
	.app	neq.s	eq.s	eq.b
	.enter	test.assert

_test.assert.eq_x.s_c	.expr
_test.assert.eq_p_ty	.tygvar
α	.tyfv	*
p	.fv	_test.assert.eq_p_ty	α
x	.fv	α
	.app	x
	.enter	p

_test.assert.eq_y.s_c	.expr
_test.assert.eq_p_ty	.tygvar
α	.tyfv	*
p	.fv	_test.assert.eq_p_ty	α
y	.fv	α
	.app	y
	.enter	p

_test.assert.eq_neq.s_c	.expr
list.t	.tygvar
rune.t	.tygvar
_test.assert.eq_neq.s_s1_c	.subcode
list.<>	.gvar
x.s	.fv	list.t	rune.t
y.s	.fv	list.t	rune.t
s1	.alloc	_test.assert.eq_neq.s_s1_c	|	y.s
	.app	x.s	s1
	.enter	list.<>	rune.t

_test.assert.eq_neq.s_s1_c	.expr
list.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_test.assert.eq_neq.s_neq	.gvar
y.s	.fv	list.t	rune.t
	.app	_test.assert.eq_neq.s_neq	y.s
	.enter	list.<>	rune.t

_test.assert.eq_eq.s_c	.expr
list.t	.tygvar
rune.t	.tygvar
	.undef	list.t	rune.t

_test.assert.eq_eq.b_c	.expr
_test.assert.eq_eq_ty	.tygvar
α	.tyfv	*
eq	.fv	_test.assert.eq_eq_ty	α
x	.fv	α
y	.fv	α
	.app	x	y
	.enter	eq

	.type

_test.assert.eq_eq_ty	.tyexpr
bool.t	.tygvar
α	.tylambda	*
	.tylift
	.tyfun	α
	.tylift
	.tyfun	α
	.tyref	bool.t

_test.assert.eq_p_ty	.tyexpr
list.t	.tygvar
rune.t	.tygvar
α	.tylambda	*
	.tylift
	.tyfun	α
	.tyref	list.t	rune.t
