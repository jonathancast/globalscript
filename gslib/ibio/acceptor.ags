#calculus: gsdl.string-code 0.6

	.prefix

-- Based on §emph{Parallel Parsing Processes} by Koen Claessen

-- §paragraph{Types are}
-- §begin{itemize}
--   §item §gs{ibio.acceptor.prim.cont.t s α β = ibio.acceptor.prim.kt s α β → ibio.acceptor.prim.t s β} is the underlying type
--   §item §gs{ibio.acceptor.prim.kt s α β = α → ibio.acceptor.prim.t s β} is the type of the continuation
--   §item §gs{ibio.acceptor.prim.t s β} is the type of the continuation result
-- §end{itemize}

	.data

ibio.acceptor.prim.cont	.closure	_ibio.acceptor.prim.cont_c

ibio.acceptor.prim.symbol.bind	.closure	_ibio.acceptor.prim.symbol.bind_c
ibio.acceptor.prim.unit.plus	.closure	_ibio.acceptor.prim.unit.plus_c
ibio.acceptor.prim.fail	.closure	_ibio.acceptor.prim.fail_c

ibio.acceptor.symbol.prim	.closure	_ibio.acceptor.symbol.prim_c

ibio.acceptor.optional.prim	.closure	_ibio.acceptor.optional.prim_c

ibio.acceptor.many.prim	.closure	_ibio.acceptor.many.prim_c	_ibio.acceptor.many.prim_ty

ibio.acceptor.many.void.prim	.closure	_ibio.acceptor.many.void.prim_c	_ibio.acceptor.many.void.prim_ty

ibio.acceptor.prim.<|>	.closure	_ibio.acceptor.prim.<|>_c	_ibio.acceptor.prim.<|>_ty

	.code

-- §section §gs{ibio.acceptor.prim.cont}

_ibio.acceptor.prim.cont_c	.expr
ibio.acceptor.prim.t	.tygvar
record.empty	.tygvar
_ibio.acceptor.prim.cont_er_c	.subcode
_ibio.acceptor.prim.cont_f_c	.subcode
ibio.acceptor.prim.unit.plus	.gvar
s	.tyarg	*
α	.tyarg	*
x	.larg	α
er	.closure	_ibio.acceptor.prim.cont_er_c
f	.closure	_ibio.acceptor.prim.cont_f_c
	.app	er	f
	.enter	ibio.acceptor.prim.unit.plus	s	record.empty

_ibio.acceptor.prim.cont_er_c	.expr
r	.record
	.lift
	.yield	r

_ibio.acceptor.prim.cont_f_c	.expr
record.empty	.tygvar
ibio.acceptor.prim.fail	.gvar
s	.tyfv	*
	.enter	ibio.acceptor.prim.fail	s	record.empty

-- §section §gs{ibio.acceptor.symbol}

_ibio.acceptor.symbol.prim_c	.expr
ibio.acceptor.prim.kt	.tygvar
ibio.acceptor.prim.symbol.bind	.gvar
ibio.acceptor.prim.fail	.gvar
s	.tyarg	*
β	.tyarg	*
k	.larg	ibio.acceptor.prim.kt	s	s	β
f	.apply	ibio.acceptor.prim.fail	s	β
	.app	k	f
	.enter	ibio.acceptor.prim.symbol.bind	s	β

-- §section §gs{ibio.acceptor.optional}

_ibio.acceptor.optional.prim_c	.expr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
maybe.t	.tygvar
_ibio.acceptor.optional.prim_nr_c	.subcode
_ibio.acceptor.optional.prim_jr_c	.subcode
ibio.acceptor.prim.<|>	.gvar
s	.tyarg	*
α	.tyarg	*
β	.tyarg	*
res.ty	.tylet	maybe.t	α
p	.larg	ibio.acceptor.prim.cont.t	s	α	β
k	.larg	ibio.acceptor.prim.kt	s	res.ty	β
nr	.closure	_ibio.acceptor.optional.prim_nr_c
jr	.closure	_ibio.acceptor.optional.prim_jr_c
	.app	nr	jr
	.enter	ibio.acceptor.prim.<|>	s	β

_ibio.acceptor.optional.prim_nr_c	.expr
ibio.acceptor.prim.kt	.tygvar
ibio.acceptor.prim.t	.tygvar
maybe.t	.tygvar
_ibio.acceptor.optional.prim_nr_n_c	.subcode
s	.tyfv	*
α	.tyfv	*
β	.tyfv	*
res.ty	.tylet	maybe.t	α
k	.fv	ibio.acceptor.prim.kt	s	res.ty	β
n	.closure	_ibio.acceptor.optional.prim_nr_n_c
	.app	n
	.enter	k

_ibio.acceptor.optional.prim_nr_n_c	.expr
maybe.t	.tygvar
α	.tyfv	*
	.undef	maybe.t	α

_ibio.acceptor.optional.prim_jr_c	.expr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
maybe.t	.tygvar
_ibio.acceptor.optional.prim_jr_k1_c	.subcode
s	.tyfv	*
α	.tyfv	*
β	.tyfv	*
res.ty	.tylet	maybe.t	α
p	.fv	ibio.acceptor.prim.cont.t	s	α	β
k	.fv	ibio.acceptor.prim.kt	s	res.ty	β
k1	.closure	_ibio.acceptor.optional.prim_jr_k1_c
	.app	k1
	.enter	p

_ibio.acceptor.optional.prim_jr_k1_c	.expr
ibio.acceptor.prim.kt	.tygvar
maybe.t	.tygvar
_ibio.acceptor.optional.prim_jr_k1_jx_c	.subcode
s	.tyfv	*
α	.tyfv	*
β	.tyfv	*
res.ty	.tylet	maybe.t	α
k	.fv	ibio.acceptor.prim.kt	s	res.ty	β
x	.larg	α
jx	.closure	_ibio.acceptor.optional.prim_jr_k1_jx_c
	.app	jx
	.enter	k

_ibio.acceptor.optional.prim_jr_k1_jx_c	.expr
maybe.t	.tygvar
α	.tyfv	*
	.undef	maybe.t	α

-- §section §gs{ibio.acceptor.many}

_ibio.acceptor.many.prim_c	.expr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
list.t	.tygvar
_ibio.acceptor.many.prim_nr_c	.subcode
_ibio.acceptor.many.prim_cr_c	.subcode
ibio.acceptor.prim.<|>	.gvar
s	.tyarg	*
α	.tyarg	*
β	.tyarg	*
res.ty	.tylet	list.t	α
p	.larg	ibio.acceptor.prim.cont.t	s	α	β
k	.larg	ibio.acceptor.prim.kt	s	res.ty	β
nr	.closure	_ibio.acceptor.many.prim_nr_c
cr	.closure	_ibio.acceptor.many.prim_cr_c
	.app	nr	cr
	.enter	ibio.acceptor.prim.<|>	s	β

_ibio.acceptor.many.prim_nr_c	.expr
ibio.acceptor.prim.kt	.tygvar
list.t	.tygvar
list.nil	.gvar
s	.tyfv	*
α	.tyfv	*
β	.tyfv	*
res.ty	.tylet	list.t	α
k	.fv	ibio.acceptor.prim.kt	s	res.ty	β
nil	.apply	list.nil	α
	.app	nil
	.enter	k

_ibio.acceptor.many.prim_cr_c	.expr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
list.t	.tygvar
_ibio.acceptor.many.prim_cr_k0_c	.subcode
s	.tyfv	*
α	.tyfv	*
β	.tyfv	*
res.ty	.tylet	list.t	α
p	.fv	ibio.acceptor.prim.cont.t	s	α	β
k	.fv	ibio.acceptor.prim.kt	s	res.ty	β
k0	.closure	_ibio.acceptor.many.prim_cr_k0_c
	.app	k0
	.enter	p

_ibio.acceptor.many.prim_cr_k0_c	.expr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
list.t	.tygvar
_ibio.acceptor.many.prim_cr_k1_c	.subcode
ibio.acceptor.many.prim	.gvar
s	.tyfv	*
α	.tyfv	*
β	.tyfv	*
res.ty	.tylet	list.t	α
p	.fv	ibio.acceptor.prim.cont.t	s	α	β
k	.fv	ibio.acceptor.prim.kt	s	res.ty	β
x	.larg	α
k1	.closure	_ibio.acceptor.many.prim_cr_k1_c
	.app	p k1
	.enter	ibio.acceptor.many.prim	s	α	β

_ibio.acceptor.many.prim_cr_k1_c	.expr
ibio.acceptor.prim.kt	.tygvar
list.t	.tygvar
ibio.acceptor.prim.t	.tygvar
list.:	.gvar
s	.tyfv	*
α	.tyfv	*
β	.tyfv	*
res.ty	.tylet	list.t	α
k	.fv	ibio.acceptor.prim.kt	s	res.ty	β
x	.fv	α
xn1	.larg	list.t	α
xn	.apply	list.:	α	|	x	xn1
	.app	xn
	.enter	k

-- §section §gs{ibio.acceptor.many.void}

_ibio.acceptor.many.void.prim_c	.expr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
record.empty	.tygvar
_ibio.acceptor.many.void.prim_cr_k0_c	.subcode
ibio.acceptor.prim.<|>	.gvar
record.empty	.gvar
s	.tyarg	*
α	.tyarg	*
β	.tyarg	*
p	.larg	ibio.acceptor.prim.cont.t	s	α	β
k	.larg	ibio.acceptor.prim.kt	s	record.empty	β
nr	.apply	k	|	record.empty
k0	.closure	_ibio.acceptor.many.void.prim_cr_k0_c
cr	.apply	p	|	k0
	.app	nr	cr
	.enter	ibio.acceptor.prim.<|>	s	β

_ibio.acceptor.many.void.prim_cr_k0_c	.expr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
record.empty	.tygvar
ibio.acceptor.many.void.prim	.gvar
s	.tyfv	*
α	.tyfv	*
β	.tyfv	*
p	.fv	ibio.acceptor.prim.cont.t	s	α	β
k	.fv	ibio.acceptor.prim.kt	s	record.empty	β
x	.larg	α
	.app	p k
	.enter	ibio.acceptor.many.void.prim	s	α	β

-- §section §gs{ibio.acceptor.prim.<|>}

_ibio.acceptor.prim.<|>_c	.expr
ibio.acceptor.prim.t	.tygvar
_ibio.acceptor.prim.<|>_k0	.subcode
ibio.acceptor.prim.t.out	.cogvar
s	.tyarg	*
β	.tyarg	*
p0	.larg	ibio.acceptor.prim.t	s	β
p1	.larg	ibio.acceptor.prim.t	s	β
	.force	_ibio.acceptor.prim.<|>_k0
	.coerce	ibio.acceptor.prim.t.out	s	β
	.enter	p0

_ibio.acceptor.prim.<|>_k0	.forcecont
ibio.acceptor.prim.u	.tygvar
ibio.acceptor.prim.t	.tygvar
_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	.tygvar
_ibio.acceptor.prim.<|>_k1	.subcode
_ibio.acceptor.prim.<|>_k0_unit.plus_p1.1_c	.subcode
ibio.acceptor.prim.t.out	.cogvar
ibio.acceptor.prim.unit.plus	.gvar
s	.tyfv	*
β	.tyfv	*
p1	.fv	ibio.acceptor.prim.t	s	β
p0.0	.karg	ibio.acceptor.prim.u	s	β
	.analyze	p0.0	fail	symbol.bind	unit.plus
		.case	fail
			.enter	p1
		.case	symbol.bind
ks.0		.fkarg	0	_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	s	β
keof.0		.fkarg	1	ibio.acceptor.prim.t	s	β
			.force	_ibio.acceptor.prim.<|>_k1
			.coerce	ibio.acceptor.prim.t.out	s	β
			.enter	p1
		.case	unit.plus
x		.fkarg	0	β
p0.1		.fkarg	1	ibio.acceptor.prim.t	s	β
p1.1			.closure	_ibio.acceptor.prim.<|>_k0_unit.plus_p1.1_c
			.app	x	p1.1
			.enter	ibio.acceptor.prim.unit.plus	s	β

_ibio.acceptor.prim.<|>_k1	.forcecont
ibio.acceptor.prim.u	.tygvar
ibio.acceptor.prim.t	.tygvar
_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	.tygvar
_ibio.acceptor.prim.<|>_ks.y_c	.subcode
ibio.acceptor.prim.symbol.bind	.gvar
ibio.acceptor.prim.<|>	.gvar
s	.tyfv	*
β	.tyfv	*
ks.0	.fv	_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	s	β
keof.0	.fv	ibio.acceptor.prim.t	s	β
p1.0	.karg	ibio.acceptor.prim.u	s	β
	.analyze	p1.0	fail	symbol.bind	unit.plus
		.case	fail
			.app	ks.0	keof.0
			.enter	ibio.acceptor.prim.symbol.bind	s	β
		.case	symbol.bind
ks.1		.fkarg	0	_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	s	β
keof.1		.fkarg	1	ibio.acceptor.prim.t	s	β
ks.y			.closure	_ibio.acceptor.prim.<|>_ks.y_c
keof.y			.apply	ibio.acceptor.prim.<|>	s	β	|	keof.0	keof.1
			.app	ks.y	keof.y
			.enter	ibio.acceptor.prim.symbol.bind	s	β
		.case	unit.plus
x		.fkarg	0	β
p1.1		.fkarg	1	ibio.acceptor.prim.t	s	β
			.undef	ibio.acceptor.prim.t	s	β

_ibio.acceptor.prim.<|>_ks.y_c	.expr
_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	.tygvar
ibio.acceptor.prim.<|>	.gvar
s	.tyfv	*
β	.tyfv	*
ks.0	.fv	_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	s	β
ks.1	.fv	_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	s	β
sym	.larg	s
ks.0.sym	.apply	ks.0	|	sym
ks.1.sym	.apply	ks.1	|	sym
	.app	ks.0.sym	ks.1.sym
	.enter	ibio.acceptor.prim.<|>	s	β

_ibio.acceptor.prim.<|>_k0_unit.plus_p1.1_c	.expr
ibio.acceptor.prim.t	.tygvar
ibio.acceptor.prim.<|>	.gvar
s	.tyfv	*
β	.tyfv	*
p0.1	.fv	ibio.acceptor.prim.t	s	β
p1	.fv	ibio.acceptor.prim.t	s	β
	.app	p0.1	p1
	.enter	ibio.acceptor.prim.<|>	s	β

-- §section Constructors

_ibio.acceptor.prim.symbol.bind_c	.expr
_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	.tygvar
ibio.acceptor.prim.t	.tygvar
ibio.acceptor.prim.u	.tygvar
ibio.acceptor.prim.t.in	.cogvar
s	.tyarg	*
α	.tyarg	*
res.u	.tylet	ibio.acceptor.prim.u	s	α
sym	.larg	_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	s	α
eof	.larg	ibio.acceptor.prim.t	s	α
r	.constr	res.u	symbol.bind	0	sym	1	eof
	.coerce	ibio.acceptor.prim.t.in	s	α
	.lift
	.yield	r

_ibio.acceptor.prim.unit.plus_c	.expr
ibio.acceptor.prim.t	.tygvar
ibio.acceptor.prim.u	.tygvar
ibio.acceptor.prim.t.in	.cogvar
s	.tyarg	*
α	.tyarg	*
res.u	.tylet	ibio.acceptor.prim.u	s	α
x	.larg	α
p1	.larg	ibio.acceptor.prim.t	s	α
r	.constr	res.u	unit.plus	0	x	1	p1
	.coerce	ibio.acceptor.prim.t.in	s	α
	.lift
	.yield	r

_ibio.acceptor.prim.fail_c	.expr
ibio.acceptor.prim.u	.tygvar
ibio.acceptor.prim.t.in	.cogvar
s	.tyarg	*
α	.tyarg	*
res.u	.tylet	ibio.acceptor.prim.u	s	α
r	.constr	res.u	fail
	.coerce	ibio.acceptor.prim.t.in	s	α
	.lift
	.yield	r

	.type

-- §section §gs{ibio.acceptor.prim.cont.t}

ibio.acceptor.prim.cont.t	.tyexpr
ibio.acceptor.prim.kt	.tygvar
ibio.acceptor.prim.t	.tygvar
s	.tylambda	*
α	.tylambda	*
β	.tylambda	*
	.tylift
	.tyfun	ibio.acceptor.prim.kt	s	α	β
	.tyref	ibio.acceptor.prim.t	s	β

-- §section §gs{ibio.acceptor.prim.kt}

ibio.acceptor.prim.kt	.tyexpr
ibio.acceptor.prim.t	.tygvar
s	.tylambda	*
α	.tylambda	*
β	.tylambda	*
	.tylift
	.tyfun	α
	.tyref	ibio.acceptor.prim.t	s	β

-- §section §gs{ibio.acceptor.prim.t}

ibio.acceptor.prim.t	.tyabstract	**^*^
ibio.acceptor.prim.u	.tygvar
s	.tylambda	*
α	.tylambda	*
	.tylift
	.tyref	ibio.acceptor.prim.u	s	α

ibio.acceptor.prim.u	.tyexpr
_ibio.acceptor.prim.t_symbol.bind_arg_ty	.tygvar
_ibio.acceptor.prim.t_fail_arg_ty	.tygvar
_ibio.acceptor.prim.t_unit.plus_arg_ty	.tygvar
s	.tylambda	*
α	.tylambda	*
symbol.bind.s.α.ty	.tylet	_ibio.acceptor.prim.t_symbol.bind_arg_ty	s	α
unit.plus.s.α.ty	.tylet	_ibio.acceptor.prim.t_unit.plus_arg_ty	s	α
	.tysum	fail	_ibio.acceptor.prim.t_fail_arg_ty	symbol.bind	symbol.bind.s.α.ty	unit.plus	unit.plus.s.α.ty

_ibio.acceptor.prim.t_symbol.bind_arg_ty	.tyexpr
_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	.tygvar
ibio.acceptor.prim.t	.tygvar
s	.tylambda	*
α	.tylambda	*
0.arg.ty	.tylet	_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	s	α
1.arg.ty	.tylet	ibio.acceptor.prim.t	s	α
	.tyubproduct	0	0.arg.ty	1	1.arg.ty

_ibio.acceptor.prim.t_symbol.bind_arg_0_arg_ty	.tyexpr
ibio.acceptor.prim.t	.tygvar
s	.tylambda	*
α	.tylambda	*
	.tylift
	.tyfun	s
	.tyref	ibio.acceptor.prim.t	s	α

_ibio.acceptor.prim.t_fail_arg_ty	.tyexpr
	.tyubproduct

_ibio.acceptor.prim.t_unit.plus_arg_ty	.tyexpr
ibio.acceptor.prim.t	.tygvar
s	.tylambda	*
α	.tylambda	*
acceptor.prim.s.α	.tylet	ibio.acceptor.prim.t	s	α
	.tyubproduct	0	α	1	acceptor.prim.s.α

-- §section §gs{ibio.acceptor.many}

_ibio.acceptor.many.prim_ty	.tyexpr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
list.t	.tygvar
ibio.acceptor.prim.t	.tygvar
s	.tyforall	*
α	.tyforall	*
β	.tyforall	*
res.ty	.tylet	list.t	α
	.tylift
	.tyfun	ibio.acceptor.prim.cont.t	s	α	β
	.tylift
	.tyfun	ibio.acceptor.prim.kt	s	res.ty	β
	.tyref	ibio.acceptor.prim.t	s	β

-- §section §gs{ibio.acceptor.many.void}

_ibio.acceptor.many.void.prim_ty	.tyexpr
ibio.acceptor.prim.cont.t	.tygvar
ibio.acceptor.prim.kt	.tygvar
record.empty	.tygvar
ibio.acceptor.prim.t	.tygvar
s	.tyforall	*
α	.tyforall	*
β	.tyforall	*
	.tylift
	.tyfun	ibio.acceptor.prim.cont.t	s	α	β
	.tylift
	.tyfun	ibio.acceptor.prim.kt	s	record.empty	β
	.tyref	ibio.acceptor.prim.t	s	β

-- §section §gs{ibio.acceptor.prim.<|>}

_ibio.acceptor.prim.<|>_ty	.tyexpr
ibio.acceptor.prim.t	.tygvar
s	.tyforall	*
β	.tyforall	*
	.tylift
	.tyfun	ibio.acceptor.prim.t	s	β
	.tylift
	.tyfun	ibio.acceptor.prim.t	s	β
	.tyref	ibio.acceptor.prim.t	s	β

	.coercion

ibio.acceptor.prim.t.in	.tycoercion
ibio.acceptor.prim.t	.tygvar
s	.tylambda	*
β	.tylambda	*
	.tydefinition	ibio.acceptor.prim.t	s	β

ibio.acceptor.prim.t.out	.tycoercion
ibio.acceptor.prim.t	.tygvar
s	.tylambda	*
β	.tylambda	*
	.tyinvert
	.tydefinition	ibio.acceptor.prim.t	s	β
