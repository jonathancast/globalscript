	.prefix

	.data

ibio.file.name.read	.closure	_ibio.file.name.read_c
ibio.file.name.print	.closure	_ibio.file.name.print_c

ibio.file.read.open.prim	.closure	_ibio.file.read.open.prim_c

ibio.file.stat.prim	.closure	_ibio.file.stat.prim_c

ibio.file.isdir	.closure	_ibio.file.isdir_c

ibio.file.name.components.get	.closure	_ibio.file.name.components.get_c
_ibio.file.name.components.get_worker		.closure	_ibio.file.name.components.get_worker_c	_ibio.file.name.components.get_worker_ty

ibio.file.name.</>	.closure	_ibio.file.name.</>_c
_ibio.file.name.</>_worker	.closure	_ibio.file.name.</>_worker_c	_ibio.file.name.</>_worker_ty

_slash	.closure	_slash_c
_dot	.closure	_dot_c

	.code

# §section §gs{ibio.file.name.read}

_ibio.file.name.read_c	.expr
list.t	.tygvar
rune.t	.tygvar
ibio.file.name.in	.cogvar
s	.larg	list.t	rune.t
	.coerce	ibio.file.name.in
	.enter	s

# §section §gs{ibio.file.name.print}

_ibio.file.name.print_c	.expr
ibio.file.name.t	.tygvar
ibio.file.name.out	.cogvar
fn	.larg	ibio.file.name.t
	.coerce	ibio.file.name.out
	.enter	fn

# §section §gs{ibio.file.read.open.prim}

_ibio.file.read.open.prim_c	.expr
ibio.prim.external.io.t	.tygvar
ibio.file.name.t	.tygvar
s	.tyarg	*
_ibio.file.read.open.prim_k	.subcode
e	.larg	ibio.prim.external.io.t	s
fn	.larg	ibio.file.name.t
	.force	_ibio.file.read.open.prim_k	s	|	fn
	.enter	e

_ibio.file.read.open.prim_k	.forcecont
ibio.file.name.t	.tygvar
ibio.prim.external.io	.tygvar
s	.tyfv	*
ibio.prim.file.read.open	.gvar
ibio.file.name.print	.gvar
fn	.fv	ibio.file.name.t
e0	.karg	ibio.prim.external.io	s
fn.s	.apply	ibio.file.name.print	|	fn
	.lift
	.app	e0	fn.s
	.yield	ibio.prim.file.read.open	s

# §section §gs{ibio.file.stat}

_ibio.file.stat.prim_c	.eprog	ibio.prim	ibio
ibio.file.name.t	.tygvar
_ibio.file.stat.prim_pst_c	.subcode
_ibio.file.stat.prim_st_c	.subcode
_ibio.file.stat.prim_body_c	.subcode
fn	.larg	ibio.file.name.t
pst	.bind	_ibio.file.stat.prim_pst_c	|	fn
st	.alloc	_ibio.file.stat.prim_st_c	|	pst
	.body	_ibio.file.stat.prim_body_c	|	st

_ibio.file.stat.prim_pst_c	.expr
ibio.file.name.t	.tygvar
_ibio.file.stat.prim_pst_s_c	.subcode
ibio.prim.file.stat	.gvar
fn	.fv	ibio.file.name.t
s	.alloc	_ibio.file.stat.prim_pst_s_c	|	fn
	.app	s
	.yield	ibio.prim.file.stat

_ibio.file.stat.prim_pst_s_c	.expr
ibio.file.name.t	.tygvar
ibio.file.name.print	.gvar
fn	.fv	ibio.file.name.t
	.app	fn
	.enter	ibio.file.name.print

_ibio.file.stat.prim_st_c	.expr
ibio.prim.dir.t	.tygvar
ibio.dir.fromprim	.gvar
pst	.efv	ibio.prim.dir.t
	.app	pst
	.enter	ibio.dir.fromprim

_ibio.file.stat.prim_body_c	.expr
ibio.dir.t	.tygvar
ibio.prim.unit	.gvar
st	.fv	ibio.dir.t
	.app	st
	.yield	ibio.prim.unit	ibio.dir.t

# §section §gs{ibio.file.isdir}

_ibio.file.isdir_c	.eprog	ibio.prim	ibio
ibio.file.name.t	.tygvar
_ibio.file.isdir_st	.subcode
_ibio.file.isdir_id_c	.subcode
_ibio.file.isdir_body_c	.subcode
fn	.larg	ibio.file.name.t
st	.bind	_ibio.file.isdir_st	|	fn
id	.alloc	_ibio.file.isdir_id_c	|	st
	.body	_ibio.file.isdir_body_c	|	id

_ibio.file.isdir_st	.expr
ibio.file.name.t	.tygvar
ibio.file.stat.prim	.gvar
fn	.fv	ibio.file.name.t
	.app	fn
	.enter	ibio.file.stat.prim

_ibio.file.isdir_id_c	.expr
ibio.dir.t	.tygvar
_ibio.file.isdir_id_k	.subcode
st	.fv	ibio.dir.t
	.force	_ibio.file.isdir_id_k
	.enter	st

_ibio.file.isdir_id_k	.forcecont
ibio.dir.u	.tygvar
st0	.karg	ibio.dir.u
b	.field	mode.directory	st0
	.enter	b

_ibio.file.isdir_body_c	.expr
bool.t	.tygvar
ibio.prim.unit	.gvar
id	.fv	bool.t
	.app	id
	.yield	ibio.prim.unit	bool.t

# §section §gs{ibio.file.name.components.get}

_ibio.file.name.components.get_c	.expr
ibio.file.name.t	.tygvar
ibio.file.name.print	.gvar
_ibio.file.name.components.get_worker	.gvar
fn	.larg	ibio.file.name.t
fn0	.apply	ibio.file.name.print	|	fn
	.app	fn0
	.enter	_ibio.file.name.components.get_worker

_ibio.file.name.components.get_worker_c	.expr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.components.get_worker_k	.subcode
list.t.out	.cogvar
fn	.larg	list.t	rune.t
	.force	_ibio.file.name.components.get_worker_k
	.coerce	list.t.out	rune.t
	.enter	fn

_ibio.file.name.components.get_worker_k	.forcecont
list.prim.u	.tygvar
rune.t	.tygvar
list.t	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
string.ty	.tylet	list.t	rune.t
_ibio.file.name.components.get_worker_:_k	.subcode
bool.t.out	.cogvar
rune.≡	.gvar
_slash	.gvar
list.nil	.gvar
fn0	.karg	list.prim.u	rune.t
	.analyze	fn0	:	nil
		.case	:
c		.fkarg	0	rune.t
fn1		.fkarg	1	list.t	rune.t
			.force	_ibio.file.name.components.get_worker_:_k	|	c	fn1
			.coerce	bool.t.out
			.app	c	_slash
			.enter	rune.≡
		.case	nil
ds			.apply	list.nil	string.ty
es			.apply	list.nil	string.ty
r			.apply	list.nil	rune.t
cs			.record	dirs	ds	exts	es	root	r
			.lift
			.yield	cs

_ibio.file.name.components.get_worker_:_k	.forcecont
list.t	.tygvar
rune.t	.tygvar
bool.prim.u	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
_ibio.file.name.components.get_worker_:_false_k	.subcode
_ibio.file.name.components.get_worker	.gvar
c	.fv	rune.t
fn1	.fv	list.t	rune.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
			.force	_ibio.file.name.components.get_worker_:_false_k	|	c
			.app	fn1
			.enter	_ibio.file.name.components.get_worker
		.case	true
			.undef	_ibio.file.name.components.get_worker_res.ty

_ibio.file.name.components.get_worker_:_false_k	.forcecont	# First character not r{/}
_ibio.file.name.components.get_worker_res.u	.tygvar
list.t	.tygvar
rune.t	.tygvar
string.ty	.tylet	list.t	rune.t
_ibio.file.name.components.get_worker_:_false_k1	.subcode
list.t.out	.cogvar
c	.fv	rune.t
cs1	.karg	_ibio.file.name.components.get_worker_res.u
ds	.field	dirs	cs1
	.force	_ibio.file.name.components.get_worker_:_false_k1	|	c	cs1	ds
	.coerce	list.t.out	string.ty
	.enter	ds

_ibio.file.name.components.get_worker_:_false_k1	.forcecont
rune.t	.tygvar
_ibio.file.name.components.get_worker_res.u	.tygvar
list.prim.u	.tygvar
list.t	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
string.ty	.tylet	list.t	rune.t
_ibio.file.name.components.get_worker_:_false_nil_k	.subcode
bool.t.out	.cogvar
rune.≡	.gvar
_dot	.gvar
c	.fv	rune.t
cs1	.fv	_ibio.file.name.components.get_worker_res.u
ds	.fv	list.t	string.ty
ds0	.karg	list.prim.u	string.ty
	.analyze	ds0	:	nil
		.case	:
d0		.fkarg	0	string.ty
ds1		.fkarg	1	list.t	string.ty
			.undef	_ibio.file.name.components.get_worker_res.ty
		.case	nil
			.force	_ibio.file.name.components.get_worker_:_false_nil_k	|	c	cs1	ds
			.coerce	bool.t.out
			.app	c	_dot
			.enter	rune.≡

_ibio.file.name.components.get_worker_:_false_nil_k	.forcecont	# In the basename
rune.t	.tygvar
_ibio.file.name.components.get_worker_res.u	.tygvar
list.t	.tygvar
bool.prim.u	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
string.ty	.tylet	list.t	rune.t
list.:	.gvar
list.nil	.gvar
c	.fv	rune.t
cs1	.fv	_ibio.file.name.components.get_worker_res.u
ds	.fv	list.t	string.ty
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
es			.field	exts	cs1
r1			.field	root	cs1
r			.apply	list.:	rune.t	|	c	r1
cs			.record	dirs	ds	exts	es	root	r
			.lift
			.yield	cs
		.case	true
es1			.field	exts	cs1
r1			.field	root	cs1
es			.apply	list.:	string.ty	|	r1	es1
r			.apply	list.nil	rune.t
cs			.record	dirs	ds	exts	es	root	r
			.lift
			.yield	cs

# §section §gs{ibio.file.name.</>}

_ibio.file.name.</>_c	.expr
ibio.file.name.t	.tygvar
ibio.file.name.print	.gvar
_ibio.file.name.</>_worker	.gvar
ibio.file.name.read	.gvar
dn	.larg	ibio.file.name.t
fn	.larg	ibio.file.name.t
dn0	.apply	ibio.file.name.print	|	dn
fn0	.apply	ibio.file.name.print	|	fn
res	.apply	_ibio.file.name.</>_worker	|	dn0	fn0
	.app	res
	.enter	ibio.file.name.read

_ibio.file.name.</>_worker_c	.expr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.</>_worker_k0	.subcode
list.t.out	.cogvar
dn	.larg	list.t	rune.t
fn	.larg	list.t	rune.t
	.force	_ibio.file.name.</>_worker_k0	|	fn
	.coerce	list.t.out	rune.t
	.enter	dn

_ibio.file.name.</>_worker_k0	.forcecont
list.prim.u	.tygvar
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.</>_worker_k1	.subcode
list.t.out	.cogvar
fn	.fv	list.t	rune.t
dn0	.karg	list.prim.u	rune.t
	.analyze	dn0	:	nil
		.case	:
c		.fkarg	0	rune.t
dn1		.fkarg	1	list.t	rune.t
			.force	_ibio.file.name.</>_worker_k1	|	c	dn1	fn
			.coerce	list.t.out	rune.t
			.enter	dn1
		.case	nil
			.undef	list.t	rune.t

_ibio.file.name.</>_worker_k1	.forcecont
list.prim.u	.tygvar
rune.t	.tygvar
list.t	.tygvar
_ibio.file.name.</>_worker_k1_nil_k	.subcode
bool.t.out	.cogvar
_ibio.file.name.</>_worker	.gvar
list.:	.gvar
rune.≡	.gvar
_slash	.gvar
c	.fv	rune.t
dn1	.fv	list.t	rune.t
fn	.fv	list.t	rune.t
dn1.0	.karg	list.prim.u	rune.t
	.analyze	dn1.0	:	nil
		.case	:
c1		.fkarg	0	rune.t
dn2		.fkarg	1	list.t	rune.t
fn1			.apply	_ibio.file.name.</>_worker	|	dn1	fn
			.app	c	fn1
			.enter	list.:	rune.t
		.case	nil
			.force	_ibio.file.name.</>_worker_k1_nil_k	|	c	fn
			.coerce	bool.t.out
			.app	c	_slash
			.enter	rune.≡

_ibio.file.name.</>_worker_k1_nil_k	.forcecont
rune.t	.tygvar
list.t	.tygvar
bool.prim.u	.tygvar
list.:	.gvar
_slash	.gvar
c	.fv	rune.t
fn	.fv	list.t	rune.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
fn1			.apply	list.:	rune.t	|	_slash	fn
			.app	c	fn1
			.enter	list.:	rune.t
		.case	true
			.undef	list.t	rune.t

# §section Random data

_slash_c	.expr
rune.t.in	.cogvar
sl	.rune	/
	.coerce	rune.t.in
	.lift
	.yield	sl

_dot_c	.expr
rune.t.in	.cogvar
do	.rune	.
	.coerce	rune.t.in
	.lift
	.yield	do

	.type

ibio.file.name.t	.tyabstract	*
list.t	.tygvar
rune.t	.tygvar
	.tyref	list.t	rune.t

# §section §gs{ibio.file.name.components.get}

_ibio.file.name.components.get_worker_ty	.tyexpr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
	.tylift
	.tyfun	list.t	rune.t
	.tyref	_ibio.file.name.components.get_worker_res.ty

_ibio.file.name.components.get_worker_res.ty	.tyexpr
_ibio.file.name.components.get_worker_res.u	.tygvar
	.tylift
	.tyref	_ibio.file.name.components.get_worker_res.u

_ibio.file.name.components.get_worker_res.u	.tyexpr
list.t	.tygvar
rune.t	.tygvar
string.ty	.tylet	list.t	rune.t
list.string.ty	.tylet	list.t	string.ty
	.typroduct	dirs	list.string.ty	exts	list.string.ty	root	string.ty

# §section §gs{ibio.file.name.</>}

_ibio.file.name.</>_worker_ty	.tyexpr
list.t	.tygvar
rune.t	.tygvar
	.tylift
	.tyfun	list.t	rune.t
	.tylift
	.tyfun	list.t	rune.t
	.tyref	list.t	rune.t

	.coercion

ibio.file.name.in	.tycoercion
ibio.file.name.t	.tygvar
	.tydefinition	ibio.file.name.t

ibio.file.name.out	.tycoercion
ibio.file.name.t	.tygvar
	.tyinvert
	.tydefinition	ibio.file.name.t
