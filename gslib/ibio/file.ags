	.prefix

	.data

ibio.file.name.in	.closure	_ibio.file.name.in_c
ibio.file.name.out	.closure	_ibio.file.name.out_c
ibio.file.name.with	.closure	_ibio.file.name.with_c

ibio.file.name.≡	.closure	_ibio.file.name.≡_c

ibio.file.read.open.prim	.closure	_ibio.file.read.open.prim_c

ibio.file.stat.prim	.closure	_ibio.file.stat.prim_c

ibio.file.isdir	.closure	_ibio.file.isdir_c

ibio.file.name.components.get	.closure	_ibio.file.name.components.get_c
_ibio.file.name.components.get_worker		.closure	_ibio.file.name.components.get_worker_c	_ibio.file.name.components.get_worker_ty

ibio.file.name.extension.set	.closure	_ibio.file.name.extension.set_c
_ibio.file.name.extension.set_worker	.closure	_ibio.file.name.extension.set_worker_c	_ibio.file.name.extension.set_worker_ty

ibio.file.name.</>	.closure	_ibio.file.name.</>_c
_ibio.file.name.</>_worker	.closure	_ibio.file.name.</>_worker_c	_ibio.file.name.</>_worker_ty

ibio.file.name.compare	.closure	_ibio.file.name.compare_c

ibio.file.name.fmtgs	.closure	_ibio.file.name.fmtgs_c
_ibio.file.name.fmtgs_prefix	.string	fn<
_ibio.file.name.fmtgs_suffix	.string	>

_slash	.closure	_slash_c
_dot	.closure	_dot_c

	.code

# §section §gs{ibio.file.name.in}

_ibio.file.name.in_c	.expr
list.t	.tygvar
rune.t	.tygvar
ibio.file.name.in	.cogvar
s	.larg	list.t	rune.t
	.coerce	ibio.file.name.in
	.enter	s

# §section §gs{ibio.file.name.out}

_ibio.file.name.out_c	.expr
ibio.file.name.t	.tygvar
ibio.file.name.out	.cogvar
fn	.larg	ibio.file.name.t
	.coerce	ibio.file.name.out
	.enter	fn

# §section §gs{_ibio.file.name.with_c}

_ibio.file.name.with_c	.expr
_ibio.file.name.with_f_ty	.tygvar
ibio.file.name.t	.tygvar
ibio.file.name.out	.gvar
ibio.file.name.in	.gvar
f	.larg	_ibio.file.name.with_f_ty
fn	.larg	ibio.file.name.t
fn.0	.apply	ibio.file.name.out	|	fn
fn.1	.apply	f	|	fn.0
	.app	fn.1
	.enter	ibio.file.name.in

# §section §gs{ibio.file.name.≡}

_ibio.file.name.≡_c	.expr
ibio.file.name.t	.tygvar
rune.t	.tygvar
list.≡	.gvar
rune.≡	.gvar
ibio.file.name.out	.gvar
fn0	.larg	ibio.file.name.t
fn1	.larg	ibio.file.name.t
fn0.s	.apply	ibio.file.name.out	|	fn0
fn1.s	.apply	ibio.file.name.out	|	fn1
	.app	rune.≡	fn0.s	fn1.s
	.enter	list.≡	rune.t

# §section §gs{ibio.file.read.open.prim}

_ibio.file.read.open.prim_c	.expr
ibio.prim.external.io.t	.tygvar
ibio.file.name.t	.tygvar
_ibio.file.read.open.prim_k	.subcode
s	.tyarg	*
e	.larg	ibio.prim.external.io.t	s
fn	.larg	ibio.file.name.t
	.force	_ibio.file.read.open.prim_k
	.enter	e

_ibio.file.read.open.prim_k	.forcecont
ibio.file.name.t	.tygvar
ibio.prim.external.io	.tygvar
ibio.prim.file.read.open	.gvar
ibio.file.name.out	.gvar
s	.tyfv	*
fn	.fv	ibio.file.name.t
e0	.karg	ibio.prim.external.io	s
fn.s	.apply	ibio.file.name.out	|	fn
	.lift
	.app	e0	fn.s
	.yield	ibio.prim.file.read.open	s

# §section §gs{ibio.file.stat}

_ibio.file.stat.prim_c	.impprog	ibio.prim	ibio
ibio.file.name.t	.tygvar
_ibio.file.stat.prim_pst_c	.subcode
_ibio.file.stat.prim_st_c	.subcode
_ibio.file.stat.prim_body_c	.subcode
fn	.larg	ibio.file.name.t
pst	.bind	_ibio.file.stat.prim_pst_c
st	.alloc	_ibio.file.stat.prim_st_c
	.body	_ibio.file.stat.prim_body_c

_ibio.file.stat.prim_pst_c	.expr
ibio.file.name.t	.tygvar
_ibio.file.stat.prim_pst_s_c	.subcode
ibio.prim.file.stat	.gvar
fn	.fv	ibio.file.name.t
s	.alloc	_ibio.file.stat.prim_pst_s_c
	.app	s
	.yield	ibio.prim.file.stat

_ibio.file.stat.prim_pst_s_c	.expr
ibio.file.name.t	.tygvar
ibio.file.name.out	.gvar
fn	.fv	ibio.file.name.t
	.app	fn
	.enter	ibio.file.name.out

_ibio.file.stat.prim_st_c	.expr
ibio.prim.dir.t	.tygvar
ibio.dir.fromprim	.gvar
pst	.efv	ibio.prim.dir.t
	.app	pst
	.enter	ibio.dir.fromprim

_ibio.file.stat.prim_body_c	.expr
ibio.dir.t	.tygvar
ibio.prim.unit	.gvar
st	.fv	ibio.dir.t
	.app	st
	.yield	ibio.prim.unit	ibio.dir.t

# §section §gs{ibio.file.isdir}

_ibio.file.isdir_c	.impprog	ibio.prim	ibio
ibio.file.name.t	.tygvar
_ibio.file.isdir_st	.subcode
_ibio.file.isdir_id_c	.subcode
_ibio.file.isdir_body_c	.subcode
fn	.larg	ibio.file.name.t
st	.bind	_ibio.file.isdir_st
id	.alloc	_ibio.file.isdir_id_c
	.body	_ibio.file.isdir_body_c

_ibio.file.isdir_st	.expr
ibio.file.name.t	.tygvar
ibio.file.stat.prim	.gvar
fn	.fv	ibio.file.name.t
	.app	fn
	.enter	ibio.file.stat.prim

_ibio.file.isdir_id_c	.expr
ibio.dir.t	.tygvar
_ibio.file.isdir_id_k	.subcode
st	.fv	ibio.dir.t
	.force	_ibio.file.isdir_id_k
	.enter	st

_ibio.file.isdir_id_k	.forcecont
ibio.dir.u	.tygvar
st0	.karg	ibio.dir.u
b	.field	mode.directory	st0
	.enter	b

_ibio.file.isdir_body_c	.expr
bool.t	.tygvar
ibio.prim.unit	.gvar
id	.fv	bool.t
	.app	id
	.yield	ibio.prim.unit	bool.t

# §section §gs{ibio.file.name.components.get}

_ibio.file.name.components.get_c	.expr
ibio.file.name.t	.tygvar
ibio.file.name.out	.gvar
_ibio.file.name.components.get_worker	.gvar
fn	.larg	ibio.file.name.t
fn0	.apply	ibio.file.name.out	|	fn
	.app	fn0
	.enter	_ibio.file.name.components.get_worker

_ibio.file.name.components.get_worker_c	.expr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.components.get_worker_k	.subcode
list.t.out	.cogvar
fn	.larg	list.t	rune.t
	.force	_ibio.file.name.components.get_worker_k
	.coerce	list.t.out	rune.t
	.enter	fn

_ibio.file.name.components.get_worker_k	.forcecont
list.prim.u	.tygvar
rune.t	.tygvar
list.t	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
_ibio.file.name.components.get_worker_:_k	.subcode
bool.t.out	.cogvar
rune.≡	.gvar
_slash	.gvar
list.nil	.gvar
string.ty	.tylet	list.t	rune.t
fn0	.karg	list.prim.u	rune.t
	.analyze	fn0	:	nil
		.case	:
c		.fkarg	0	rune.t
fn1		.fkarg	1	list.t	rune.t
			.force	_ibio.file.name.components.get_worker_:_k
			.coerce	bool.t.out
			.app	c	_slash
			.enter	rune.≡
		.case	nil
ds			.apply	list.nil	string.ty
es			.apply	list.nil	string.ty
r			.apply	list.nil	rune.t
cs			.record	dirs	ds	exts	es	root	r
			.lift
			.yield	cs

_ibio.file.name.components.get_worker_:_k	.forcecont
list.t	.tygvar
rune.t	.tygvar
bool.prim.u	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
_ibio.file.name.components.get_worker_:_false_k	.subcode
_ibio.file.name.components.get_worker_:_true_k	.subcode
_ibio.file.name.components.get_worker	.gvar
c	.fv	rune.t
fn1	.fv	list.t	rune.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
			.force	_ibio.file.name.components.get_worker_:_false_k
			.app	fn1
			.enter	_ibio.file.name.components.get_worker
		.case	true
			.force	_ibio.file.name.components.get_worker_:_true_k
			.app	fn1
			.enter	_ibio.file.name.components.get_worker

_ibio.file.name.components.get_worker_:_false_k	.forcecont	# First character not r{/}
_ibio.file.name.components.get_worker_res.u	.tygvar
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.components.get_worker_:_false_k1	.subcode
list.t.out	.cogvar
string.ty	.tylet	list.t	rune.t
c	.fv	rune.t
cs1	.karg	_ibio.file.name.components.get_worker_res.u
ds	.field	dirs	cs1
	.force	_ibio.file.name.components.get_worker_:_false_k1
	.coerce	list.t.out	string.ty
	.enter	ds

_ibio.file.name.components.get_worker_:_false_k1	.forcecont
rune.t	.tygvar
_ibio.file.name.components.get_worker_res.u	.tygvar
list.prim.u	.tygvar
string.t	.tygvar
list.t	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
_ibio.file.name.components.get_worker_:_false_nil_k	.subcode
bool.t.out	.cogvar
list.:	.gvar
rune.≡	.gvar
_dot	.gvar
c	.fv	rune.t
cs1	.fv	_ibio.file.name.components.get_worker_res.u
ds	.fv	list.t	string.t
ds0	.karg	list.prim.u	string.t
	.analyze	ds0	:	nil
		.case	:
d0		.fkarg	0	string.t
ds1		.fkarg	1	list.t	string.t
ds2.0			.undefined	string.t
ds2			.apply	list.:	string.t	|	ds2.0	ds1
es			.field	exts	cs1
r			.field	root	cs1
res			.record	dirs	ds2	exts	es	root	r
			.lift
			.yield	res
		.case	nil
			.force	_ibio.file.name.components.get_worker_:_false_nil_k
			.coerce	bool.t.out
			.app	c	_dot
			.enter	rune.≡

_ibio.file.name.components.get_worker_:_false_nil_k	.forcecont	# In the basename
rune.t	.tygvar
_ibio.file.name.components.get_worker_res.u	.tygvar
list.t	.tygvar
bool.prim.u	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
list.:	.gvar
list.nil	.gvar
string.ty	.tylet	list.t	rune.t
c	.fv	rune.t
cs1	.fv	_ibio.file.name.components.get_worker_res.u
ds	.fv	list.t	string.ty
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
es			.field	exts	cs1
r1			.field	root	cs1
r			.apply	list.:	rune.t	|	c	r1
cs			.record	dirs	ds	exts	es	root	r
			.lift
			.yield	cs
		.case	true
es1			.field	exts	cs1
r1			.field	root	cs1
es			.apply	list.:	string.ty	|	r1	es1
r			.apply	list.nil	rune.t
cs			.record	dirs	ds	exts	es	root	r
			.lift
			.yield	cs

_ibio.file.name.components.get_worker_:_true_k	.forcecont	# First character r{/}
_ibio.file.name.components.get_worker_res.u	.tygvar
string.t	.tygvar
rune.t	.tygvar
list.t	.tygvar	# Temp
list.:	.gvar
list.nil	.gvar
cs1	.karg	_ibio.file.name.components.get_worker_res.u
nil	.apply	list.nil	rune.t
ds	.undefined	list.t	string.t
ds1	.apply	list.:	string.t	|	nil	ds
es	.field	exts	cs1
r	.field	root	cs1
res	.record	dirs	ds1	exts	es	root	r
	.lift
	.yield	res

# §section §gs{ibio.file.name.extension.set}

_ibio.file.name.extension.set_c	.expr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.extension.set_id_c	.subcode
ibio.file.name.with	.gvar
_ibio.file.name.extension.set_worker	.gvar
ext	.larg	list.t	rune.t
id	.alloc	_ibio.file.name.extension.set_id_c
w	.apply	_ibio.file.name.extension.set_worker	|	ext	id	id
	.app	w
	.enter	ibio.file.name.with

_ibio.file.name.extension.set_id_c	.expr
list.t	.tygvar
rune.t	.tygvar
s	.larg	list.t	rune.t
	.enter	s

_ibio.file.name.extension.set_worker_c	.expr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.extension.set_worker_f_ty	.tygvar
_ibio.file.name.extension.set_worker_k	.subcode
list.t.out	.cogvar
ext	.larg	list.t	rune.t
pre.0	.larg	_ibio.file.name.extension.set_worker_f_ty
pre.1	.larg	_ibio.file.name.extension.set_worker_f_ty
s	.larg	list.t	rune.t
	.force	_ibio.file.name.extension.set_worker_k
	.coerce	list.t.out	rune.t
	.enter	s

_ibio.file.name.extension.set_worker_k	.forcecont
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.extension.set_worker_f_ty	.tygvar
list.prim.u	.tygvar
_ibio.file.name.extension.set_worker_k1	.subcode
bool.t.out	.cogvar
rune.≡	.gvar
_slash	.gvar
ext	.fv	list.t	rune.t
pre.0	.fv	_ibio.file.name.extension.set_worker_f_ty
pre.1	.fv	_ibio.file.name.extension.set_worker_f_ty
s0	.karg	list.prim.u	rune.t
	.analyze	s0	:	nil
		.case	:
c		.fkarg	0	rune.t
s1		.fkarg	1	list.t	rune.t
			.force	_ibio.file.name.extension.set_worker_k1
			.coerce	bool.t.out
			.app	c	_slash
			.enter	rune.≡
		.case	nil
			.app	ext
			.enter	pre.0

_ibio.file.name.extension.set_worker_k1	.forcecont
bool.prim.u	.tygvar
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.extension.set_worker_f_ty	.tygvar
_ibio.file.name.extension.set_worker_k2	.subcode
_ibio.file.name.extension.set_worker_pre0.1_c	.subcode
_ibio.file.name.extension.set_worker_id_c	.subcode
bool.t.out	.cogvar
rune.≡	.gvar
_dot	.gvar
_ibio.file.name.extension.set_worker	.gvar
ext	.fv	list.t	rune.t
pre.0	.fv	_ibio.file.name.extension.set_worker_f_ty
pre.1	.fv	_ibio.file.name.extension.set_worker_f_ty
c	.fv	rune.t
s1	.fv	list.t	rune.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false	# §gs{c ≠ r{/}}
			.force	_ibio.file.name.extension.set_worker_k2
			.coerce	bool.t.out
			.app	c	_dot
			.enter	rune.≡
		.case	true	# §gs{c ≡ r{/}}
pre0.1			.alloc	_ibio.file.name.extension.set_worker_pre0.1_c
id			.alloc	_ibio.file.name.extension.set_worker_id_c
			.app	ext	pre0.1	id	s1
			.enter	_ibio.file.name.extension.set_worker

_ibio.file.name.extension.set_worker_k2	.forcecont
bool.prim.u	.tygvar
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.extension.set_worker_f_ty	.tygvar
_ibio.file.name.extension.set_worker_pre1.1_c	.subcode
_ibio.file.name.extension.set_worker_pre0.1_c	.subcode
_ibio.file.name.extension.set_worker_id_c	.subcode
_ibio.file.name.extension.set_worker	.gvar
ext	.fv	list.t	rune.t
pre.0	.fv	_ibio.file.name.extension.set_worker_f_ty
pre.1	.fv	_ibio.file.name.extension.set_worker_f_ty
c	.fv	rune.t
s1	.fv	list.t	rune.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false	# §gs{c ≠ r/./}
pre1.1			.alloc	_ibio.file.name.extension.set_worker_pre1.1_c
			.app	ext	pre.0	pre1.1	s1
			.enter	_ibio.file.name.extension.set_worker
		.case	true	# §gs{c ≡ r/./}
pre0.1			.alloc	_ibio.file.name.extension.set_worker_pre0.1_c
id			.alloc	_ibio.file.name.extension.set_worker_id_c
			.app	ext	pre0.1	id	s1
			.enter	_ibio.file.name.extension.set_worker

_ibio.file.name.extension.set_worker_pre1.1_c	.expr
_ibio.file.name.extension.set_worker_f_ty	.tygvar
rune.t	.tygvar
list.t	.tygvar
list.:	.gvar
pre.1	.fv	_ibio.file.name.extension.set_worker_f_ty
c	.fv	rune.t
s1	.larg	list.t	rune.t
s2	.apply	list.:	rune.t	|	c	s1
	.app	s2
	.enter	pre.1

_ibio.file.name.extension.set_worker_pre0.1_c	.expr
_ibio.file.name.extension.set_worker_f_ty	.tygvar
rune.t	.tygvar
list.t	.tygvar
list.:	.gvar
pre.0	.fv	_ibio.file.name.extension.set_worker_f_ty
pre.1	.fv	_ibio.file.name.extension.set_worker_f_ty
c	.fv	rune.t
s1	.larg	list.t	rune.t
s2	.apply	list.:	rune.t	|	c	s1
s3	.apply	pre.1	|	s2
	.app	s3
	.enter	pre.0

_ibio.file.name.extension.set_worker_id_c	.expr
list.t	.tygvar
rune.t	.tygvar
s1	.larg	list.t	rune.t
	.enter	s1

# §section §gs{ibio.file.name.</>}

_ibio.file.name.</>_c	.expr
ibio.file.name.t	.tygvar
ibio.file.name.out	.gvar
_ibio.file.name.</>_worker	.gvar
ibio.file.name.in	.gvar
dn	.larg	ibio.file.name.t
fn	.larg	ibio.file.name.t
dn0	.apply	ibio.file.name.out	|	dn
fn0	.apply	ibio.file.name.out	|	fn
res	.apply	_ibio.file.name.</>_worker	|	dn0	fn0
	.app	res
	.enter	ibio.file.name.in

_ibio.file.name.</>_worker_c	.expr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.</>_worker_k0	.subcode
list.t.out	.cogvar
dn	.larg	list.t	rune.t
fn	.larg	list.t	rune.t
	.force	_ibio.file.name.</>_worker_k0
	.coerce	list.t.out	rune.t
	.enter	dn

_ibio.file.name.</>_worker_k0	.forcecont
list.prim.u	.tygvar
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.</>_worker_k1	.subcode
list.t.out	.cogvar
fn	.fv	list.t	rune.t
dn0	.karg	list.prim.u	rune.t
	.analyze	dn0	:	nil
		.case	:
c		.fkarg	0	rune.t
dn1		.fkarg	1	list.t	rune.t
			.force	_ibio.file.name.</>_worker_k1
			.coerce	list.t.out	rune.t
			.enter	dn1
		.case	nil
			.undef	list.t	rune.t

_ibio.file.name.</>_worker_k1	.forcecont
list.prim.u	.tygvar
rune.t	.tygvar
list.t	.tygvar
_ibio.file.name.</>_worker_k1_nil_k	.subcode
bool.t.out	.cogvar
_ibio.file.name.</>_worker	.gvar
list.:	.gvar
rune.≡	.gvar
_slash	.gvar
c	.fv	rune.t
dn1	.fv	list.t	rune.t
fn	.fv	list.t	rune.t
dn1.0	.karg	list.prim.u	rune.t
	.analyze	dn1.0	:	nil
		.case	:
c1		.fkarg	0	rune.t
dn2		.fkarg	1	list.t	rune.t
fn1			.apply	_ibio.file.name.</>_worker	|	dn1	fn
			.app	c	fn1
			.enter	list.:	rune.t
		.case	nil
			.force	_ibio.file.name.</>_worker_k1_nil_k
			.coerce	bool.t.out
			.app	c	_slash
			.enter	rune.≡

_ibio.file.name.</>_worker_k1_nil_k	.forcecont
rune.t	.tygvar
list.t	.tygvar
bool.prim.u	.tygvar
list.:	.gvar
_slash	.gvar
c	.fv	rune.t
fn	.fv	list.t	rune.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
fn1			.apply	list.:	rune.t	|	_slash	fn
			.app	c	fn1
			.enter	list.:	rune.t
		.case	true
			.app	_slash	fn
			.enter	list.:	rune.t

# §section §gs{ibio.file.name.compare}

_ibio.file.name.compare_c	.expr
ibio.file.name.t	.tygvar
string.compare	.gvar
ibio.file.name.out	.gvar
fn0	.larg	ibio.file.name.t
fn1	.larg	ibio.file.name.t
fn0.s	.apply	ibio.file.name.out	|	fn0
fn1.s	.apply	ibio.file.name.out	|	fn1
	.app	fn0.s	fn1.s
	.enter	string.compare

# §section §gs{ibio.file.name.fmtgs}

_ibio.file.name.fmtgs_c	.expr
rune.t	.tygvar
diff.list.t	.tygvar
ibio.file.name.t	.tygvar
fmtgs.prec	.gvar
fmtgs.prec.arg	.gvar
diff.list.prepend	.gvar
_ibio.file.name.fmtgs_prefix	.gvar
list.foldr	.gvar
diff.list.<>	.gvar
diff.list.fromlist	.gvar
_ibio.file.name.fmtgs_suffix	.gvar
list.map	.gvar
rune.togss	.gvar
ibio.file.name.out	.gvar
diff.string.ty	.tylet	diff.list.t	rune.t
fn	.larg	ibio.file.name.t
s	.apply	ibio.file.name.out	|	fn
<>	.apply	diff.list.<>	rune.t
s2	.apply	diff.list.fromlist	rune.t	|	_ibio.file.name.fmtgs_suffix
s1s	.apply	list.map	rune.t	diff.string.ty	|	rune.togss	s
s1	.apply	list.foldr	diff.string.ty	diff.string.ty	|	<>	s2	s1s
ds	.apply	diff.list.prepend	rune.t	|	_ibio.file.name.fmtgs_prefix	s1
	.app	fmtgs.prec.arg	ds
	.enter	fmtgs.prec

# §section Random data

_slash_c	.expr
rune.t.in	.cogvar
sl	.rune	/
	.coerce	rune.t.in
	.lift
	.yield	sl

_dot_c	.expr
rune.t.in	.cogvar
do	.rune	.
	.coerce	rune.t.in
	.lift
	.yield	do

	.type

ibio.file.name.t	.tyabstract	*
list.t	.tygvar
rune.t	.tygvar
	.tyref	list.t	rune.t

# §section §gs{ibio.file.name.with}

_ibio.file.name.with_f_ty	.tyexpr
list.t	.tygvar
rune.t	.tygvar
	.tylift
	.tyfun	list.t	rune.t
	.tyref	list.t	rune.t

# §section §gs{ibio.file.name.components.get}

_ibio.file.name.components.get_worker_ty	.tyexpr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.components.get_worker_res.ty	.tygvar
	.tylift
	.tyfun	list.t	rune.t
	.tyref	_ibio.file.name.components.get_worker_res.ty

_ibio.file.name.components.get_worker_res.ty	.tyexpr
_ibio.file.name.components.get_worker_res.u	.tygvar
	.tylift
	.tyref	_ibio.file.name.components.get_worker_res.u

_ibio.file.name.components.get_worker_res.u	.tyexpr
list.t	.tygvar
string.t	.tygvar
list.string.ty	.tylet	list.t	string.t
	.typroduct	dirs	list.string.ty	exts	list.string.ty	root	string.t

# §section §gs{ibio.file.name.extension.set}

_ibio.file.name.extension.set_worker_ty	.tyexpr
list.t	.tygvar
rune.t	.tygvar
_ibio.file.name.extension.set_worker_f_ty	.tygvar
	.tylift
	.tyfun	list.t	rune.t
	.tylift
	.tyfun	_ibio.file.name.extension.set_worker_f_ty
	.tylift
	.tyfun	_ibio.file.name.extension.set_worker_f_ty
	.tylift
	.tyfun	list.t	rune.t
	.tyref	list.t	rune.t

_ibio.file.name.extension.set_worker_f_ty	.tyexpr
list.t	.tygvar
rune.t	.tygvar
	.tylift
	.tyfun	list.t	rune.t
	.tyref	list.t	rune.t

# §section §gs{ibio.file.name.</>}

_ibio.file.name.</>_worker_ty	.tyexpr
list.t	.tygvar
rune.t	.tygvar
	.tylift
	.tyfun	list.t	rune.t
	.tylift
	.tyfun	list.t	rune.t
	.tyref	list.t	rune.t

	.coercion

ibio.file.name.in	.tycoercion
ibio.file.name.t	.tygvar
	.tydefinition	ibio.file.name.t

ibio.file.name.out	.tycoercion
ibio.file.name.t	.tygvar
	.tyinvert
	.tydefinition	ibio.file.name.t
