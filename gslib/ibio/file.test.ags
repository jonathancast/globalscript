	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.eq.foo.bar	_test.fmtgs.foo

_test.eq.foo.bar	.closure	_test.eq.foo.bar_c
_test.eq.foo.bar_label	.string	ibio.file.name.≡\sfn<./foo>\sfn<./bar>
_test.eq.foo.bar_false.msg	.string	fn<./foo>\s≠fn<./bar>
_test.eq.foo.bar_true.msg	.string	fn<./foo>\s≡fn<./bar>
_test.eq.foo.bar_foo.fn.s	.string	./foo
_test.eq.foo.bar_bar.fn.s	.string	./bar

_test.fmtgs.foo	.closure	_test.fmtgs.foo_c
_test.fmtgs.foo_label	.string	fmtgs\sfn<./foo>
_test.fmtgs.foo_fn.s	.string	./foo
_test.fmtgs.foo_expected	.string	fn<./foo>

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section §gs{fn<./foo> ≡ fn<./bar>}

_test.eq.foo.bar_c	.expr
test.property.label	.gvar
_test.eq.foo.bar_label	.gvar
test.deny	.gvar
_test.eq.foo.bar_false.msg	.gvar
_test.eq.foo.bar_true.msg	.gvar
ibio.file.name.≡	.gvar
ibio.file.name.in	.gvar
_test.eq.foo.bar_foo.fn.s	.gvar
_test.eq.foo.bar_bar.fn.s	.gvar
foo.fn	.apply	ibio.file.name.in	|	_test.eq.foo.bar_foo.fn.s
bar.fn	.apply	ibio.file.name.in	|	_test.eq.foo.bar_bar.fn.s
eq	.apply	ibio.file.name.≡	|	foo.fn	bar.fn
test	.apply	test.deny	|	_test.eq.foo.bar_false.msg	_test.eq.foo.bar_true.msg	eq
	.app	_test.eq.foo.bar_label	test
	.enter	test.property.label

# §section §gs{fmtgs fn<./foo>}

_test.fmtgs.foo_c	.expr
string.t	.tygvar
rune.t	.tygvar
test.property.label	.gvar
_test.fmtgs.foo_label	.gvar
test.assert.eq	.gvar
string.≡	.gvar
string.fmtgs	.gvar
ibio.file.name.fmtgs	.gvar
ibio.file.name.in	.gvar
_test.fmtgs.foo_fn.s	.gvar
list.nil	.gvar
_test.fmtgs.foo_expected	.gvar
fn	.apply	ibio.file.name.in	|	_test.fmtgs.foo_fn.s
snil	.apply	list.nil	rune.t
actual	.apply	ibio.file.name.fmtgs	|	fn	snil
test	.apply	test.assert.eq	string.t	|	string.≡	string.fmtgs	actual	_test.fmtgs.foo_expected
	.app	_test.fmtgs.foo_label	test
	.enter	test.property.label
