	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.eq.foo.bar	_test.fmtgs.foo	_test.exts.of.qual.fn

_test.eq.foo.bar	.closure	_test.eq.foo.bar_c
_test.eq.foo.bar_label	.string	ibio.file.name.≡\sfn<./foo>\sfn<./bar>
_test.eq.foo.bar_false.msg	.string	fn<./foo>\s≠fn<./bar>
_test.eq.foo.bar_true.msg	.string	fn<./foo>\s≡fn<./bar>
_test.eq.foo.bar_foo.fn.s	.string	./foo
_test.eq.foo.bar_bar.fn.s	.string	./bar

_test.fmtgs.foo	.closure	_test.fmtgs.foo_c
_test.fmtgs.foo_label	.string	fmtgs\sfn<./foo>
_test.fmtgs.foo_fn.s	.string	./foo
_test.fmtgs.foo_expected	.string	fn<./foo>

_test.exts.of.qual.fn	.closure	_test.exts.of.qual.fn_c
_test.exts.of.qual.fn_label	.string	\hexts\s(components.get\sfn<foo/bar.gs>)
_test.exts.of.qual.fn_fn.s	.string	foo/bar.gs
_test.exts.of.qual.fn_expected	.list	string.t	_test.exts.of.qual.fn_expected_bar.s
_test.exts.of.qual.fn_expected_bar.s	.string	gs

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section §gs{fn<./foo> ≡ fn<./bar>}

_test.eq.foo.bar_c	.expr
test.property.label	.gvar
_test.eq.foo.bar_label	.gvar
test.deny	.gvar
_test.eq.foo.bar_false.msg	.gvar
_test.eq.foo.bar_true.msg	.gvar
ibio.file.name.≡	.gvar
ibio.file.name.in	.gvar
_test.eq.foo.bar_foo.fn.s	.gvar
_test.eq.foo.bar_bar.fn.s	.gvar
foo.fn	.apply	ibio.file.name.in	|	_test.eq.foo.bar_foo.fn.s
bar.fn	.apply	ibio.file.name.in	|	_test.eq.foo.bar_bar.fn.s
eq	.apply	ibio.file.name.≡	|	foo.fn	bar.fn
test	.apply	test.deny	|	_test.eq.foo.bar_false.msg	_test.eq.foo.bar_true.msg	eq
	.app	_test.eq.foo.bar_label	test
	.enter	test.property.label

# §section §gs{fmtgs fn<./foo>}

_test.fmtgs.foo_c	.expr
string.t	.tygvar
rune.t	.tygvar
test.property.label	.gvar
_test.fmtgs.foo_label	.gvar
test.assert.eq	.gvar
string.≡	.gvar
string.fmtgs	.gvar
ibio.file.name.fmtgs	.gvar
ibio.file.name.in	.gvar
_test.fmtgs.foo_fn.s	.gvar
fmtgs.prec.app	.gvar
list.nil	.gvar
_test.fmtgs.foo_expected	.gvar
fn	.apply	ibio.file.name.in	|	_test.fmtgs.foo_fn.s
snil	.apply	list.nil	rune.t
actual	.apply	ibio.file.name.fmtgs	|	fn	fmtgs.prec.app	snil
test	.apply	test.assert.eq	string.t	|	string.≡	string.fmtgs	actual	_test.fmtgs.foo_expected
	.app	_test.fmtgs.foo_label	test
	.enter	test.property.label

# §section §gs{#exts (components.get fn<foo/bar.gs>)}

_test.exts.of.qual.fn_c	.expr
list.t	.tygvar
string.t	.tygvar
list.string.ty	.tylet	list.t	string.t
test.property.label	.gvar
_test.exts.of.qual.fn_label	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
ibio.file.name.components.get	.gvar
ibio.file.name.in	.gvar
_test.exts.of.qual.fn_fn.s	.gvar
_test.exts.of.qual.fn_expected	.gvar
list.string.≡	.apply	list.≡	string.t	|	string.≡
list.string.fmtgs	.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
fn	.apply	ibio.file.name.in	|	_test.exts.of.qual.fn_fn.s
cs	.apply	ibio.file.name.components.get	|	fn
actual	.lfield	exts	cs
test	.apply	test.assert.eq	list.string.ty	|	list.string.≡	list.string.fmtgs	actual	_test.exts.of.qual.fn_expected
	.app	_test.exts.of.qual.fn_label	test
	.enter	test.property.label
