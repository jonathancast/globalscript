	.prefix

	.data

bool.true	.closure	_bool.true.c
bool.false	.closure	_bool.false.c

bool.≡	.closure	_bool.≡.c

bool.∧	.closure	_bool.∧.c

	.code

# §section Constructors

_bool.true.c	.expr
bool.prim.u	.tygvar
bool.t.in	.cogvar
c	.constr	bool.prim.u	true
	.coerce	bool.t.in
	.lift
	.yield	c

_bool.false.c	.expr
bool.prim.u	.tygvar
bool.t.in	.cogvar
c	.constr	bool.prim.u	false
	.coerce	bool.t.in
	.lift
	.yield	c

# §section §gs{bool.≡}

_bool.≡.c	.expr
bool.t	.tygvar
_bool.≡.k0	.subcode
bool.t.out	.cogvar
a	.larg	bool.t
b	.larg	bool.t
	.force	_bool.≡.k0	|	b
	.coerce	bool.t.out
	.enter	a

_bool.≡.k0	.forcecont
bool.t	.tygvar
bool.prim.u	.tygvar
_bool.≡.k1	.subcode
bool.t.out	.cogvar
b	.fv	bool.t
a0	.karg	bool.prim.u
	.force	_bool.≡.k1	|	a0
	.coerce	bool.t.out
	.enter	b

_bool.≡.k1	.forcecont
bool.t	.tygvar
bool.prim.u	.tygvar
bool.true	.gvar
bool.false	.gvar
a0	.fv	bool.prim.u
b0	.karg	bool.prim.u
	.analyze	a0	false	true
	.case	false
		.analyze	b0	false	true
		.case	false
			.enter	bool.true
		.case	true
			.enter	bool.false
	.case	true
		.undef	bool.t

# §section §gs{bool.∧}

_bool.∧.c	.expr
bool.t	.tygvar
_bool.∧.k	.subcode
bool.t.out	.cogvar
b0	.larg	bool.t
b1	.larg	bool.t
	.force	_bool.∧.k	|	b1
	.coerce	bool.t.out
	.enter	b0

_bool.∧.k	.forcecont
bool.t	.tygvar
bool.prim.u	.tygvar
bool.false	.gvar
b1	.fv	bool.t
b00	.karg	bool.prim.u
	.analyze	b00	false	true
	.case	false
		.enter	bool.false
	.case	true
		.enter	b1

	.type

bool.t	.tyabstract	*
bool.prim.u	.tygvar
	.tylift
	.tyref	bool.prim.u

bool.prim.u	.tyexpr
_false.arg.ty	.tygvar
_true.arg.ty	.tygvar
	.tysum	false	_false.arg.ty	true	_true.arg.ty

_false.arg.ty	.tyexpr
	.tyubproduct

_true.arg.ty	.tyexpr
	.tyubproduct

	.coercion

bool.t.out	.tycoercion
bool.t	.tygvar
	.tyinvert
	.tydefinition	bool.t

bool.t.in	.tycoercion
bool.t	.tygvar
	.tydefinition	bool.t
