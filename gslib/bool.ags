#calculus: gsdl.string-code 0.6

	.prefix

	.data

bool.true	.closure	_bool.true.c
bool.false	.closure	_bool.false.c

bool.≡	.closure	_bool.≡.c
bool.compare	.closure	_bool.compare_c

bool.not	.closure	_bool.not_c
bool.∧	.closure	_bool.∧.c
bool.∨	.closure	_bool.∨_c

bool.fmtgs	.closure	_bool.fmtgs_c	_bool.fmtgs_ty
_bool.fmtgs_false.s	.string	false
_bool.fmtgs_true.s	.string	true
bool.fmtgs.list	.closure	_bool.fmtgs.list_c

	.code

-- §section Constructors

_bool.true.c	.expr
bool.prim.u	.tygvar
bool.t.in	.cogvar
c	.constr	bool.prim.u	true
	.coerce	bool.t.in
	.lift
	.yield	c

_bool.false.c	.expr
bool.prim.u	.tygvar
bool.t.in	.cogvar
c	.constr	bool.prim.u	false
	.coerce	bool.t.in
	.lift
	.yield	c

-- §section §gs{bool.≡}

_bool.≡.c	.expr
bool.t	.tygvar
_bool.≡.k0	.subcode
bool.t.out	.cogvar
a	.larg	bool.t
b	.larg	bool.t
	.force	_bool.≡.k0
	.coerce	bool.t.out
	.enter	a

_bool.≡.k0	.forcecont
bool.t	.tygvar
bool.prim.u	.tygvar
bool.not	.gvar
b	.fv	bool.t
a0	.karg	bool.prim.u
	.analyze	a0	false	true
	.case	false
		.app	b
		.enter	bool.not
	.case	true
		.enter	b

-- §section §gs{bool.compare}

_bool.compare_c	.expr
bool.t	.tygvar
order.total.ord.t	.tygvar
_bool.compare_k0	.subcode
bool.t.out	.cogvar
b0	.larg	bool.t
b1	.larg	bool.t
	.force	_bool.compare_k0
	.coerce	bool.t.out
	.enter	b0

_bool.compare_k0	.forcecont
bool.t	.tygvar
bool.prim.u	.tygvar
_bool.compare_k1	.subcode
bool.t.out	.cogvar
b1	.fv	bool.t
b0.0	.karg	bool.prim.u
	.force	_bool.compare_k1
	.coerce	bool.t.out
	.enter	b1

_bool.compare_k1	.forcecont
bool.prim.u	.tygvar
order.total.ord.t	.tygvar
order.total.ord.eq	.gvar
b0.0	.fv	bool.prim.u
b1.0	.karg	bool.prim.u
	.analyze	b0.0	false	true
		.case	false
			.analyze	b1.0	false	true
				.case	false
					.enter	order.total.ord.eq
				.case	true
					.undef	order.total.ord.t
		.case	true
			.analyze	b1.0	false	true
				.case	false
					.undef	order.total.ord.t
				.case	true
					.enter	order.total.ord.eq

-- §section §gs{bool.not}

_bool.not_c	.expr
bool.t	.tygvar
_bool.not_k	.subcode
bool.t.out	.cogvar
b	.larg	bool.t
	.force	_bool.not_k
	.coerce	bool.t.out
	.enter	b

_bool.not_k	.forcecont
bool.prim.u	.tygvar
bool.true	.gvar
bool.false	.gvar
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
			.enter	bool.true
		.case	true
			.enter	bool.false

-- §section §gs{bool.∧}

_bool.∧.c	.expr
bool.t	.tygvar
_bool.∧.k	.subcode
bool.t.out	.cogvar
b0	.larg	bool.t
b1	.larg	bool.t
	.force	_bool.∧.k
	.coerce	bool.t.out
	.enter	b0

_bool.∧.k	.forcecont
bool.t	.tygvar
bool.prim.u	.tygvar
bool.false	.gvar
b1	.fv	bool.t
b0.0	.karg	bool.prim.u
	.analyze	b0.0	false	true
	.case	false
		.enter	bool.false
	.case	true
		.enter	b1

-- §section §gs{bool.∨}

_bool.∨_c	.expr
bool.t	.tygvar
_bool.∨_k	.subcode
bool.t.out	.cogvar
b0	.larg	bool.t
b1	.larg	bool.t
	.force	_bool.∨_k
	.coerce	bool.t.out
	.enter	b0

_bool.∨_k	.forcecont
bool.t	.tygvar
bool.prim.u	.tygvar
bool.true	.gvar
b1	.fv	bool.t
b0.0	.karg	bool.prim.u
	.analyze	b0.0	false	true
		.case	false
			.enter	b1
		.case	true
			.enter	bool.true

-- §section §gs{bool.fmtgs}

_bool.fmtgs_c	.expr
bool.t	.tygvar
_bool.fmtgs_k	.subcode
bool.t.out	.cogvar
b	.larg	bool.t
	.force	_bool.fmtgs_k
	.coerce	bool.t.out
	.enter	b

_bool.fmtgs_k	.forcecont
bool.prim.u	.tygvar
fmtgs.var	.gvar
_bool.fmtgs_false.s	.gvar
_bool.fmtgs_true.s	.gvar
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
			.app	_bool.fmtgs_false.s
			.enter	fmtgs.var
		.case	true
			.app	_bool.fmtgs_true.s
			.enter	fmtgs.var

_bool.fmtgs.list_c	.expr
bool.t	.tygvar
list.fmtgs.byDefault	.gvar
bool.fmtgs	.gvar
	.app	bool.fmtgs
	.enter	list.fmtgs.byDefault	bool.t

	.type

bool.t	.tyabstract	*
bool.prim.u	.tygvar
	.tylift
	.tyref	bool.prim.u

bool.prim.u	.tyexpr
_false.arg.ty	.tygvar
_true.arg.ty	.tygvar
	.tysum	false	_false.arg.ty	true	_true.arg.ty

_false.arg.ty	.tyexpr
	.tyubproduct

_true.arg.ty	.tyexpr
	.tyubproduct

_bool.fmtgs_ty	.tyexpr
fmtgs.t	.tygvar
bool.t	.tygvar
	.tyref	fmtgs.t	bool.t

	.coercion

bool.t.out	.tycoercion
bool.t	.tygvar
	.tyinvert
	.tydefinition	bool.t

bool.t.in	.tycoercion
bool.t	.tygvar
	.tydefinition	bool.t
