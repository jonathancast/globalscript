#calculus: gsdl.string-code 0.6

	.prefix

	.data

test.true	.closure	_test.true_c
_test.true_s	.string	Test\ssucceeded

test.assert	.closure	_test.assert_c
test.deny	.closure	_test.deny_c

test.all	.closure	_test.all_c
_test.all_no.tests.label	.string	No\stests

	.code

-- §section §gs{test.true}

_test.true_c	.expr
test.property.true	.gvar
_test.true_s	.gvar
	.app	_test.true_s
	.enter	test.property.true

-- §section §gs{test.assert}

_test.assert_c	.expr
bool.t	.tygvar
string.t	.tygvar
_test.assert.c.c	.subcode
bool.t.out	.cogvar
f	.larg	string.t
s	.larg	string.t
b	.larg	bool.t
	.force	_test.assert.c.c
	.coerce	bool.t.out
	.enter	b

_test.assert.c.c	.forcecont
test.property.t	.tygvar
bool.prim.u	.tygvar
string.t	.tygvar
test.property.true	.gvar
test.property.false	.gvar
f	.fv	string.t
s	.fv	string.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
	.case	false
	.app	f
	.enter	test.property.false
	.case	true
	.app	s
	.enter	test.property.true

-- §section §gs{test.deny}

_test.deny_c	.expr
string.t	.tygvar
bool.t	.tygvar
_test.deny_k	.subcode
bool.t.out	.cogvar
fm	.larg	string.t
tm	.larg	string.t
b	.larg	bool.t
	.force	_test.deny_k
	.coerce	bool.t.out
	.enter	b

_test.deny_k	.forcecont
bool.prim.u	.tygvar
string.t	.tygvar
test.property.true	.gvar
test.property.false	.gvar
fm	.fv	string.t
tm	.fv	string.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
			.app	fm
			.enter	test.property.true
		.case	true
			.app	tm
			.enter	test.property.false

-- §section §gs{test.all}

_test.all_c	.expr
list.t	.tygvar
test.property.t	.tygvar
_test.all_k1	.subcode
list.t.out	.cogvar
ts	.larg	list.t	test.property.t
	.force	_test.all_k1
	.coerce	list.t.out	test.property.t
	.enter	ts

_test.all_k1	.forcecont
list.t	.tygvar
list.prim.u	.tygvar
test.property.t	.tygvar
list.foldr1	.gvar
test.property.∧	.gvar
test.property.true	.gvar
_test.all_no.tests.label	.gvar
ts	.fv	list.t	test.property.t
t	.tylet	list.prim.u	test.property.t
ts0	.karg	t
	.analyze	ts0	:	nil
		.case	:
t0		.fkarg	0	test.property.t
ts1		.fkarg	1	list.t	test.property.t
			.app	test.property.∧	ts
			.enter	list.foldr1	test.property.t
		.case	nil
			.app	_test.all_no.tests.label
			.enter	test.property.true
