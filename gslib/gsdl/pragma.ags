#calculus: gsdl.string-code 0.5

	.prefix

	.data

gsdl.pragma.read	.closure	_gsdl.pragma.read_c

gsdl.pragma.line	.closure	_gsdl.pragma.line_c

gsdl.pragma.blank.line	.closure	_gsdl.pragma.blank.line_c	_gsdl.pragma.blank.line_ty

gsdl.pragma.parse	.closure	_gsdl.pragma.parse_c
_gsdl.pragma.parse_colon.re	.regex	:
_gsdl.pragma.parse_ws.re	.regex	\s*
_gsdl.pragma.parse_ws.nl.re	.regex	\s*\n

gsdl.pragma.gstype.get	.closure	_gsdl.pragma.gstype.get_c
_gsdl.pragma.gstype.get_gstype.s	.string	type

	.code

-- §section §gs{gsdl.pragma.read}

_gsdl.pragma.read_c	.impprog	ibio.prim	ibio
ibio.prim.oport	.tygvar
rune.t	.tygvar
ibio.file.name.t	.tygvar
ibio.prim.iport	.tygvar
_gsdl.pragma.read_pr.ls_c	.subcode
_gsdl.pragma.read_body_c	.subcode
eo	.larg	ibio.prim.oport	rune.t
fn	.larg	ibio.file.name.t
i	.larg	ibio.prim.iport	rune.t
pr.ls	.bind	.closure	_gsdl.pragma.read_pr.ls_c
	.body	.closure	_gsdl.pragma.read_body_c

_gsdl.pragma.read_pr.ls_c	.expr
ibio.prim.iport	.tygvar
rune.t	.tygvar
list.t	.tygvar
ibio.lex.receiver.lexeme.t	.tygvar
ibio.lex.receive	.gvar
ibio.lex.receiver.many	.gvar
ibio.lex.receiver.<|>	.gvar
gsdl.pragma.line	.gvar
gsdl.pragma.blank.line	.gvar
i	.fv	ibio.prim.iport	rune.t
string.ty	.tylet	list.t	rune.t
res.ty	.tylet	list.t	string.ty
l	.apply	ibio.lex.receiver.<|>	rune.t	string.ty	|	gsdl.pragma.line	gsdl.pragma.blank.line
ml	.apply	ibio.lex.receiver.many	rune.t	string.ty	|	l
	.app	ml	i
	.enter	ibio.lex.receive	rune.t	res.ty

_gsdl.pragma.read_body_c	.expr
ibio.prim.oport	.tygvar
rune.t	.tygvar
ibio.file.name.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsdl.pragma.read_res.ty	.tygvar
gsdl.pragma.t	.tygvar
_gsdl.pragma.read_insert_c	.subcode
ibio.foldM.prim	.gvar
parser.pos.initial	.gvar
ordered.map.empty	.gvar
eo	.fv	ibio.prim.oport	rune.t
fn	.fv	ibio.file.name.t
pr.ls	.fv	list.t	string.t
insert	.closure	_gsdl.pragma.read_insert_c
pos	.apply	parser.pos.initial	|	fn
prs	.apply	ordered.map.empty	string.t	gsdl.pragma.t
empty	.lrecord	pos	pos	pragmas	prs
	.app	insert	empty	pr.ls
	.enter	ibio.foldM.prim	string.t	_gsdl.pragma.read_res.ty

_gsdl.pragma.read_insert_c	.expr
ibio.prim.oport	.tygvar
rune.t	.tygvar
_gsdl.pragma.read_res.ty	.tygvar
list.t	.tygvar
_gsdl.pragma.read_insert_k0	.subcode
list.t.out	.cogvar
eo	.fv	ibio.prim.oport	rune.t
p	.larg	_gsdl.pragma.read_res.ty
l	.larg	list.t	rune.t
	.force	_gsdl.pragma.read_insert_k0
	.coerce	list.t.out	rune.t
	.enter	l

_gsdl.pragma.read_insert_k0	.forcecont
ibio.prim.oport	.tygvar
rune.t	.tygvar
_gsdl.pragma.read_res.ty	.tygvar
list.t	.tygvar
list.prim.u	.tygvar
ibio.prim.t	.tygvar
_gsdl.pragma.read_insert_k1	.subcode
bool.t.out	.cogvar
rune.≡	.gvar
rune.number.sign	.gvar
eo	.fv	ibio.prim.oport	rune.t
p	.fv	_gsdl.pragma.read_res.ty
l0	.karg	list.prim.u	rune.t
	.analyze	l0	:	nil
		.case	:
c		.fkarg	0	rune.t
l1		.fkarg	1	list.t	rune.t
			.force	_gsdl.pragma.read_insert_k1
			.coerce	bool.t.out
			.app	c	rune.number.sign
			.enter	rune.≡
		.case	nil
			.undef	ibio.prim.t	_gsdl.pragma.read_res.ty

_gsdl.pragma.read_insert_k1	.forcecont
ibio.prim.oport	.tygvar
rune.t	.tygvar
_gsdl.pragma.read_res.ty	.tygvar
list.t	.tygvar
bool.prim.u	.tygvar
ibio.prim.t	.tygvar
_gsdl.pragma.parse_res.ty	.tygvar
parser.err.t	.tygvar
_gsdl.pragma.read_insert_k2	.subcode
either.t.out	.cogvar
ibio.prim.unit	.gvar
parser.parse	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
parser.pos.next.col	.gvar
gsdl.pragma.parse	.gvar
parser.pos.next.line	.gvar
eo	.fv	ibio.prim.oport	rune.t
p	.fv	_gsdl.pragma.read_res.ty
l1	.fv	list.t	rune.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
pos			.lfield	pos	p
prs			.lfield	pragmas	p
pos1			.apply	parser.pos.next.line	|	pos
pr.pos.1			.lrecord	pos	pos1	pragmas	prs
			.lift
			.app	pr.pos.1
			.yield	ibio.prim.unit	_gsdl.pragma.read_res.ty
		.case	true
pos			.lfield	pos	p
pragmas			.lfield	pragmas	p
pos1			.apply	parser.pos.next.col	|	pos
parser			.apply	gsdl.pragma.parse	-- §todo{Should be §gs{gsdl.cgs.syntax.ws *> gsdl.cgs.pragma.parse}}
			.force	_gsdl.pragma.read_insert_k2
			.coerce	either.t.out	parser.err.t	_gsdl.pragma.parse_res.ty
			.app	parser.rune.advance	rune.print	pos1	parser	l1
			.enter	parser.parse	rune.t	_gsdl.pragma.parse_res.ty

_gsdl.pragma.read_insert_k2	.forcecont
ibio.prim.oport	.tygvar
rune.t	.tygvar
either.prim.u	.tygvar
parser.err.t	.tygvar
_gsdl.pragma.parse_res.ty	.tygvar
parser.pos.t	.tygvar
ordered.map.t	.tygvar
string.t	.tygvar
gsdl.pragma.t	.tygvar
_gsdl.pragma.read_res.ty	.tygvar
_gsdl.pragma.read_insert_k2_left_c	.subcode
ibio.prim.unit	.gvar
parser.pos.next.line	.gvar
ordered.map.insert	.gvar
string.compare	.gvar
eo	.fv	ibio.prim.oport	rune.t
p	.fv	_gsdl.pragma.read_res.ty
e0	.karg	either.prim.u	parser.err.t	_gsdl.pragma.parse_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	parser.err.t
res			.closure	_gsdl.pragma.read_insert_k2_left_c
			.enter	res
		.case	right
k.pr		.fkarg	0	_gsdl.pragma.parse_res.ty
pos			.lfield	pos	p
pos1			.apply	parser.pos.next.line	|	pos
k			.lfield	0	k.pr
pr			.lfield	1	k.pr
prs			.lfield	pragmas	p
prs1			.apply	ordered.map.insert	string.t	gsdl.pragma.t	|	string.compare	k	pr	prs
pr.pos.1			.lrecord	pos	pos1	pragmas	prs1
			.lift
			.app	pr.pos.1
			.yield	ibio.prim.unit	_gsdl.pragma.read_res.ty

_gsdl.pragma.read_insert_k2_left_c	.impprog	ibio.prim	ibio
ibio.prim.oport	.tygvar
rune.t	.tygvar
parser.err.t	.tygvar
_gsdl.pragma.read_insert_k2_left_print_c	.subcode
_gsdl.pragma.read_insert_k2_left_body_c	.subcode
eo	.fv	ibio.prim.oport	rune.t
err	.fv	parser.err.t
	.bind	.closure	_gsdl.pragma.read_insert_k2_left_print_c
	.body	.closure	_gsdl.pragma.read_insert_k2_left_body_c

_gsdl.pragma.read_insert_k2_left_print_c	.expr
ibio.prim.oport	.tygvar
rune.t	.tygvar
parser.err.t	.tygvar
ibio.prim.write	.gvar
string.fmtline	.gvar
parser.err.fmt	.gvar
eo	.fv	ibio.prim.oport	rune.t
err	.fv	parser.err.t
s1	.apply	parser.err.fmt	|	err
s2	.apply	string.fmtline	|	s1
	.app	eo	s2
	.yield	ibio.prim.write	rune.t

_gsdl.pragma.read_insert_k2_left_body_c	.expr
ibio.prim.t	.tygvar
_gsdl.pragma.read_res.ty	.tygvar
	.undef	ibio.prim.t	_gsdl.pragma.read_res.ty

-- §section §gs{gsdl.pragma.line}

_gsdl.pragma.line_c	.expr
ibio.lex.lexeme.t	.tygvar
rune.t	.tygvar
_gsdl.cgs.pragma.line_cons.hash_res.ty	.tygvar
_gsdl.cgs.pragma.line_cons_res.ty	.tygvar
list.t	.tygvar
ibio.lex.receiver.lexeme.<*>	.gvar
ibio.lex.receiver.lexeme.unit	.gvar
list.:	.gvar
ibio.lex.receiver.char	.gvar
rune.≡	.gvar
rune.number.sign	.gvar
ibio.lex.receiver.line.non.empty	.gvar
string.ty	.tylet	list.t	rune.t
cons	.apply	list.:	rune.t
cons.r	.apply	ibio.lex.receiver.lexeme.unit	rune.t	_gsdl.cgs.pragma.line_cons_res.ty	|	cons
hash	.apply	ibio.lex.receiver.char	rune.t	|	rune.≡	rune.number.sign
cons.hash	.apply	ibio.lex.receiver.lexeme.<*>	rune.t	rune.t	_gsdl.cgs.pragma.line_cons.hash_res.ty	|	cons.r	hash
	.app	cons.hash	ibio.lex.receiver.line.non.empty
	.enter	ibio.lex.receiver.lexeme.<*>	rune.t	string.ty	string.ty

-- §section §gs{gsdl.pragma.blank.line}

_gsdl.pragma.blank.line_c	.expr
ibio.lex.receiver.lexeme.t	.tygvar
rune.t	.tygvar
list.t	.tygvar
ibio.lex.receiver.<|>	.gvar
ibio.lex.receiver.lexeme.lift.2	.gvar
list.:	.gvar
ibio.lex.receiver.char	.gvar
rune.≡	.gvar
rune.space	.gvar
gsdl.pragma.blank.line	.gvar
rune.new.line	.gvar
ibio.lex.receiver.lexeme.unit	.gvar
list.nil	.gvar
string.ty	.tylet	list.t	rune.t
cons	.apply	list.:	rune.t
blr	.apply	ibio.lex.receiver.char	rune.t	|	rune.≡	rune.space
consr	.apply	ibio.lex.receiver.lexeme.lift.2	rune.t	rune.t	string.ty	string.ty	|	cons	blr	gsdl.pragma.blank.line
nlr	.apply	ibio.lex.receiver.char	rune.t	|	rune.≡	rune.new.line
nil	.apply	list.nil	rune.t
nilr	.apply	ibio.lex.receiver.lexeme.unit	rune.t	string.ty	|	nil
eolr	.apply	ibio.lex.receiver.lexeme.lift.2	rune.t	rune.t	string.ty	string.ty	|	cons	nlr	nilr
	.app	consr	eolr
	.enter	ibio.lex.receiver.<|>	rune.t	string.ty

-- §section §gs{gsdl.cgs.pragma.parse}

-- > for (
-- >     'nm ← gsdl.cgs.syntax.gsid;
-- >     'pr ← gsdl.cgs.syntax.lexeme m/:/ *> (gsdl.cgs.pragma.rc.like <$> quotes)
-- >         <|> gsdl.cgs.syntax.lexeme m/=/ *> (gsdl.cgs.pragma.json.like <$> json.parse)
-- >    ;
-- > ) [| 《 nm, pr, 》 |]

_gsdl.pragma.parse_c	.expr
parser.t	.tygvar
rune.t	.tygvar
list.t	.tygvar
gsdl.pragma.t	.tygvar
_gsdl.pragma.parse_res.ty	.tygvar
_gsdl.pragma.parse_f_c	.subcode
parser.lift2	.gvar
gsdl.cgs.syntax.gsid	.gvar
parser.*>	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.pragma.parse_colon.re	.gvar
_gsdl.pragma.parse_ws.re	.gvar
parser.<*	.gvar
parser.map	.gvar
parser.string.quotes	.gvar
_gsdl.pragma.parse_ws.nl.re	.gvar
string.ty	.tylet	list.t	rune.t
list.string.ty	.tylet	list.t	string.ty
f	.closure	_gsdl.pragma.parse_f_c
colon.parse	.apply	parser.match	rune.t	|	rune.compare	_gsdl.pragma.parse_colon.re
ws	.apply	parser.match	rune.t	|	rune.compare	_gsdl.pragma.parse_ws.re
ws.nl	.apply	parser.match	rune.t	|	rune.compare	_gsdl.pragma.parse_ws.nl.re
value.parse.2	.apply	parser.<*	rune.t	gsdl.pragma.t	string.ty	|	parser.string.quotes	ws.nl
value.parse.1	.apply	parser.*>	rune.t	string.ty	gsdl.pragma.t	|	ws	value.parse.2
value.parse	.apply	parser.*>	rune.t	string.ty	gsdl.pragma.t	|	colon.parse	value.parse.1
	.app	f	gsdl.cgs.syntax.gsid	value.parse
	.enter	parser.lift2	rune.t	string.ty	gsdl.pragma.t	_gsdl.pragma.parse_res.ty

_gsdl.pragma.parse_f_c	.expr
list.t	.tygvar
rune.t	.tygvar
gsdl.pragma.t	.tygvar
nm	.larg	list.t	rune.t
pr	.larg	gsdl.pragma.t
r	.record	0	nm	1	pr
	.lift
	.yield	r

-- §section §gs{gsdl.pragma.gstype.get}

_gsdl.pragma.gstype.get_c	.expr
ibio.file.name.t	.tygvar
ordered.map.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
gsdl.pragma.t	.tygvar
_gsdl.pragma.gstype.get_k	.subcode
maybe.t.out	.cogvar
ordered.map.get	.gvar
list.compare	.gvar
rune.compare	.gvar
_gsdl.pragma.gstype.get_gstype.s	.gvar
string.ty	.tylet	list.t	rune.t
fn	.larg	ibio.file.name.t
prs	.larg	ordered.map.t	string.ty	gsdl.pragma.t
string.compare	.apply	list.compare	rune.t	|	rune.compare
	.force	_gsdl.pragma.gstype.get_k
	.coerce	maybe.t.out	gsdl.pragma.t
	.app	string.compare	_gsdl.pragma.gstype.get_gstype.s	prs
	.enter	ordered.map.get	string.ty	gsdl.pragma.t

_gsdl.pragma.gstype.get_k	.forcecont
maybe.prim.u	.tygvar
gsdl.pragma.t	.tygvar
maybe.t	.tygvar
string.t	.tygvar
_gsdl.pragma.gstype.get_just_k	.subcode
list.t.out	.cogvar
maybe.nothing	.gvar
mb.0	.karg	maybe.prim.u	gsdl.pragma.t
	.analyze	mb.0	just	nothing
		.case	just
pr		.fkarg	0	gsdl.pragma.t
			.force	_gsdl.pragma.gstype.get_just_k
			.coerce	list.t.out	string.t
			.enter	pr
		.case	nothing
			.enter	maybe.nothing	string.t

_gsdl.pragma.gstype.get_just_k	.forcecont
list.prim.u	.tygvar
string.t	.tygvar
list.t	.tygvar
maybe.t	.tygvar
maybe.just	.gvar
as0	.karg	list.prim.u	string.t
	.analyze	as0	:	nil
		.case	:
a0		.fkarg	0	string.t
as1		.fkarg	1	list.t	string.t
			.app	a0
			.yield	maybe.just	string.t
		.case	nil
			.undef	maybe.t	string.t

-- §section Constructors

_gsdl.pragma.rc.like_c	.expr
list.t	.tygvar
string.t	.tygvar
gsdl.pragma.prim.u	.tygvar
gsdl.pragma.t.in	.cogvar
as	.larg	list.t	string.t
c	.constr	gsdl.pragma.prim.u	rc.like	0	as
	.coerce	gsdl.pragma.t.in
	.lift
	.yield	c

	.type

-- §section §gs{gsdl.pragma.t}

gsdl.pragma.t	.tyexpr
list.t	.tygvar
string.t	.tygvar
	.tyref	list.t	string.t

-- §section §gs{gsdl.pragma.read}

_gsdl.pragma.read_res.ty	.tyexpr
_gsdl.pragma.read_res.u	.tygvar
	.tylift
	.tyref	_gsdl.pragma.read_res.u

_gsdl.pragma.read_res.u	.tyexpr
ordered.map.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
parser.pos.t	.tygvar
gsdl.pragma.t	.tygvar
string.ty	.tylet	list.t	rune.t
_pragmas_ty	.tylet	ordered.map.t	string.ty	gsdl.pragma.t
	.typroduct	pos	parser.pos.t	pragmas	_pragmas_ty

-- §section §gs{gsdl.pragma.parse}

_gsdl.pragma.parse_res.ty	.tyexpr
_gsdl.pragma.parse_res.u	.tygvar
	.tylift
	.tyref	_gsdl.pragma.parse_res.u

_gsdl.pragma.parse_res.u	.tyexpr
string.t	.tygvar
gsdl.pragma.t	.tygvar
	.typroduct	0	string.t	1	gsdl.pragma.t

-- §section §gs{gsdl.pragma.blank.line}

_gsdl.pragma.blank.line_ty	.tyexpr
ibio.lex.receiver.lexeme.t	.tygvar
rune.t	.tygvar
list.t	.tygvar
string.ty	.tylet	list.t	rune.t
	.tyref	ibio.lex.receiver.lexeme.t	rune.t	string.ty

