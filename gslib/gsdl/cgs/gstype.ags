	.prefix

	.data

gsdl.cgs.gstype.parser	.closure	_gsdl.cgs.gstype.parser_c	_gsdl.cgs.gstype.parser_ty
_gsdl.cgs.gstype.parser_pi.re	.regex	"Π〈
_gsdl.cgs.gstype.parser_lift.p_lb.re	.regex	⌊
_gsdl.cgs.gstype.parser_lift.p_rb.re	.regex	⌋

gsdl.cgs.gstype.freevars	.closure	_gsdl.cgs.gstype.freevars_c	_gsdl.cgs.gstype.freevars_ty

gsdl.cgs.gstype.≡	.closure	_gsdl.cgs.gstype.≡_c

gsdl.cgs.gstype.fmtgs	.closure	_gsdl.cgs.gstype.fmtgs_c
_gsdl.cgs.gstype.fmtgs_product.s	.string	product

gsdl.cgs.gstype.lift	.closure	_gsdl.cgs.gstype.lift_c
gsdl.cgs.gstype.product	.closure	_gsdl.cgs.gstype.product_c

gsdl.cgs.gstype.field.parser	.closure	_gsdl.cgs.gstype.field.parser_c

gsdl.cgs.gstype.field.fmtgs	.closure	_gsdl.cgs.gstype.field.fmtgs_c	_gsdl.cgs.gstype.field.fmtgs_ty
gsdl.cgs.gstype.field.fmtgs.list	.closure	_gsdl.cgs.gstype.field.fmtgs.list_c

	.code

# §section §gs{gsdl.cgs.gstype.parser}

_gsdl.cgs.gstype.parser_c	.expr
rune.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsdl.cgs.gstype.parser_prod.p_c	.subcode
_gsdl.cgs.gstype.parser_lift.p_c	.subcode
parser.<|>	.gvar
prod.p	.alloc	_gsdl.cgs.gstype.parser_prod.p_c
lift.p	.alloc	_gsdl.cgs.gstype.parser_lift.p_c
	.app	prod.p	lift.p
	.enter	parser.<|>	rune.t	gsdl.cgs.gstype.t

# > for (
# >     'fs ← m/"Π〈/ *> cgs.syntax.ws *> many field.parser <* cgs.syntax.rbracket;
# > ) [| product fs |]
_gsdl.cgs.gstype.parser_prod.p_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
list.field.t	.tylet	list.t	gsdl.cgs.gstype.field.t
parser.map	.gvar
gsdl.cgs.gstype.product	.gvar
parser.*>	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.gstype.parser_pi.re	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.many	.gvar
gsdl.cgs.gstype.field.parser	.gvar
parser.<*	.gvar
gsdl.cgs.syntax.rbracket	.gvar
pi_p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.gstype.parser_pi.re
mfp	.apply	parser.many	rune.t	gsdl.cgs.gstype.field.t	|	gsdl.cgs.gstype.field.parser
fs_p2	.apply	parser.<*	rune.t	list.field.t	string.t	|	mfp	gsdl.cgs.syntax.rbracket
fs_p1	.apply	parser.*>	rune.t	string.t	list.field.t	|	gsdl.cgs.syntax.ws	fs_p2
fs_p	.apply	parser.*>	rune.t	string.t	list.field.t	|	pi_p	fs_p1
	.app	gsdl.cgs.gstype.product	fs_p
	.enter	parser.map	rune.t	list.field.t	gsdl.cgs.gstype.t

# > for (
# >     'ty ← m/⌊/ *> cgs.syntax.ws *> gsdl.cgs.gstype.parser <* m/⌋/ <* cgs.syntax.ws;
# > ) [| lift ty |]
_gsdl.cgs.gstype.parser_lift.p_c	.expr
rune.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
parser.map	.gvar
gsdl.cgs.gstype.lift	.gvar
parser.*>	.gvar
parser.match	.gvar
_gsdl.cgs.gstype.parser_lift.p_lb.re	.gvar
rune.compare	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.<*	.gvar
gsdl.cgs.gstype.parser	.gvar
_gsdl.cgs.gstype.parser_lift.p_rb.re	.gvar
parser.fail	.gvar	# Temp
lb_p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.gstype.parser_lift.p_lb.re
rb_p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.gstype.parser_lift.p_rb.re
ty_p3	.apply	parser.<*	rune.t	string.t	string.t	|	rb_p	gsdl.cgs.syntax.ws
ty_p2	.apply	parser.<*	rune.t	gsdl.cgs.gstype.t	string.t	|	gsdl.cgs.gstype.parser	ty_p3
ty_p1	.apply	parser.*>	rune.t	string.t	gsdl.cgs.gstype.t	|	gsdl.cgs.syntax.ws	ty_p2
ty_p	.apply	parser.*>	rune.t	string.t	gsdl.cgs.gstype.t	|	lb_p	ty_p1
	.app	gsdl.cgs.gstype.lift	ty_p
	.enter	parser.map	rune.t	gsdl.cgs.gstype.t	gsdl.cgs.gstype.t

# §section §gs{gsdl.cgs.gstype.freevars}

_gsdl.cgs.gstype.freevars_c	.expr
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.cgs.symbol.t	.tygvar
ty	.larg	gsdl.cgs.gstype.t
	.undef	ordered.set.t	gsdl.cgs.symbol.t

# §section §gs{gsdl.cgs.gstype.≡}

_gsdl.cgs.gstype.≡_c	.expr
gsdl.cgs.gstype.t	.tygvar
_gsdl.cgs.gstype.≡_k0	.subcode
gsdl.cgs.gstype.t.out	.cogvar
ty0	.larg	gsdl.cgs.gstype.t
ty1	.larg	gsdl.cgs.gstype.t
	.force	_gsdl.cgs.gstype.≡_k0	|	ty1
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty0

_gsdl.cgs.gstype.≡_k0	.forcecont
gsdl.cgs.gstype.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
_gsdl.cgs.gstype.≡_k1	.subcode
gsdl.cgs.gstype.t.out	.cogvar
ty1	.fv	gsdl.cgs.gstype.t
ty0.0	.karg	gsdl.cgs.gstype.prim.u
	.force	_gsdl.cgs.gstype.≡_k1	|	ty0.0
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty1

_gsdl.cgs.gstype.≡_k1	.forcecont
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
bool.t	.tygvar
bool.false	.gvar
bool.true	.gvar
ty0.0	.fv	gsdl.cgs.gstype.prim.u
ty1.0	.karg	gsdl.cgs.gstype.prim.u
	.analyze	ty0.0	lift	product
		.case	lift
ty0.1		.fkarg	0	gsdl.cgs.gstype.t
			.danalyze	ty1.0	lift
				.default
					.enter	bool.false
				.case	lift
ty1.1				.fkarg	0	gsdl.cgs.gstype.t
					.undef	bool.t
		.case	product
fs0.1		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
			.danalyze	ty1.0	product
				.default
					.undef	bool.t
				.case	product
fs1.1				.fkarg	0	list.t	gsdl.cgs.gstype.field.t
					.enter	bool.true

# §section §gs{gsdl.cgs.gstype.fmtgs}

_gsdl.cgs.gstype.fmtgs_c	.expr
gsdl.cgs.gstype.t	.tygvar
_gsdl.cgs.gstype.fmtgs_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsdl.cgs.gstype.fmtgs_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsdl.cgs.gstype.fmtgs_k	.forcecont
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
fmtgs.printer.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
rune.t	.tygvar
fmtgs.prec	.gvar
fmtgs.prec.app	.gvar
diff.list.prepend	.gvar
_gsdl.cgs.gstype.fmtgs_product.s	.gvar
diff.list.:	.gvar
rune.space	.gvar
list.fmtgs	.gvar
gsdl.cgs.gstype.field.fmtgs.list	.gvar
fmtgs.prec.arg	.gvar
ty0	.karg	gsdl.cgs.gstype.prim.u
	.analyze	ty0	lift	product
		.case	lift
ty1		.fkarg	0	gsdl.cgs.gstype.t
			.undef	fmtgs.printer.t
		.case	product
fs		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
s2			.apply	list.fmtgs	gsdl.cgs.gstype.field.t	|	gsdl.cgs.gstype.field.fmtgs.list	fs	fmtgs.prec.arg
s1			.apply	diff.list.:	rune.t	|	rune.space	s2
ds			.apply	diff.list.prepend	rune.t	|	_gsdl.cgs.gstype.fmtgs_product.s	s1
			.app	fmtgs.prec.app	ds
			.enter	fmtgs.prec
	# > :: fmtgs.printer.t

# §section §gs{gstype} Constructors

_gsdl.cgs.gstype.lift_c	.expr
gsdl.cgs.gstype.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t.in	.cogvar
ty	.larg	gsdl.cgs.gstype.t
c	.constr	gsdl.cgs.gstype.prim.u	lift	0	ty
	.coerce	gsdl.cgs.gstype.t.in
	.lift
	.yield	c

_gsdl.cgs.gstype.product_c	.expr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t.in	.cogvar
fields	.larg	list.t	gsdl.cgs.gstype.field.t
c	.constr	gsdl.cgs.gstype.prim.u	product	0	fields
	.coerce	gsdl.cgs.gstype.t.in
	.lift
	.yield	c

# §section §gs{gsdl.cgs.gstype.field.parser}

_gsdl.cgs.gstype.field.parser_c	.expr
rune.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
parser.fail	.gvar
	.enter	parser.fail	rune.t	gsdl.cgs.gstype.field.t

# §section §gs{gsdl.cgs.gstype.field.fmtgs}

_gsdl.cgs.gstype.field.fmtgs_c	.expr
gsdl.cgs.gstype.field.t	.tygvar
rune.t	.tygvar
fmtgs.prec	.gvar
fmtgs.prec.arg	.gvar
diff.list.nil	.gvar
f0	.larg	gsdl.cgs.gstype.field.t
ds	.apply	diff.list.nil	rune.t
	.app	fmtgs.prec.arg	ds
	.enter	fmtgs.prec

# §section §gs{gsdl.cgs.gstype.field.fmtgs.list}

_gsdl.cgs.gstype.field.fmtgs.list_c	.expr
gsdl.cgs.gstype.field.t	.tygvar
list.fmtgs.byDefault	.gvar
gsdl.cgs.gstype.field.fmtgs	.gvar
	.app	gsdl.cgs.gstype.field.fmtgs
	.enter	list.fmtgs.byDefault	gsdl.cgs.gstype.field.t

	.type

# §section §gs{gsdl.cgs.gstype.t}

gsdl.cgs.gstype.t	.tyabstract	*
gsdl.cgs.gstype.prim.u	.tygvar
	.tylift
	.tyref	gsdl.cgs.gstype.prim.u

gsdl.cgs.gstype.prim.u	.tyexpr
_gsdl.cgs.gstype.prim.u_lift_ty	.tygvar
_gsdl.cgs.gstype.prim.u_product_ty	.tygvar
	.tysum	lift	_gsdl.cgs.gstype.prim.u_lift_ty	product	_gsdl.cgs.gstype.prim.u_product_ty

_gsdl.cgs.gstype.prim.u_lift_ty	.tyexpr
gsdl.cgs.gstype.t	.tygvar
	.tyubproduct	0	gsdl.cgs.gstype.t

_gsdl.cgs.gstype.prim.u_product_ty	.tyexpr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
0_ty	.tylet	list.t	gsdl.cgs.gstype.field.t
	.tyubproduct	0	0_ty

# §section §gs{gsdl.cgs.gstype.field.t}

gsdl.cgs.gstype.field.t	.tyabstract	*
gsdl.cgs.gstype.field.prim.u	.tygvar
	.tylift
	.tyref	gsdl.cgs.gstype.field.prim.u

gsdl.cgs.gstype.field.prim.u	.tyexpr
	.tysum

# §section §gs{gsdl.cgs.gstype.parser}

_gsdl.cgs.gstype.parser_ty	.tyexpr
parser.t	.tygvar
rune.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
	.tyref	parser.t	rune.t	gsdl.cgs.gstype.t

# §section §gs{gsdl.cgs.gstype.freevars}

_gsdl.cgs.gstype.freevars_ty	.tyexpr
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.cgs.symbol.t	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	ordered.set.t	gsdl.cgs.symbol.t

# §section §gs{gsdl.cgs.gstype.field.fmtgs}

_gsdl.cgs.gstype.field.fmtgs_ty	.tyexpr
fmtgs.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
	.tyref	fmtgs.t	gsdl.cgs.gstype.field.t

	.coercion

gsdl.cgs.gstype.t.in	.tycoercion
gsdl.cgs.gstype.t	.tygvar
	.tydefinition	gsdl.cgs.gstype.t

gsdl.cgs.gstype.t.out	.tycoercion
gsdl.cgs.gstype.t	.tygvar
	.tyinvert
	.tydefinition	gsdl.cgs.gstype.t
