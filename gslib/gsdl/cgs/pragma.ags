	.prefix

	.data

gsdl.cgs.pragma.parse	.closure	_gsdl.cgs.pragma.parse_c

gsdl.cgs.pragma.gstype.get	.closure	_gsdl.cgs.pragma.gstype.get_c
_type	.string	type

	.code

# §section §gs{gsdl.cgs.pragma.parse}

_gsdl.cgs.pragma.parse_c	.expr
rune.t	.tygvar
gsdl.cgs.pragma.t	.tygvar
parser.fail	.gvar
	.enter	parser.fail	rune.t	gsdl.cgs.pragma.t

# §section §gs{gsdl.cgs.pragma.gstype.get}

_gsdl.cgs.pragma.gstype.get_c	.expr
ibio.file.name.t	.tygvar
ordered.map.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
gsdl.cgs.pragma.t	.tygvar
string.ty	.tylet	list.t	rune.t
_gsdl.cgs.pragma.gstype.get_k	.subcode
maybe.t.out	.cogvar
ordered.map.get	.gvar
list.compare	.gvar
rune.compare	.gvar
_type	.gvar
fn	.larg	ibio.file.name.t
prs	.larg	ordered.map.t	string.ty	gsdl.cgs.pragma.t
string.compare	.apply	list.compare	rune.t	|	rune.compare
	.force	_gsdl.cgs.pragma.gstype.get_k
	.coerce	maybe.t.out	gsdl.cgs.pragma.t
	.app	string.compare	_type	prs
	.enter	ordered.map.get	string.ty	gsdl.cgs.pragma.t

_gsdl.cgs.pragma.gstype.get_k	.forcecont
maybe.prim.u	.tygvar
gsdl.cgs.pragma.t	.tygvar
maybe.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
string.ty	.tylet	list.t	rune.t
maybe.nothing	.gvar
mb.0	.karg	maybe.prim.u	gsdl.cgs.pragma.t
	.analyze	mb.0	just	nothing
		.case	just
pr		.fkarg	0	gsdl.cgs.pragma.t
			.undef	maybe.t	string.ty
		.case	nothing
			.enter	maybe.nothing	string.ty

	.type

gsdl.cgs.pragma.t	.tyabstract	*
gsdl.cgs.pragma.prim.u	.tygvar
	.tylift
	.tyref	gsdl.cgs.pragma.prim.u

gsdl.cgs.pragma.prim.u	.tyexpr
	.tysum
