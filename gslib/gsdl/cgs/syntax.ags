	.prefix

	.data

gsdl.cgs.syntax.var.parser	.closure	_gsdl.cgs.syntax.var.parser_c
_gsdl.cgs.syntax.var.parser_dot.re	.regex	\.
gsdl.cgs.syntax.var.component.alphanum.parser	.closure	_gsdl.cgs.syntax.var.component.alphanum.parser_c

gsdl.cgs.syntax.var.print	.closure	_gsdl.cgs.syntax.var.print_c
_gsdl.cgs.syntax.var.print_components.print	.closure	_gsdl.cgs.syntax.var.print_components.print_c	_gsdl.cgs.syntax.var.print_components.print_ty

gsdl.cgs.syntax.ws	.closure	_gsdl.cgs.syntax.ws_c
_gsdl.cgs.syntax.ws_re	.regex	[\s\t\n]*

gsdl.cgs.syntax.gsid	.closure	_gsdl.cgs.syntax.gsid_c
_gsdl.cgs.syntax.gsid_re	.regex	[a-z][a-z]*
_gsdl.cgs.syntax.gsid.ch_re	.regex	[a-z]		# Sync with above!

gsdl.cgs.syntax.oftype	.closure	_gsdl.cgs.syntax.oftype_c
_gsdl.cgs.syntax.oftype_re	.regex	::

gsdl.cgs.syntax.rbracket	.closure	_gsdl.cgs.syntax.rbracket_c
_gsdl.cgs.syntax.rbracket_re	.regex	〉

gsdl.cgs.syntax.semi	.closure	_gsdl.cgs.syntax.semi_c
_gsdl.cgs.syntax.semi_re	.regex	;

gsdl.cgs.syntax.keywords	.list	string.t

gsdl.cgs.syntax.var.≡	.closure	_gsdl.cgs.syntax.var.≡_c

gsdl.cgs.syntax.var.compare	.closure	_gsdl.cgs.syntax.var.compare_c

gsdl.cgs.syntax.var.component.≡	.closure	_gsdl.cgs.syntax.var.component.≡_c

gsdl.cgs.syntax.var.component.compare	.closure	_gsdl.cgs.syntax.var.component.compare_c

gsdl.cgs.syntax.var.component.print	.closure	_gsdl.cgs.syntax.var.component.print_c

gsdl.cgs.syntax.var.component.alphanum	.closure	_gsdl.cgs.syntax.var.component.alphanum_c

	.code

# §section §gs{gsdl.cgs.syntax.var.parser}

_gsdl.cgs.syntax.var.parser_c	.expr
rune.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
gsdl.cgs.syntax.var.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
parser.lift2	.gvar
list.:	.gvar
gsdl.cgs.syntax.var.component.alphanum.parser	.gvar
parser.many	.gvar
parser.*>	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.var.parser_dot.re	.gvar
gsdl.cgs.syntax.ws	.gvar
cons	.apply	list.:	gsdl.cgs.syntax.var.component.t
dot_p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.var.parser_dot.re
tail_p1	.apply	parser.*>	rune.t	string.t	gsdl.cgs.syntax.var.component.t	|	dot_p	gsdl.cgs.syntax.var.component.alphanum.parser
tail_p	.apply	parser.many	rune.t	gsdl.cgs.syntax.var.component.t	|	tail_p1
cons_p	.apply	parser.lift2	rune.t	gsdl.cgs.syntax.var.component.t	gsdl.cgs.syntax.var.t	gsdl.cgs.syntax.var.t	|	cons	gsdl.cgs.syntax.var.component.alphanum.parser	tail_p
	.app	cons_p	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	gsdl.cgs.syntax.var.t	string.t

# §section §gs{gsdl.cgs.syntax.var.component.alphanum.parser}

_gsdl.cgs.syntax.var.component.alphanum.parser_c	.expr
rune.t	.tygvar
string.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
record.empty	.tygvar
parser.t	.tygvar	# Temp
_gsdl.cgs.syntax.var.component.alphanum.parser_k_c	.subcode
parser.>>=	.gvar
parser.<*	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.gsid_re	.gvar
parser.neg.lookahead	.gvar
_gsdl.cgs.syntax.gsid.ch_re	.gvar
parser.fail	.gvar	# Temp
id_p0	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.gsid_re
id_p1.1	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.gsid.ch_re
id_p1	.apply	parser.neg.lookahead	rune.t	string.t	|	id_p1.1
id_p	.apply	parser.<*	rune.t	string.t	record.empty	|	id_p0	id_p1
k	.alloc	_gsdl.cgs.syntax.var.component.alphanum.parser_k_c
	.app	id_p	k
	.enter	parser.>>=	rune.t	string.t	gsdl.cgs.syntax.var.component.t

_gsdl.cgs.syntax.var.component.alphanum.parser_k_c	.expr
string.t	.tygvar
_gsdl.cgs.syntax.var.component.alphanum.parser_k_k	.subcode
bool.t.out	.cogvar
list.elem	.gvar
string.≡	.gvar
gsdl.cgs.syntax.keywords	.gvar
id	.larg	string.t
	.force	_gsdl.cgs.syntax.var.component.alphanum.parser_k_k
	.coerce	bool.t.out
	.app	string.≡	id	gsdl.cgs.syntax.keywords
	.enter	list.elem	string.t

_gsdl.cgs.syntax.var.component.alphanum.parser_k_k	.forcecont
string.t	.tygvar
bool.prim.u	.tygvar
rune.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar	# Temp
parser.unit	.gvar
gsdl.cgs.syntax.var.component.alphanum	.gvar
parser.fail	.gvar
id	.fv	string.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true	# §gs{b0} = ‘is keyword’
		.case	false
c			.apply	gsdl.cgs.syntax.var.component.alphanum	|	id
			.app	c
			.enter	parser.unit	rune.t	gsdl.cgs.syntax.var.component.t
		.case	true
			.enter	parser.fail	rune.t	gsdl.cgs.syntax.var.component.t

# §section §gs{gsdl.cgs.syntax.var.print}

_gsdl.cgs.syntax.var.print_c	.expr
gsdl.cgs.syntax.var.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
_gsdl.cgs.syntax.var.print_k	.subcode
list.t.out	.cogvar
v	.larg	gsdl.cgs.syntax.var.t
	.force	_gsdl.cgs.syntax.var.print_k
	.coerce	list.t.out	gsdl.cgs.syntax.var.component.t
	.enter	v

_gsdl.cgs.syntax.var.print_k	.forcecont
list.prim.u	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
string.t	.tygvar	# Temp
list.<>	.gvar
gsdl.cgs.syntax.var.component.print	.gvar
_gsdl.cgs.syntax.var.print_components.print	.gvar
v0	.karg	list.prim.u	gsdl.cgs.syntax.var.component.t
	.analyze	v0	:	nil
		.case	:
c		.fkarg	0	gsdl.cgs.syntax.var.component.t
cs		.fkarg	1	list.t	gsdl.cgs.syntax.var.component.t
c.s			.apply	gsdl.cgs.syntax.var.component.print	|	c
cs.s			.apply	_gsdl.cgs.syntax.var.print_components.print	|	cs
			.app	c.s	cs.s
			.enter	list.<>	rune.t
		.case	nil
			.undef	string.t

_gsdl.cgs.syntax.var.print_components.print_c	.expr
list.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
string.t	.tygvar	# Temp
_gsdl.cgs.syntax.var.print_components.print_k	.subcode
list.t.out	.cogvar
cs	.larg	list.t	gsdl.cgs.syntax.var.component.t
	.force	_gsdl.cgs.syntax.var.print_components.print_k
	.coerce	list.t.out	gsdl.cgs.syntax.var.component.t
	.enter	cs

_gsdl.cgs.syntax.var.print_components.print_k	.forcecont
list.prim.u	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
string.t	.tygvar	# Temp
list.:	.gvar
rune.dot	.gvar
list.<>	.gvar
gsdl.cgs.syntax.var.component.print	.gvar
_gsdl.cgs.syntax.var.print_components.print	.gvar
list.nil	.gvar
cs0	.karg	list.prim.u	gsdl.cgs.syntax.var.component.t
	.analyze	cs0	:	nil
		.case	:
c0		.fkarg	0	gsdl.cgs.syntax.var.component.t
cs1		.fkarg	1	list.t	gsdl.cgs.syntax.var.component.t
c0.s			.apply	gsdl.cgs.syntax.var.component.print	|	c0
cs1.s			.apply	_gsdl.cgs.syntax.var.print_components.print	|	cs1
s1			.apply	list.<>	rune.t	|	c0.s	cs1.s
			.app	rune.dot	s1
			.enter	list.:	rune.t
		.case	nil
			.enter	list.nil	rune.t

# §section §gs{gsdl.cgs.syntax.ws}

_gsdl.cgs.syntax.ws_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.ws_re	.gvar
	.app	rune.compare	_gsdl.cgs.syntax.ws_re
	.enter	parser.match	rune.t

# §section §gs{gsdl.cgs.syntax.gsid}

_gsdl.cgs.syntax.gsid_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.gsid_re	.gvar
	.app	rune.compare	_gsdl.cgs.syntax.gsid_re
	.enter	parser.match	rune.t

# §section §gs{gsdl.cgs.syntax.oftype}

_gsdl.cgs.syntax.oftype_c	.expr
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.oftype_re	.gvar
p0	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.oftype_re
	.app	p0	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	string.t	string.t

# §section §gs{gsdl.cgs.syntax.rbracket}

_gsdl.cgs.syntax.rbracket_c	.expr
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.rbracket_re	.gvar
gsdl.cgs.syntax.ws	.gvar
m	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.rbracket_re
	.app	m	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	string.t	string.t

# §section §gs{gsdl.cgs.syntax.rbracket}

_gsdl.cgs.syntax.semi_c	.expr
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.semi_re	.gvar
gsdl.cgs.syntax.ws	.gvar
m	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.semi_re
	.app	m	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	string.t	string.t

# §section §gs{gsdl.cgs.syntax.var.≡}

_gsdl.cgs.syntax.var.≡_c	.expr
gsdl.cgs.syntax.var.component.t	.tygvar
list.≡	.gvar
gsdl.cgs.syntax.var.component.≡	.gvar
	.app	gsdl.cgs.syntax.var.component.≡
	.enter	list.≡	gsdl.cgs.syntax.var.component.t

# §section §gs{gsdl.cgs.syntax.var.compare}

_gsdl.cgs.syntax.var.compare_c	.expr
gsdl.cgs.syntax.var.component.t	.tygvar
list.compare	.gvar
gsdl.cgs.syntax.var.component.compare	.gvar
	.app	gsdl.cgs.syntax.var.component.compare
	.enter	list.compare	gsdl.cgs.syntax.var.component.t

# §section §gs{gsdl.cgs.syntax.var.component.≡}

_gsdl.cgs.syntax.var.component.≡_c	.expr
gsdl.cgs.syntax.var.component.t	.tygvar
_gsdl.cgs.syntax.var.component.≡_k0	.subcode
gsdl.cgs.syntax.var.component.t.out	.cogvar
c0	.larg	gsdl.cgs.syntax.var.component.t
c1	.larg	gsdl.cgs.syntax.var.component.t
	.force	_gsdl.cgs.syntax.var.component.≡_k0
	.coerce	gsdl.cgs.syntax.var.component.t.out
	.enter	c0

_gsdl.cgs.syntax.var.component.≡_k0	.forcecont
gsdl.cgs.syntax.var.component.t	.tygvar
gsdl.cgs.syntax.var.component.prim.u	.tygvar
_gsdl.cgs.syntax.var.component.≡_k1	.subcode
gsdl.cgs.syntax.var.component.t.out	.cogvar
c1	.fv	gsdl.cgs.syntax.var.component.t
c0.0	.karg	gsdl.cgs.syntax.var.component.prim.u
	.force	_gsdl.cgs.syntax.var.component.≡_k1
	.coerce	gsdl.cgs.syntax.var.component.t.out
	.enter	c1

_gsdl.cgs.syntax.var.component.≡_k1	.forcecont
gsdl.cgs.syntax.var.component.prim.u	.tygvar
string.t	.tygvar
string.≡	.gvar
c0.0	.fv	gsdl.cgs.syntax.var.component.prim.u
c1.0	.karg	gsdl.cgs.syntax.var.component.prim.u
	.analyze	c0.0	alphanum
		.case	alphanum
s0		.fkarg	0	string.t
			.analyze	c1.0	alphanum
				.case	alphanum
s1				.fkarg	0	string.t
					.app	s0	s1
					.enter	string.≡
	# > :: bool.t

# §section §gs{gsdl.cgs.syntax.var.component.compare}

_gsdl.cgs.syntax.var.component.compare_c	.expr
gsdl.cgs.syntax.var.component.t	.tygvar
order.total.ord.t	.tygvar	# Temp
_gsdl.cgs.syntax.var.component.compare_k0	.subcode
gsdl.cgs.syntax.var.component.t.out	.cogvar
c0	.larg	gsdl.cgs.syntax.var.component.t
c1	.larg	gsdl.cgs.syntax.var.component.t
	.force	_gsdl.cgs.syntax.var.component.compare_k0
	.coerce	gsdl.cgs.syntax.var.component.t.out
	.enter	c0

_gsdl.cgs.syntax.var.component.compare_k0	.forcecont
gsdl.cgs.syntax.var.component.t	.tygvar
gsdl.cgs.syntax.var.component.prim.u	.tygvar
_gsdl.cgs.syntax.var.component.compare_k1	.subcode
gsdl.cgs.syntax.var.component.t.out	.cogvar
c1	.fv	gsdl.cgs.syntax.var.component.t
c0.0	.karg	gsdl.cgs.syntax.var.component.prim.u
	.force	_gsdl.cgs.syntax.var.component.compare_k1
	.coerce	gsdl.cgs.syntax.var.component.t.out
	.enter	c1

_gsdl.cgs.syntax.var.component.compare_k1	.forcecont
gsdl.cgs.syntax.var.component.prim.u	.tygvar
string.t	.tygvar
order.total.ord.t	.tygvar	# Temp
string.compare	.gvar
c0.0	.fv	gsdl.cgs.syntax.var.component.prim.u
c1.0	.karg	gsdl.cgs.syntax.var.component.prim.u
	.analyze	c0.0	alphanum
		.case	alphanum
s0		.fkarg	0	string.t
			.analyze	c1.0	alphanum
				.case	alphanum
s1				.fkarg	0	string.t
					.app	s0	s1
					.enter	string.compare
	# > :: order.total.ord.t

# §section §gs{gsdl.cgs.syntax.var.component.print}

_gsdl.cgs.syntax.var.component.print_c	.expr
gsdl.cgs.syntax.var.component.t	.tygvar
_gsdl.cgs.syntax.var.component.print_k	.subcode
gsdl.cgs.syntax.var.component.t.out	.cogvar
c	.larg	gsdl.cgs.syntax.var.component.t
	.force	_gsdl.cgs.syntax.var.component.print_k
	.coerce	gsdl.cgs.syntax.var.component.t.out
	.enter	c

_gsdl.cgs.syntax.var.component.print_k	.forcecont
gsdl.cgs.syntax.var.component.prim.u	.tygvar
string.t	.tygvar
c0	.karg	gsdl.cgs.syntax.var.component.prim.u
	.analyze	c0	alphanum
		.case	alphanum
s		.fkarg	0	string.t
			.enter	s
	# > :: string.t

# §section §gs{gsdl.cgs.syntax.var.component.t} Constructors

_gsdl.cgs.syntax.var.component.alphanum_c	.expr
string.t	.tygvar
gsdl.cgs.syntax.var.component.prim.u	.tygvar
gsdl.cgs.syntax.var.component.t.in	.cogvar
s	.arg	string.t
c	.constr	gsdl.cgs.syntax.var.component.prim.u	alphanum	0	s
	.coerce	gsdl.cgs.syntax.var.component.t.in
	.lift
	.yield	c

	.type

# §section §gs{gsdl.cgs.syntax.var.t}

gsdl.cgs.syntax.var.t	.tyexpr
list.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
	.tyref	list.t	gsdl.cgs.syntax.var.component.t

# §section §gs{gsdl.cgs.syntax.var.component.t}

gsdl.cgs.syntax.var.component.t	.tyabstract	*
gsdl.cgs.syntax.var.component.prim.u	.tygvar
	.tylift
	.tyref	gsdl.cgs.syntax.var.component.prim.u

gsdl.cgs.syntax.var.component.prim.u	.tyexpr
_gsdl.cgs.syntax.var.component.prim.u_alphanum_ty	.tygvar
	.tysum	alphanum	_gsdl.cgs.syntax.var.component.prim.u_alphanum_ty

_gsdl.cgs.syntax.var.component.prim.u_alphanum_ty	.tyexpr
string.t	.tygvar
	.tyubproduct	0	string.t

# §section §gs{gsdl.cgs.syntax.var.print}

_gsdl.cgs.syntax.var.print_components.print_ty	.tyexpr
list.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
string.t	.tygvar
	.tylift
	.tyfun	list.t	gsdl.cgs.syntax.var.component.t
	.tyref	string.t

	.coercion

gsdl.cgs.syntax.var.component.t.in	.tycoercion
gsdl.cgs.syntax.var.component.t	.tygvar
	.tydefinition	gsdl.cgs.syntax.var.component.t

gsdl.cgs.syntax.var.component.t.out	.tycoercion
gsdl.cgs.syntax.var.component.t	.tygvar
	.tyinvert
	.tydefinition	gsdl.cgs.syntax.var.component.t
