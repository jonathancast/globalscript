#calculus: gsdl.string-code 0.6

	.prefix

	.data

gsdl.cgs.syntax.var.parser	.closure	_gsdl.cgs.syntax.var.parser_c

gsdl.cgs.syntax.var.print	.closure	_gsdl.cgs.syntax.var.print_c
_gsdl.cgs.syntax.var.print_basevar_components.print	.closure	_gsdl.cgs.syntax.var.print_basevar_components.print_c	_gsdl.cgs.syntax.var.print_components.print_ty

gsdl.cgs.syntax.parens	.closure	_gsdl.cgs.syntax.parens_c
_gsdl.cgs.syntax.parens_lparen.re	.regex	(
_gsdl.cgs.syntax.parens_rparen.re	.regex	)

gsdl.cgs.syntax.lexeme	.closure	_gsdl.cgs.syntax.lexeme_c

gsdl.cgs.syntax.ws	.closure	_gsdl.cgs.syntax.ws_c
_gsdl.cgs.syntax.ws_re	.regex	§*	_gsdl.cgs.syntax.ws_re_0
_gsdl.cgs.syntax.ws_re_0	.regex	[\s\t\n]|--\n|--\s[^\n]*\n

gsdl.cgs.syntax.gsid	.closure	_gsdl.cgs.syntax.gsid_c
_gsdl.cgs.syntax.gsid_re	.regex	[a-z]§*	gsdl.syntax.alphanum.cont.char.re

gsdl.cgs.syntax.dot	.closure	_gsdl.cgs.syntax.dot_c
_gsdl.cgs.syntax.dot_re	.regex	.

gsdl.cgs.syntax.equals	.closure	_gsdl.cgs.syntax.equals_c
_gsdl.cgs.syntax.equals_re	.regex	=

gsdl.cgs.syntax.oftype	.closure	_gsdl.cgs.syntax.oftype_c
_gsdl.cgs.syntax.oftype_re	.regex	::

gsdl.cgs.syntax.rbracket	.closure	_gsdl.cgs.syntax.rbracket_c
_gsdl.cgs.syntax.rbracket_re	.regex	〉

gsdl.cgs.syntax.semi	.closure	_gsdl.cgs.syntax.semi_c
_gsdl.cgs.syntax.semi_re	.regex	;

gsdl.cgs.syntax.keyword	.closure	_gsdl.cgs.syntax.keyword_c
gsdl.cgs.syntax.core.keyword	.closure	_gsdl.cgs.syntax.core.keyword_c

gsdl.cgs.syntax.keywordOp	.closure	_gsdl.cgs.syntax.keywordOp_c
gsdl.cgs.syntax.core.keywordOp	.closure	_gsdl.cgs.syntax.core.keywordOp_c

_gsdl.cgs.syntax_dq.re	.regex	"

gsdl.cgs.syntax.var.component.print	.closure	_gsdl.cgs.syntax.var.component.print_c

gsdl.cgs.syntax.branch.l	.closure	_gsdl.cgs.syntax.branch.l_c
gsdl.cgs.syntax.branch.r	.closure	_gsdl.cgs.syntax.branch.r_c

gsdl.cgs.syntax.assoc.any	.closure	_gsdl.cgs.syntax.assoc.any_c
gsdl.cgs.syntax.assoc.right	.closure	_gsdl.cgs.syntax.assoc.right_c

	.code

-- §section §gs{gsdl.cgs.syntax.var.parser}

_gsdl.cgs.syntax.var.parser_c	.expr
natural.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.syntax.lexeme	.gvar
gsdl.var.parser	.gvar
n	.larg	natural.t
var.p	.apply	gsdl.var.parser	|	n
	.app	var.p
	.enter	gsdl.cgs.syntax.lexeme	gsdl.var.t

-- §section §gs{gsdl.cgs.syntax.var.print}

_gsdl.cgs.syntax.var.print_c	.expr
gsdl.var.t	.tygvar
_gsdl.cgs.syntax.var.print_k	.subcode
gsdl.var.t.out	.cogvar
v	.larg	gsdl.var.t
	.force	_gsdl.cgs.syntax.var.print_k
	.coerce	gsdl.var.t.out
	.enter	v

_gsdl.cgs.syntax.var.print_k	.forcecont
gsdl.var.prim.u	.tygvar
list.t	.tygvar
gsdl.var.component.t	.tygvar
natural.t	.tygvar
gsdl.var.t	.tygvar
string.t	.tygvar	-- Temp
_gsdl.cgs.syntax.var.print_basevar_k	.subcode
list.t.out	.cogvar
v0	.karg	gsdl.var.prim.u
	.analyze	v0	basevar	constructed
		.case	basevar
cs		.fkarg	0	list.t	gsdl.var.component.t
			.force	_gsdl.cgs.syntax.var.print_basevar_k
			.coerce	list.t.out	gsdl.var.component.t
			.enter	cs
		.case	constructed
d		.fkarg	0	natural.t
cs		.fkarg	1	list.t	gsdl.var.t
			.undef	string.t
	-- > :: string.t

_gsdl.cgs.syntax.var.print_basevar_k	.forcecont
list.prim.u	.tygvar
gsdl.var.component.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
string.t	.tygvar	-- Temp
list.<>	.gvar
gsdl.cgs.syntax.var.component.print	.gvar
_gsdl.cgs.syntax.var.print_basevar_components.print	.gvar
cs0	.karg	list.prim.u	gsdl.var.component.t
	.analyze	cs0	:	nil
		.case	:
c0		.fkarg	0	gsdl.var.component.t
cs1		.fkarg	1	list.t	gsdl.var.component.t
c.s			.apply	gsdl.cgs.syntax.var.component.print	|	c0
cs.s			.apply	_gsdl.cgs.syntax.var.print_basevar_components.print	|	cs1
			.app	c.s	cs.s
			.enter	list.<>	rune.t
		.case	nil
			.undef	string.t

_gsdl.cgs.syntax.var.print_basevar_components.print_c	.expr
list.t	.tygvar
gsdl.var.component.t	.tygvar
string.t	.tygvar	-- Temp
_gsdl.cgs.syntax.var.print_basevar_components.print_k	.subcode
list.t.out	.cogvar
cs	.larg	list.t	gsdl.var.component.t
	.force	_gsdl.cgs.syntax.var.print_basevar_components.print_k
	.coerce	list.t.out	gsdl.var.component.t
	.enter	cs

_gsdl.cgs.syntax.var.print_basevar_components.print_k	.forcecont
list.prim.u	.tygvar
gsdl.var.component.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
string.t	.tygvar	-- Temp
list.:	.gvar
rune.dot	.gvar
list.<>	.gvar
gsdl.cgs.syntax.var.component.print	.gvar
_gsdl.cgs.syntax.var.print_basevar_components.print	.gvar
list.nil	.gvar
cs0	.karg	list.prim.u	gsdl.var.component.t
	.analyze	cs0	:	nil
		.case	:
c0		.fkarg	0	gsdl.var.component.t
cs1		.fkarg	1	list.t	gsdl.var.component.t
c0.s			.apply	gsdl.cgs.syntax.var.component.print	|	c0
cs1.s			.apply	_gsdl.cgs.syntax.var.print_basevar_components.print	|	cs1
s1			.apply	list.<>	rune.t	|	c0.s	cs1.s
			.app	rune.dot	s1
			.enter	list.:	rune.t
		.case	nil
			.enter	list.nil	rune.t

-- §section §gs{gsdl.cgs.syntax.parens}

_gsdl.cgs.syntax.parens_c	.expr
parser.t	.tygvar
rune.t	.tygvar
string.t	.tygvar
parser.*>	.gvar
gsdl.cgs.syntax.lexeme	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.parens_lparen.re	.gvar
_gsdl.cgs.syntax.parens_rparen.re	.gvar
parser.<*	.gvar
parser.fail	.gvar	-- Temp
α	.tyarg	*
p	.larg	parser.t	rune.t	α
lparen.p1	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.parens_lparen.re
lparen.p	.apply	gsdl.cgs.syntax.lexeme	string.t	|	lparen.p1
rparen.p1	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.parens_rparen.re
rparen.p	.apply	gsdl.cgs.syntax.lexeme	string.t	|	rparen.p1
p1	.apply	parser.<*	rune.t	α	string.t	|	p	rparen.p
	.app	lparen.p	p1
	.enter	parser.*>	rune.t	string.t	α

-- §section §gs{gsdl.cgs.syntax.lexeme}

_gsdl.cgs.syntax.lexeme_c	.expr
parser.t	.tygvar
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
gsdl.cgs.syntax.ws	.gvar
α	.tyarg	*
p	.larg	parser.t	rune.t	α
	.app	p	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	α	string.t

-- §section §gs{gsdl.cgs.syntax.ws}

_gsdl.cgs.syntax.ws_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.ws_re	.gvar
	.app	rune.compare	_gsdl.cgs.syntax.ws_re
	.enter	parser.match	rune.t

-- §section §gs{gsdl.cgs.syntax.gsid}

_gsdl.cgs.syntax.gsid_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.gsid_re	.gvar
	.app	rune.compare	_gsdl.cgs.syntax.gsid_re
	.enter	parser.match	rune.t

-- §section §gs{gsdl.cgs.syntax.dot}

_gsdl.cgs.syntax.dot_c	.expr
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.dot_re	.gvar
gsdl.cgs.syntax.ws	.gvar
m	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.dot_re
	.app	m	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	string.t	string.t

-- §section §gs{gsdl.cgs.syntax.equals}

_gsdl.cgs.syntax.equals_c	.expr
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.equals_re	.gvar
p0	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.equals_re
	.app	p0	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	string.t	string.t

-- §section §gs{gsdl.cgs.syntax.oftype}

_gsdl.cgs.syntax.oftype_c	.expr
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.oftype_re	.gvar
p0	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.oftype_re
	.app	p0	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	string.t	string.t

-- §section §gs{gsdl.cgs.syntax.rbracket}

_gsdl.cgs.syntax.rbracket_c	.expr
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.rbracket_re	.gvar
gsdl.cgs.syntax.ws	.gvar
m	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.rbracket_re
	.app	m	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	string.t	string.t

-- §section §gs{gsdl.cgs.syntax.rbracket}

_gsdl.cgs.syntax.semi_c	.expr
rune.t	.tygvar
string.t	.tygvar
parser.<*	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax.semi_re	.gvar
gsdl.cgs.syntax.ws	.gvar
m	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax.semi_re
	.app	m	gsdl.cgs.syntax.ws
	.enter	parser.<*	rune.t	string.t	string.t

-- §section §gs{gsdl.cgs.syntax.keyword}

_gsdl.cgs.syntax.keyword_c	.expr
regex.t	.tygvar
rune.t	.tygvar
maybe.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
parser.*>	.gvar
parser.optional	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax_dq.re	.gvar
parser.<*	.gvar
parser.neg.lookahead	.gvar
gsdl.syntax.alphanum.cont.char.re	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.fail	.gvar	-- Temp
maybe.string.ty	.tylet	maybe.t	string.t
kw	.larg	regex.t	rune.t
dq.p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax_dq.re
mb.dq.p	.apply	parser.optional	rune.t	string.t	|	dq.p
p1	.apply	parser.match	rune.t	|	rune.compare	kw
idc.p	.apply	parser.match	rune.t	|	rune.compare	gsdl.syntax.alphanum.cont.char.re
p2.1	.apply	parser.neg.lookahead	rune.t	string.t	|	idc.p
p2	.apply	parser.*>	rune.t	record.empty	string.t	|	p2.1	gsdl.cgs.syntax.ws
p	.apply	parser.<*	rune.t	string.t	string.t	|	p1	p2
	.app	mb.dq.p	p
	.enter	parser.*>	rune.t	maybe.string.ty	string.t

-- §section §gs{gsdl.cgs.syntax.core.keyword}

_gsdl.cgs.syntax.core.keyword_c	.expr
regex.t	.tygvar
rune.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
parser.*>	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax_dq.re	.gvar
parser.<*	.gvar
parser.neg.lookahead	.gvar
gsdl.syntax.alphanum.cont.char.re	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.fail	.gvar	-- Temp
kw	.larg	regex.t	rune.t
dq.p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax_dq.re
p1	.apply	parser.match	rune.t	|	rune.compare	kw
idc.p	.apply	parser.match	rune.t	|	rune.compare	gsdl.syntax.alphanum.cont.char.re
p2.1	.apply	parser.neg.lookahead	rune.t	string.t	|	idc.p
p2	.apply	parser.*>	rune.t	record.empty	string.t	|	p2.1	gsdl.cgs.syntax.ws
p	.apply	parser.<*	rune.t	string.t	string.t	|	p1	p2
	.app	dq.p	p
	.enter	parser.*>	rune.t	string.t	string.t

-- §section §gs{gsdl.cgs.syntax.keywordOp}

_gsdl.cgs.syntax.keywordOp_c	.expr
regex.t	.tygvar
rune.t	.tygvar
maybe.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
parser.*>	.gvar
parser.optional	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax_dq.re	.gvar
parser.<*	.gvar
parser.neg.lookahead	.gvar
gsdl.syntax.symbolic.cont.char.re	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.fail	.gvar	-- Temp
maybe.string.ty	.tylet	maybe.t	string.t
kw	.larg	regex.t	rune.t
dq.p1	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax_dq.re
dq.p	.apply	parser.optional	rune.t	string.t	|	dq.p1
p1	.apply	parser.match	rune.t	|	rune.compare	kw
opc.p	.apply	parser.match	rune.t	|	rune.compare	gsdl.syntax.symbolic.cont.char.re
p2.1	.apply	parser.neg.lookahead	rune.t	string.t	|	opc.p
p2	.apply	parser.*>	rune.t	record.empty	string.t	|	p2.1	gsdl.cgs.syntax.ws
p	.apply	parser.<*	rune.t	string.t	string.t	|	p1	p2
	.app	dq.p	p
	.enter	parser.*>	rune.t	maybe.string.ty	string.t

-- §section §gs{gsdl.cgs.syntax.core.keywordOp}

_gsdl.cgs.syntax.core.keywordOp_c	.expr
regex.t	.tygvar
rune.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
parser.*>	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.cgs.syntax_dq.re	.gvar
parser.<*	.gvar
parser.neg.lookahead	.gvar
gsdl.syntax.symbolic.cont.char.re	.gvar
gsdl.cgs.syntax.ws	.gvar
parser.fail	.gvar	-- Temp
kw	.larg	regex.t	rune.t
dq.p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.cgs.syntax_dq.re
p1	.apply	parser.match	rune.t	|	rune.compare	kw
opc.p	.apply	parser.match	rune.t	|	rune.compare	gsdl.syntax.symbolic.cont.char.re
p2.1	.apply	parser.neg.lookahead	rune.t	string.t	|	opc.p
p2	.apply	parser.*>	rune.t	record.empty	string.t	|	p2.1	gsdl.cgs.syntax.ws
p	.apply	parser.<*	rune.t	string.t	string.t	|	p1	p2
	.app	dq.p	p
	.enter	parser.*>	rune.t	string.t	string.t

-- §section §gs{gsdl.cgs.syntax.var.component.print}

_gsdl.cgs.syntax.var.component.print_c	.expr
gsdl.var.component.t	.tygvar
_gsdl.cgs.syntax.var.component.print_k	.subcode
gsdl.var.component.t.out	.cogvar
c	.larg	gsdl.var.component.t
	.force	_gsdl.cgs.syntax.var.component.print_k
	.coerce	gsdl.var.component.t.out
	.enter	c

_gsdl.cgs.syntax.var.component.print_k	.forcecont
gsdl.var.component.prim.u	.tygvar
string.t	.tygvar
natural.t	.tygvar
c0	.karg	gsdl.var.component.prim.u
	.analyze	c0	alphanum	numeric	symbolic
		.case	alphanum
s		.fkarg	0	string.t
			.enter	s
		.case	numeric
n		.fkarg	0	natural.t
			.undef	string.t
		.case	symbolic
s		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

-- §section §gs{gsdl.cgs.syntax.branch.t} Constructors

_gsdl.cgs.syntax.branch.l_c	.expr
gsdl.cgs.syntax.branch.prim.u	.tygvar
gsdl.cgs.syntax.branch.t.in	.cogvar
c	.constr	gsdl.cgs.syntax.branch.prim.u	l
	.coerce	gsdl.cgs.syntax.branch.t.in
	.lift
	.yield	c

_gsdl.cgs.syntax.branch.r_c	.expr
gsdl.cgs.syntax.branch.prim.u	.tygvar
gsdl.cgs.syntax.branch.t.in	.cogvar
c	.constr	gsdl.cgs.syntax.branch.prim.u	r
	.coerce	gsdl.cgs.syntax.branch.t.in
	.lift
	.yield	c

-- §section §gs{gsdl.cgs.syntax.assoc.t} Constructors

_gsdl.cgs.syntax.assoc.any_c	.expr
gsdl.cgs.syntax.assoc.prim.u	.tygvar
gsdl.cgs.syntax.assoc.t.in	.cogvar
c	.constr	gsdl.cgs.syntax.assoc.prim.u	any
	.coerce	gsdl.cgs.syntax.assoc.t.in
	.lift
	.yield	c

_gsdl.cgs.syntax.assoc.right_c	.expr
gsdl.cgs.syntax.assoc.prim.u	.tygvar
gsdl.cgs.syntax.assoc.t.in	.cogvar
c	.constr	gsdl.cgs.syntax.assoc.prim.u	right
	.coerce	gsdl.cgs.syntax.assoc.t.in
	.lift
	.yield	c

	.type

-- §section §gs{gsdl.cgs.syntax.branch.t}

gsdl.cgs.syntax.branch.t	.tyabstract	*
gsdl.cgs.syntax.branch.prim.u	.tygvar
	.tylift
	.tyref	gsdl.cgs.syntax.branch.prim.u

gsdl.cgs.syntax.branch.prim.u	.tyexpr
record.unboxed.empty	.tygvar
	.tysum	l	record.unboxed.empty	r	record.unboxed.empty

-- §section §gs{gsdl.cgs.syntax.assoc.t}

gsdl.cgs.syntax.assoc.t	.tyabstract	*
gsdl.cgs.syntax.assoc.prim.u	.tygvar
	.tylift
	.tyref	gsdl.cgs.syntax.assoc.prim.u

gsdl.cgs.syntax.assoc.prim.u	.tyexpr
record.unboxed.empty	.tygvar
	.tysum	any	record.unboxed.empty	left	record.unboxed.empty	right	record.unboxed.empty

-- §section §gs{gsdl.cgs.syntax.var.print}

_gsdl.cgs.syntax.var.print_components.print_ty	.tyexpr
list.t	.tygvar
gsdl.var.component.t	.tygvar
string.t	.tygvar
	.tylift
	.tyfun	list.t	gsdl.var.component.t
	.tyref	string.t

	.coercion

gsdl.cgs.syntax.branch.t.in	.tycoercion
gsdl.cgs.syntax.branch.t	.tygvar
	.tydefinition	gsdl.cgs.syntax.branch.t

gsdl.cgs.syntax.branch.t.out	.tycoercion
gsdl.cgs.syntax.branch.t	.tygvar
	.tyinvert
	.tydefinition	gsdl.cgs.syntax.branch.t

gsdl.cgs.syntax.assoc.t.in	.tycoercion
gsdl.cgs.syntax.assoc.t	.tygvar
	.tydefinition	gsdl.cgs.syntax.assoc.t

gsdl.cgs.syntax.assoc.t.out	.tycoercion
gsdl.cgs.syntax.assoc.t	.tygvar
	.tyinvert
	.tydefinition	gsdl.cgs.syntax.assoc.t
