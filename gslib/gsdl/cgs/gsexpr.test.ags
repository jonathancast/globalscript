#calculus: gsdl.string-code 0.1

	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test_parse_gsexpr_expr.heavy.cast	_test_parse_gsexpr_lambda	_test_freevars_expr.heavy.cast

_test_parse_gsexpr_expr.heavy.cast	.closure	_test_parse_gsexpr_expr.heavy.cast_c
_test_parse_gsexpr_expr.heavy.cast_label	.string	parse\sgsexpr.parser\sqq{"defn\sbool.t\s"⊲}
_test_parse_gsexpr_expr.heavy.cast_input	.string	"defn\sbool.t\s"⊲
_test_parse_gsexpr_expr.heavy.cast_bool.s	.string	bool
_test_parse_gsexpr_expr.heavy.cast_t.s	.string	t

_test_parse_gsexpr_lambda	.closure	_test_parse_gsexpr_lambda_c
_test_parse_gsexpr_lambda_label	.string	parse\sgsexpr.parser\sqq{λ\sx\s::\st.\s::\st}
_test_parse_gsexpr_lambda_input	.string	λ\sx\s::t.\s::\st

_test_freevars_expr.heavy.cast	.closure	_test_freevars_expr.heavy.cast_c
_test_freevars_expr.heavy.cast_label	.string	freevars\s(expr.heavy.cast\s_)
_test_freevars_expr.heavy.cast_t.s	.string	t

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

-- §section §gs{parse qq{"defn bool.t "⊲}}

_test_parse_gsexpr_expr.heavy.cast_c	.expr
rune.t	.tygvar
gsdl.cgs.gsexpr.t	.tygvar
_test_parse_gsexpr_expr.heavy.cast_k_c	.subcode
test.property.label	.gvar
_test_parse_gsexpr_expr.heavy.cast_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.cgs.gsexpr.parser	.gvar
_test_parse_gsexpr_expr.heavy.cast_input	.gvar
k	.alloc	_test_parse_gsexpr_expr.heavy.cast_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.cgs.gsexpr.t	|	parser.rune.advance	rune.print	gsdl.cgs.gsexpr.parser	_test_parse_gsexpr_expr.heavy.cast_input	k
	.app	_test_parse_gsexpr_expr.heavy.cast_label	test
	.enter	test.property.label

_test_parse_gsexpr_expr.heavy.cast_k_c	.expr
gsdl.cgs.gsexpr.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar	-- Temp
test.assert.eq	.gvar
gsdl.cgs.gsexpr.≡	.gvar
gsdl.cgs.gsexpr.fmtgs	.gvar
gsdl.cgs.gsexpr.pos	.gvar
gsdl.cgs.gsexpr.expr.heavy.cast	.gvar
gsdl.cgs.gscoercion.pos	.gvar
gsdl.cgs.gscoercion.defn	.gvar
gsdl.var.basevar	.gvar
list.:	.gvar
gsdl.var.component.alphanum	.gvar
_test_parse_gsexpr_expr.heavy.cast_bool.s	.gvar
list.singleton	.gvar
_test_parse_gsexpr_expr.heavy.cast_t.s	.gvar
maybe.nothing	.gvar
gsdl.cgs.gsexpr.cast.source.missing	.gvar
actual	.larg	gsdl.cgs.gsexpr.t
pos	.undefined	gsdl.sourcepos.t
bool.c	.apply	gsdl.var.component.alphanum	|	_test_parse_gsexpr_expr.heavy.cast_bool.s
t.c	.apply	gsdl.var.component.alphanum	|	_test_parse_gsexpr_expr.heavy.cast_t.s
bool.t.v.cs1	.apply	list.singleton	gsdl.var.component.t	|	t.c
bool.t.v.cs	.apply	list.:	gsdl.var.component.t	|	bool.c	bool.t.v.cs1
bool.t.v	.apply	gsdl.var.basevar	|	bool.t.v.cs
nothing	.apply	maybe.nothing	gsdl.cgs.gskind.t
co1	.apply	gsdl.cgs.gscoercion.defn	|	bool.t.v	nothing
co	.apply	gsdl.cgs.gscoercion.pos	|	pos	co1
so	.apply	gsdl.cgs.gsexpr.cast.source.missing	|	pos
e1	.apply	gsdl.cgs.gsexpr.expr.heavy.cast	|	co	so
expected	.apply	gsdl.cgs.gsexpr.pos	|	pos	e1
	.app	gsdl.cgs.gsexpr.≡	gsdl.cgs.gsexpr.fmtgs	actual	expected
	.enter	test.assert.eq	gsdl.cgs.gsexpr.t

-- §section §gs{parse gsexpr.parser qq{λ x :: t. :: t}}

_test_parse_gsexpr_lambda_c	.expr
rune.t	.tygvar
gsdl.cgs.gsexpr.t	.tygvar
_test_parse_gsexpr_lambda_k_c	.subcode
test.property.label	.gvar
_test_parse_gsexpr_lambda_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.cgs.gsexpr.parser	.gvar
_test_parse_gsexpr_lambda_input	.gvar
k	.alloc	_test_parse_gsexpr_lambda_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.cgs.gsexpr.t	|	parser.rune.advance	rune.print	gsdl.cgs.gsexpr.parser	_test_parse_gsexpr_lambda_input	k
	.app	_test_parse_gsexpr_lambda_label	test
	.enter	test.property.label

_test_parse_gsexpr_lambda_k_c	.expr
gsdl.cgs.gsexpr.t	.tygvar
test.true	.gvar
e	.larg	gsdl.cgs.gsexpr.t
	.enter	test.true

-- §section §gs{freevars (expr.heavy.cast _)}

_test_freevars_expr.heavy.cast_c	.expr
ordered.set.t	.tygvar
gsdl.cgs.symbol.t	.tygvar
gsdl.var.component.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.cgs.gsexpr.t	.tygvar
test.property.label	.gvar
_test_freevars_expr.heavy.cast_label	.gvar
test.assert.eq	.gvar
ordered.set.≡	.gvar
gsdl.cgs.symbol.≡	.gvar
ordered.set.fmtgs	.gvar
gsdl.cgs.symbol.fmtgs	.gvar
gsdl.cgs.gsexpr.freevars	.gvar
gsdl.cgs.gsexpr.expr.heavy.cast	.gvar
gsdl.cgs.gscoercion.defn	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test_freevars_expr.heavy.cast_t.s	.gvar
maybe.nothing	.gvar
gsdl.cgs.gsexpr.cast.source.missing	.gvar
ordered.set.singleton	.gvar
gsdl.cgs.symbol.compare	.gvar
gsdl.cgs.symbol.tyvar	.gvar
set.symbol.ty	.tylet	ordered.set.t	gsdl.cgs.symbol.t
set.symbol.≡	.apply	ordered.set.≡	gsdl.cgs.symbol.t	|	gsdl.cgs.symbol.≡
set.symbol.fmtgs	.apply	ordered.set.fmtgs	gsdl.cgs.symbol.t	|	gsdl.cgs.symbol.fmtgs
v.c	.apply	gsdl.var.component.alphanum	|	_test_freevars_expr.heavy.cast_t.s
v.cs	.apply	list.singleton	gsdl.var.component.t	|	v.c
v	.apply	gsdl.var.basevar	|	v.cs
nothing	.apply	maybe.nothing	gsdl.cgs.gskind.t
e.co	.apply	gsdl.cgs.gscoercion.defn	|	v	nothing
pos	.undefined	gsdl.sourcepos.t
e.so	.apply	gsdl.cgs.gsexpr.cast.source.missing	|	pos
e	.apply	gsdl.cgs.gsexpr.expr.heavy.cast	|	e.co	e.so
actual	.apply	gsdl.cgs.gsexpr.freevars	|	e
sym	.apply	gsdl.cgs.symbol.tyvar	|	v
expected	.apply	ordered.set.singleton	gsdl.cgs.symbol.t	|	gsdl.cgs.symbol.compare	sym
test	.apply	test.assert.eq	set.symbol.ty	|	set.symbol.≡	set.symbol.fmtgs	actual	expected
	.app	_test_freevars_expr.heavy.cast_label	test
	.enter	test.property.label
