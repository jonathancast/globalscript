#calculus: gsdl.string-code 0.7
#type: document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.parse.gscoercion.defn	_test.parse.gscoercion.defn.tyargs	_test.freevars.defn

_test.parse.gscoercion.defn	.closure	_test.parse.gscoercion.defn_c
_test.parse.gscoercion.defn_label	.string	parse\sgsexpr.parser\sqq{"defn\sbool.t}
_test.parse.gscoercion.defn_input	.string	"defn\sbool.t
_test.parse.gscoercion.defn_bool.s	.string	bool
_test.parse.gscoercion.defn_t.s	.string	t

_test.parse.gscoercion.defn.tyargs	.closure	_test.parse.gscoercion.defn.tyargs_c
_test.parse.gscoercion.defn.tyargs_label	.string	parse\sgsexpr.parser\sqq{"defn\smaybe.t\sbool.t}
_test.parse.gscoercion.defn.tyargs_input	.string	"defn\smaybe.t\sbool.t

_test.freevars.defn	.closure	_test.freevars.defn_c
_test.freevars.defn_label	.string	freevars\s(defn\s_)
_test.freevars.defn_t.s	.string	t

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

-- §section §gs{parse qq{"defn bool.t}}

_test.parse.gscoercion.defn_c	.expr
rune.t	.tygvar
gsdl.cgs.gscoercion.t	.tygvar
_test.parse.gscoercion.defn_k_c	.subcode
test.property.label	.gvar
_test.parse.gscoercion.defn_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.cgs.gscoercion.parser.app	.gvar
_test.parse.gscoercion.defn_input	.gvar
k	.closure	_test.parse.gscoercion.defn_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.cgs.gscoercion.t	|	parser.rune.advance	rune.print	gsdl.cgs.gscoercion.parser.app	_test.parse.gscoercion.defn_input	k
	.app	_test.parse.gscoercion.defn_label	test
	.enter	test.property.label

_test.parse.gscoercion.defn_k_c	.expr
gsdl.cgs.gscoercion.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
test.assert.eq	.gvar
gsdl.cgs.gscoercion.≡	.gvar
gsdl.cgs.gscoercion.fmtgs	.gvar
gsdl.cgs.gscoercion.pos	.gvar
gsdl.cgs.gscoercion.defn	.gvar
gsdl.var.basevar	.gvar
list.:	.gvar
gsdl.var.component.alphanum	.gvar
_test.parse.gscoercion.defn_bool.s	.gvar
list.singleton	.gvar
_test.parse.gscoercion.defn_t.s	.gvar
maybe.nothing	.gvar
actual	.larg	gsdl.cgs.gscoercion.t
pos	.undefined	gsdl.sourcepos.t
bool.c	.apply	gsdl.var.component.alphanum	|	_test.parse.gscoercion.defn_bool.s
t.c	.apply	gsdl.var.component.alphanum	|	_test.parse.gscoercion.defn_t.s
bool.t.v.cs1	.apply	list.singleton	gsdl.var.component.t	|	t.c
bool.t.v.cs	.apply	list.:	gsdl.var.component.t	|	bool.c	bool.t.v.cs1
bool.t.v	.apply	gsdl.var.basevar	|	bool.t.v.cs
nothing	.apply	maybe.nothing	gsdl.cgs.gskind.t
co1	.apply	gsdl.cgs.gscoercion.defn	|	bool.t.v	nothing
expected	.apply	gsdl.cgs.gscoercion.pos	|	pos	co1
	.app	gsdl.cgs.gscoercion.≡	gsdl.cgs.gscoercion.fmtgs	actual	expected
	.enter	test.assert.eq	gsdl.cgs.gscoercion.t

-- §section §gs{parse qq{"defn maybe.t bool.t}}

_test.parse.gscoercion.defn.tyargs_c	.expr
rune.t	.tygvar
gsdl.cgs.gscoercion.t	.tygvar
_test.parse.gscoercion.defn.tyargs_k_c	.subcode
test.property.label	.gvar
_test.parse.gscoercion.defn.tyargs_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.cgs.gscoercion.parser.app	.gvar
_test.parse.gscoercion.defn.tyargs_input	.gvar
k	.closure	_test.parse.gscoercion.defn.tyargs_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.cgs.gscoercion.t	|	parser.rune.advance	rune.print	gsdl.cgs.gscoercion.parser.app	_test.parse.gscoercion.defn.tyargs_input	k
	.app	_test.parse.gscoercion.defn.tyargs_label	test
	.enter	test.property.label

_test.parse.gscoercion.defn.tyargs_k_c	.expr
gsdl.cgs.gscoercion.t	.tygvar
test.true	.gvar
actual	.larg	gsdl.cgs.gscoercion.t
	.enter	test.true

-- §section §gs{freevars (defn _)}

_test.freevars.defn_c	.expr
ordered.set.t	.tygvar
gsdl.cgs.symbol.t	.tygvar
gsdl.var.component.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
test.property.label	.gvar
_test.freevars.defn_label	.gvar
test.assert.eq	.gvar
ordered.set.≡	.gvar
gsdl.cgs.symbol.≡	.gvar
ordered.set.fmtgs	.gvar
gsdl.cgs.symbol.fmtgs	.gvar
gsdl.cgs.gscoercion.freevars	.gvar
gsdl.cgs.gscoercion.defn	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test.freevars.defn_t.s	.gvar
maybe.nothing	.gvar
ordered.set.singleton	.gvar
gsdl.cgs.symbol.compare	.gvar
gsdl.cgs.symbol.tyvar	.gvar
set.symbol.ty	.tylet	ordered.set.t	gsdl.cgs.symbol.t
set.symbol.≡	.apply	ordered.set.≡	gsdl.cgs.symbol.t	|	gsdl.cgs.symbol.≡
set.symbol.fmtgs	.apply	ordered.set.fmtgs	gsdl.cgs.symbol.t	|	gsdl.cgs.symbol.fmtgs
v.c	.apply	gsdl.var.component.alphanum	|	_test.freevars.defn_t.s
v.cs	.apply	list.singleton	gsdl.var.component.t	|	v.c
v	.apply	gsdl.var.basevar	|	v.cs
nothing	.apply	maybe.nothing	gsdl.cgs.gskind.t
co	.apply	gsdl.cgs.gscoercion.defn	|	v	nothing
actual	.apply	gsdl.cgs.gscoercion.freevars	|	co
sym	.apply	gsdl.cgs.symbol.tyvar	|	v
expected	.apply	ordered.set.singleton	gsdl.cgs.symbol.t	|	gsdl.cgs.symbol.compare	sym
test	.apply	test.assert.eq	set.symbol.ty	|	set.symbol.≡	set.symbol.fmtgs	actual	expected
	.app	_test.freevars.defn_label	test
	.enter	test.property.label

