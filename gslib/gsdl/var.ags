	.prefix

	.data

gsdl.var.components.get	.closure	_gsdl.var.components.get_c

gsdl.var.compare	.closure	_gsdl.var.compare_c	_gsdl.var.compare_ty

gsdl.var.≡	.closure	_gsdl.var.≡_c

gsdl.var.fmtgs	.closure	_gsdl.var.fmtgs_c
_gsdl.var.fmtgs_prefix.s	.string	gsv{
_gsdl.var.fmtgs_suffix.s	.string	}

gsdl.var.basevar	.closure	_gsdl.var.basevar_c
gsdl.var.constructed	.closure	_gsdl.var.constructed_c

gsdl.var.component.≡	.closure	_gsdl.var.component.≡_c

gsdl.var.component.compare	.closure	_gsdl.var.component.compare_c

gsdl.var.component.alphanum	.closure	_gsdl.var.component.alphanum_c

	.code

# §section §gs{gsdl.var.components.get}

# Used to work out variable / source file relationship, so only applies to first variable.

_gsdl.var.components.get_c	.expr
gsdl.var.t	.tygvar
_gsdl.var.components.get_k	.subcode
gsdl.var.t.out	.cogvar
v	.larg	gsdl.var.t
	.force	_gsdl.var.components.get_k
	.coerce	gsdl.var.t.out
	.enter	v

_gsdl.var.components.get_k	.forcecont
gsdl.var.prim.u	.tygvar
list.t	.tygvar
gsdl.var.component.t	.tygvar
natural.t	.tygvar
gsdl.var.t	.tygvar
v0	.karg	gsdl.var.prim.u
	.analyze	v0	basevar	constructed
		.case	basevar
cs		.fkarg	0	list.t	gsdl.var.component.t
			.enter	cs
		.case	constructed
d		.fkarg	0	natural.t
cs		.fkarg	1	list.t	gsdl.var.t
			.undef	list.t	gsdl.var.component.t
	# > :: list.t	gsdl.var.component.t

# §section §gs{gsdl.var.compare}

_gsdl.var.compare_c	.expr
gsdl.var.t	.tygvar
_gsdl.var.compare_k0	.subcode
gsdl.var.t.out	.cogvar
v0	.larg	gsdl.var.t
v1	.larg	gsdl.var.t
	.force	_gsdl.var.compare_k0
	.coerce	gsdl.var.t.out
	.enter	v0

_gsdl.var.compare_k0	.forcecont
gsdl.var.t	.tygvar
gsdl.var.prim.u	.tygvar
_gsdl.var.compare_k1	.subcode
gsdl.var.t.out	.cogvar
v1	.fv	gsdl.var.t
v0.0	.karg	gsdl.var.prim.u
	.force	_gsdl.var.compare_k1
	.coerce	gsdl.var.t.out
	.enter	v1

_gsdl.var.compare_k1	.forcecont
gsdl.var.prim.u	.tygvar
list.t	.tygvar
gsdl.var.component.t	.tygvar
natural.t	.tygvar
gsdl.var.t	.tygvar
order.total.ord.t	.tygvar	# Temp
_gsdl.var.compare_basevar_constructed_k	.subcode
_gsdl.var.compare_constructed_basevar_k	.subcode
_gsdl.var.compare_constructed_constructed_k	.subcode
list.t.out	.cogvar
order.total.ord.t.out	.cogvar
list.compare	.gvar
gsdl.var.component.compare	.gvar
natural.compare	.gvar
v0.0	.fv	gsdl.var.prim.u
v1.0	.karg	gsdl.var.prim.u
	.analyze	v0.0	basevar	constructed
		.case	basevar
cs0		.fkarg	0	list.t	gsdl.var.component.t
			.analyze	v1.0	basevar	constructed
				.case	basevar
cs1				.fkarg	0	list.t	gsdl.var.component.t
					.app	gsdl.var.component.compare	cs0	cs1
					.enter	list.compare	gsdl.var.component.t
				.case	constructed
d1				.fkarg	0	natural.t
cs1				.fkarg	1	list.t	gsdl.var.t
					.force	_gsdl.var.compare_basevar_constructed_k
					.coerce	list.t.out	gsdl.var.t
					.enter	cs1
		.case	constructed
d0		.fkarg	0	natural.t
cs0		.fkarg	1	list.t	gsdl.var.t
			.analyze	v1.0	basevar	constructed
				.case	basevar
cs1				.fkarg	0	list.t	gsdl.var.component.t
					.force	_gsdl.var.compare_constructed_basevar_k
					.coerce	list.t.out	gsdl.var.t
					.enter	cs0
				.case	constructed
d1				.fkarg	0	natural.t
cs1				.fkarg	1	list.t	gsdl.var.t
					.force	_gsdl.var.compare_constructed_constructed_k
					.coerce	order.total.ord.t.out
					.app	d0	d1
					.enter	natural.compare
	# > :: order.total.ord.t

_gsdl.var.compare_basevar_constructed_k	.forcecont
gsdl.var.prim.u	.tygvar
list.prim.u	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
order.total.ord.t	.tygvar	# Temp
_gsdl.var.compare_basevar_constructed_:_k	.subcode
gsdl.var.t.in	.cogvar
order.total.ord.t.out	.cogvar
gsdl.var.compare	.gvar
v0.0	.fv	gsdl.var.prim.u
cs1.0	.karg	list.prim.u	gsdl.var.t
	.analyze	cs1.0	:	nil
		.case	:
c1.0		.fkarg	0	gsdl.var.t
cs1.1		.fkarg	1	list.t	gsdl.var.t
v0.l			.lifted	v0.0
v0.lc			.cast	v0.l	gsdl.var.t.in
			.force	_gsdl.var.compare_basevar_constructed_:_k
			.coerce	order.total.ord.t.out
			.app	v0.lc	c1.0
			.enter	gsdl.var.compare
		.case	nil
			.undef	order.total.ord.t

_gsdl.var.compare_basevar_constructed_:_k	.forcecont
order.total.ord.prim.u	.tygvar
order.total.ord.t	.tygvar
order.total.ord.t.in	.cogvar
o0	.karg	order.total.ord.prim.u
	.danalyze	o0	eq
		.default
			.coerce	order.total.ord.t.in
			.lift
			.yield	o0
		.case	eq
			.undef	order.total.ord.t

_gsdl.var.compare_constructed_basevar_k	.forcecont
gsdl.var.prim.u	.tygvar
list.prim.u	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
order.total.ord.t	.tygvar	# Temp
_gsdl.var.compare_constructed_basevar_:_k	.subcode
gsdl.var.t.in	.cogvar
order.total.ord.t.out	.cogvar
gsdl.var.compare	.gvar
v1.0	.fv	gsdl.var.prim.u
cs0.0	.karg	list.prim.u	gsdl.var.t
	.analyze	cs0.0	:	nil
		.case	:
v0.c0		.fkarg	0	gsdl.var.t
v0.cs1		.fkarg	1	list.t	gsdl.var.t
v1.l			.lifted	v1.0
v1.cl			.cast	v1.l	gsdl.var.t.in
			.force	_gsdl.var.compare_constructed_basevar_:_k
			.coerce	order.total.ord.t.out
			.app	v0.c0	v1.cl
			.enter	gsdl.var.compare
		.case	nil
			.undef	order.total.ord.t

_gsdl.var.compare_constructed_basevar_:_k	.forcecont
order.total.ord.prim.u	.tygvar
order.total.ord.t	.tygvar	# Temp
order.total.ord.t.in	.cogvar
o0	.karg	order.total.ord.prim.u
	.danalyze	o0	eq
		.default
			.coerce	order.total.ord.t.in
			.lift
			.yield	o0
		.case	eq
			.undef	order.total.ord.t

_gsdl.var.compare_constructed_constructed_k	.forcecont
list.t	.tygvar
gsdl.var.t	.tygvar
order.total.ord.prim.u	.tygvar
order.total.ord.t	.tygvar	# Temp
list.compare	.gvar
gsdl.var.compare	.gvar
cs0	.fv	list.t	gsdl.var.t
cs1	.fv	list.t	gsdl.var.t
o0	.karg	order.total.ord.prim.u
	.analyze	o0	eq	gt	lt
		.case	eq
			.app	gsdl.var.compare	cs0	cs1
			.enter	list.compare	gsdl.var.t
		.case	gt
			.undef	order.total.ord.t
		.case	lt
			.undef	order.total.ord.t

# §section §gs{gsdl.var.≡}

_gsdl.var.≡_c	.expr
gsdl.var.t	.tygvar
_gsdl.var.≡_k0	.subcode
gsdl.var.t.out	.cogvar
v0	.larg	gsdl.var.t
v1	.larg	gsdl.var.t
	.force	_gsdl.var.≡_k0
	.coerce	gsdl.var.t.out
	.enter	v0

_gsdl.var.≡_k0	.forcecont
gsdl.var.t	.tygvar
gsdl.var.prim.u	.tygvar
_gsdl.var.≡_k1	.subcode
gsdl.var.t.out	.cogvar
v1	.fv	gsdl.var.t
v0.0	.karg	gsdl.var.prim.u
	.force	_gsdl.var.≡_k1
	.coerce	gsdl.var.t.out
	.enter	v1

_gsdl.var.≡_k1	.forcecont
gsdl.var.prim.u	.tygvar
list.t	.tygvar
gsdl.var.component.t	.tygvar
natural.t	.tygvar
gsdl.var.t	.tygvar
bool.t	.tygvar	# Temp
list.≡	.gvar
gsdl.var.component.≡	.gvar
v0.0	.fv	gsdl.var.prim.u
v1.0	.karg	gsdl.var.prim.u
	.analyze	v0.0	basevar	constructed
		.case	basevar
cs0		.fkarg	0	list.t	gsdl.var.component.t
			.danalyze	v1.0	basevar
				.default
					.undef	bool.t
				.case	basevar
cs1				.fkarg	0	list.t	gsdl.var.component.t
					.app	gsdl.var.component.≡	cs0	cs1
					.enter	list.≡	gsdl.var.component.t
		.case	constructed
d0		.fkarg	0	natural.t
cs0		.fkarg	1	list.t	gsdl.var.t
			.undef	bool.t
		# > :: bool.t

# §section §gs{gsdl.var.fmtgs}

_gsdl.var.fmtgs_c	.expr
gsdl.var.t	.tygvar
rune.t	.tygvar
fmtgs.prec	.gvar
fmtgs.prec.arg	.gvar
diff.list.prepend	.gvar
_gsdl.var.fmtgs_prefix.s	.gvar
gsdl.cgs.syntax.var.print	.gvar
diff.list.fromlist	.gvar
_gsdl.var.fmtgs_suffix.s	.gvar
v	.larg	gsdl.var.t
v.s	.apply	gsdl.cgs.syntax.var.print	|	v
ds2	.apply	diff.list.fromlist	rune.t	|	_gsdl.var.fmtgs_suffix.s
ds1	.apply	diff.list.prepend	rune.t	|	v.s	ds2
ds	.apply	diff.list.prepend	rune.t	|	_gsdl.var.fmtgs_prefix.s	ds1
	.app	fmtgs.prec.arg	ds
	.enter	fmtgs.prec

# §section §gs{gsdl.var.t}	Constructors

_gsdl.var.basevar_c	.expr
list.t	.tygvar
gsdl.var.component.t	.tygvar
gsdl.var.prim.u	.tygvar
gsdl.var.t.in	.cogvar
cs	.larg	list.t	gsdl.var.component.t
c	.constr	gsdl.var.prim.u	basevar	0	cs
	.coerce	gsdl.var.t.in
	.lift
	.yield	c

_gsdl.var.constructed_c	.expr
natural.t	.tygvar
list.t	.tygvar
gsdl.var.t	.tygvar
gsdl.var.prim.u	.tygvar
gsdl.var.t.in	.cogvar
n	.larg	natural.t
cs	.larg	list.t	gsdl.var.t
c	.constr	gsdl.var.prim.u	constructed	0	n	1	cs
	.coerce	gsdl.var.t.in
	.lift
	.yield	c

# §section §gs{gsdl.var.component.≡}

_gsdl.var.component.≡_c	.expr
gsdl.var.component.t	.tygvar
_gsdl.var.component.≡_k0	.subcode
gsdl.var.component.t.out	.cogvar
c0	.larg	gsdl.var.component.t
c1	.larg	gsdl.var.component.t
	.force	_gsdl.var.component.≡_k0
	.coerce	gsdl.var.component.t.out
	.enter	c0

_gsdl.var.component.≡_k0	.forcecont
gsdl.var.component.t	.tygvar
gsdl.var.component.prim.u	.tygvar
_gsdl.var.component.≡_k1	.subcode
gsdl.var.component.t.out	.cogvar
c1	.fv	gsdl.var.component.t
c0.0	.karg	gsdl.var.component.prim.u
	.force	_gsdl.var.component.≡_k1
	.coerce	gsdl.var.component.t.out
	.enter	c1

_gsdl.var.component.≡_k1	.forcecont
gsdl.var.component.prim.u	.tygvar
string.t	.tygvar
string.≡	.gvar
c0.0	.fv	gsdl.var.component.prim.u
c1.0	.karg	gsdl.var.component.prim.u
	.analyze	c0.0	alphanum
		.case	alphanum
s0		.fkarg	0	string.t
			.analyze	c1.0	alphanum
				.case	alphanum
s1				.fkarg	0	string.t
					.app	s0	s1
					.enter	string.≡
	# > :: bool.t

# §section §gs{gsdl.var.component.compare}

_gsdl.var.component.compare_c	.expr
gsdl.var.component.t	.tygvar
order.total.ord.t	.tygvar	# Temp
_gsdl.var.component.compare_k0	.subcode
gsdl.var.component.t.out	.cogvar
c0	.larg	gsdl.var.component.t
c1	.larg	gsdl.var.component.t
	.force	_gsdl.var.component.compare_k0
	.coerce	gsdl.var.component.t.out
	.enter	c0

_gsdl.var.component.compare_k0	.forcecont
gsdl.var.component.t	.tygvar
gsdl.var.component.prim.u	.tygvar
_gsdl.var.component.compare_k1	.subcode
gsdl.var.component.t.out	.cogvar
c1	.fv	gsdl.var.component.t
c0.0	.karg	gsdl.var.component.prim.u
	.force	_gsdl.var.component.compare_k1
	.coerce	gsdl.var.component.t.out
	.enter	c1

_gsdl.var.component.compare_k1	.forcecont
gsdl.var.component.prim.u	.tygvar
string.t	.tygvar
order.total.ord.t	.tygvar	# Temp
string.compare	.gvar
c0.0	.fv	gsdl.var.component.prim.u
c1.0	.karg	gsdl.var.component.prim.u
	.analyze	c0.0	alphanum
		.case	alphanum
s0		.fkarg	0	string.t
			.analyze	c1.0	alphanum
				.case	alphanum
s1				.fkarg	0	string.t
					.app	s0	s1
					.enter	string.compare
	# > :: order.total.ord.t

# §section §gs{gsdl.var.component.t} Constructors

_gsdl.var.component.alphanum_c	.expr
string.t	.tygvar
gsdl.var.component.prim.u	.tygvar
gsdl.var.component.t.in	.cogvar
s	.arg	string.t
c	.constr	gsdl.var.component.prim.u	alphanum	0	s
	.coerce	gsdl.var.component.t.in
	.lift
	.yield	c

	.type

# §section §gs{gsdl.var.t}

gsdl.var.t	.tyabstract	*
gsdl.var.prim.u	.tygvar
	.tylift
	.tyref	gsdl.var.prim.u

gsdl.var.prim.u	.tyexpr
_gsdl.var.prim.u_basevar_ty	.tygvar
_gsdl.var.prim.u_constructed_ty	.tygvar
	.tysum	basevar	_gsdl.var.prim.u_basevar_ty	constructed	_gsdl.var.prim.u_constructed_ty

_gsdl.var.prim.u_basevar_ty	.tyexpr
list.t	.tygvar
gsdl.var.component.t	.tygvar
0_ty	.tylet	list.t	gsdl.var.component.t
	.tyubproduct	0	0_ty

# ↓ Invariant: Let
# > 'depth (basevar _) = 0;
# > 'depth (constructed 'n 'cs) = 1 + max (map depth cs);
# then
# > depth (constructed 'n 'cs) = n
# by invariant
_gsdl.var.prim.u_constructed_ty	.tyexpr
natural.t	.tygvar
list.t	.tygvar
gsdl.var.t	.tygvar
list.var.ty	.tylet	list.t	gsdl.var.t
	.tyubproduct	0	natural.t	1	list.var.ty

# §section §gs{gsdl.var.component.t}

gsdl.var.component.t	.tyabstract	*
gsdl.var.component.prim.u	.tygvar
	.tylift
	.tyref	gsdl.var.component.prim.u

gsdl.var.component.prim.u	.tyexpr
_gsdl.var.component.prim.u_alphanum_ty	.tygvar
	.tysum	alphanum	_gsdl.var.component.prim.u_alphanum_ty

_gsdl.var.component.prim.u_alphanum_ty	.tyexpr
string.t	.tygvar
	.tyubproduct	0	string.t

# §section §gs{gsdl.var.compare}

_gsdl.var.compare_ty	.tyexpr
gsdl.var.t	.tygvar
order.total.ord.t	.tygvar
	.tylift
	.tyfun	gsdl.var.t
	.tylift
	.tyfun	gsdl.var.t
	.tyref	order.total.ord.t

	.coercion

gsdl.var.t.in	.tycoercion
gsdl.var.t	.tygvar
	.tydefinition	gsdl.var.t

gsdl.var.t.out	.tycoercion
gsdl.var.t	.tygvar
	.tyinvert
	.tydefinition	gsdl.var.t

gsdl.var.component.t.in	.tycoercion
gsdl.var.component.t	.tygvar
	.tydefinition	gsdl.var.component.t

gsdl.var.component.t.out	.tycoercion
gsdl.var.component.t	.tygvar
	.tyinvert
	.tydefinition	gsdl.var.component.t
