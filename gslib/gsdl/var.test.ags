#calculus: gsdl.string-code 0.6

	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.eq_diff.nms	_test_parse.var	_test_parse.var.qualified	_test_parse.var.op	_test_parse.var.underbarred

_test.eq_diff.nms	.closure	_test.eq_diff.nms_c
_test.eq_diff.nms_label	.string	gsv{x}\s≡\sgsv{y}
_test.eq_diff.nms_false	.string	gsv{x}\s≠\sgsv{y}
_test.eq_diff.nms_true	.string	gsv{x}\s≡\sgsv{y}
_test.eq_diff.nms_x.s	.string	x
_test.eq_diff.nms_y.s	.string	y

_test_parse.var	.closure	_test_parse.var_c
_test_parse.var_label	.string	qq{ibio}\s=~\sparser
_test_parse.var_input	.string	ibio

_test_parse.var.qualified	.closure	_test_parse.var.qualified_c
_test_parse.var.qualified_label	.string	qq{ibio.dir}\s=~\ssyntax.var
_test_parse.var.qualified_input	.string	ibio.dir

_test_parse.var.op	.closure	_test_parse.var.op_c
_test_parse.var.op_label	.string	qq{ibio.≡}\s=~\ssyntax.var
_test_parse.var.op_input	.string	ibio.≡

_test_parse.var.underbarred	.closure	_test_parse.var.underbarred_c
_test_parse.var.underbarred_label	.string	qq{_ibio.mapM.prim_ty}\s=~\ssyntax.var
_test_parse.var.underbarred_input	.string	_ibio.mapM.prim_ty

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

-- §section §gs{gsv{x} ≡ gsv{y}}

_test.eq_diff.nms_c	.expr
gsdl.var.component.t	.tygvar
test.property.label	.gvar
_test.eq_diff.nms_label	.gvar
test.deny	.gvar
_test.eq_diff.nms_false	.gvar
_test.eq_diff.nms_true	.gvar
gsdl.var.≡	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test.eq_diff.nms_x.s	.gvar
_test.eq_diff.nms_y.s	.gvar
c0.x	.apply	gsdl.var.component.alphanum	|	_test.eq_diff.nms_x.s
cs.x	.apply	list.singleton	gsdl.var.component.t	|	c0.x
v.x	.apply	gsdl.var.basevar	|	cs.x
c0.y	.apply	gsdl.var.component.alphanum	|	_test.eq_diff.nms_y.s
cs.y	.apply	list.singleton	gsdl.var.component.t	|	c0.y
v.y	.apply	gsdl.var.basevar	|	cs.y
eq	.apply	gsdl.var.≡	|	v.x	v.y
test	.apply	test.deny	|	_test.eq_diff.nms_false	_test.eq_diff.nms_true	eq
	.app	_test.eq_diff.nms_label	test
	.enter	test.property.label

-- §section §gs{qq{ibio} =~ parser}

_test_parse.var_c	.expr
rune.t	.tygvar
gsdl.var.t	.tygvar
_test_parse.var_k_c	.subcode
test.property.label	.gvar
_test_parse.var_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.var.parser	.gvar
_test_parse.var_input	.gvar
k	.closure	_test_parse.var_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.var.t	|	parser.rune.advance	rune.print	gsdl.var.parser	_test_parse.var_input	k
	.app	_test_parse.var_label	test
	.enter	test.property.label

_test_parse.var_k_c	.expr
gsdl.var.t	.tygvar
test.true	.gvar
v	.larg	gsdl.var.t
	.enter	test.true

-- §section §gs{qq{ibio.dir} =~ var}

_test_parse.var.qualified_c	.expr
rune.t	.tygvar
gsdl.var.t	.tygvar
_test_parse.var.qualified_k_c	.subcode
test.property.label	.gvar
_test_parse.var.qualified_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.var.parser	.gvar
_test_parse.var.qualified_input	.gvar
k	.closure	_test_parse.var.qualified_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.var.t	|	parser.rune.advance	rune.print	gsdl.var.parser	_test_parse.var.qualified_input	k
	.app	_test_parse.var.qualified_label	test
	.enter	test.property.label

_test_parse.var.qualified_k_c	.expr
gsdl.var.t	.tygvar
test.true	.gvar
v	.larg	gsdl.var.t
	.enter	test.true

-- §section §gs{qq{ibio.≡} =~ var}

_test_parse.var.op_c	.expr
rune.t	.tygvar
gsdl.var.t	.tygvar
_test_parse.var.op_k_c	.subcode
test.property.label	.gvar
_test_parse.var.op_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.var.parser	.gvar
_test_parse.var.op_input	.gvar
k	.closure	_test_parse.var.op_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.var.t	|	parser.rune.advance	rune.print	gsdl.var.parser	_test_parse.var.op_input	k
	.app	_test_parse.var.op_label	test
	.enter	test.property.label

_test_parse.var.op_k_c	.expr
gsdl.var.t	.tygvar
test.true	.gvar
v	.larg	gsdl.var.t
	.enter	test.true

-- §section §gs{qq{_ibio.mapM.prim_ty} =~ var}

_test_parse.var.underbarred_c	.expr
rune.t	.tygvar
gsdl.var.t	.tygvar
_test_parse.var.underbarred_k_c	.subcode
test.property.label	.gvar
_test_parse.var.underbarred_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.var.parser	.gvar
_test_parse.var.underbarred_input	.gvar
k	.closure	_test_parse.var.underbarred_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.var.t	|	parser.rune.advance	rune.print	gsdl.var.parser	_test_parse.var.underbarred_input	k
	.app	_test_parse.var.underbarred_label	test
	.enter	test.property.label

_test_parse.var.underbarred_k_c	.expr
gsdl.var.t	.tygvar
test.true	.gvar
v	.larg	gsdl.var.t
	.enter	test.true
