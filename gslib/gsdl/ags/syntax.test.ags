	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.parse.comment	_test.parse.two.components

_test.parse.comment	.closure	_test.parse.comment_c
_test.parse.comment_label	.string	qq{\\n\h\sComment\\n}\s=~\swhitespace
_test.parse.comment_input	.string	\n\h\sComment\n

_test.parse.two.components	.closure	_test.parse.two.components_c
_test.parse.two.components_label	.string	qq{fmtgs.prec}\s=~\ssyntax.id
_test.parse.two.components_input	.string	fmtgs.prec

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section §gs{qq{\\n# Comment\\n} =~ whitespace}

_test.parse.comment_c	.expr
rune.t	.tygvar
string.t	.tygvar
_test.parse.comment_k_c	.subcode
test.property.label	.gvar
_test.parse.comment_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
string.fmtgs	.gvar
gsdl.ags.syntax.whitespace	.gvar
_test.parse.comment_input	.gvar
k	.alloc	_test.parse.comment_k_c
test	.apply	parser.test.assert.passes	rune.t	string.t	|	parser.rune.advance	rune.print	gsdl.ags.syntax.whitespace	_test.parse.comment_input	k
	.app	_test.parse.comment_label	test
	.enter	test.property.label

_test.parse.comment_k_c	.expr
string.t	.tygvar
test.true	.gvar
s	.larg	string.t
	.enter	test.true

# §section §gs{qq{fmtgs.prec} =~ syntax.id}

_test.parse.two.components_c	.expr
rune.t	.tygvar
string.t	.tygvar
_test.parse.two.components_k_c	.subcode
test.property.label	.gvar
_test.parse.two.components_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.syntax.id	.gvar
_test.parse.two.components_input	.gvar
k	.alloc	_test.parse.two.components_k_c
test	.apply	parser.test.assert.passes	rune.t	string.t	|	parser.rune.advance	rune.print	gsdl.ags.syntax.id	_test.parse.two.components_input	k
	.app	_test.parse.two.components_label	test
	.enter	test.property.label

_test.parse.two.components_k_c	.expr
string.t	.tygvar
test.assert.eq	.gvar
string.≡	.gvar
string.fmtgs	.gvar
_test.parse.two.components_input	.gvar
res	.larg	string.t
	.app	string.≡	string.fmtgs	res	_test.parse.two.components_input
	.enter	test.assert.eq	string.t
