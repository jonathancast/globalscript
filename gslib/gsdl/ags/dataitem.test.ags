	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.eq	_test.parse	_test.fmtgs

# §section §gs{≡}

_test.eq	.closure	_test.eq_c
_tests.eq	.list	test.property.t	_test.eq.undefined.diff.ty	_test.eq.closure.diff.ty

_test.eq.undefined.diff.ty	.closure	_test.eq.undefined.diff.ty_c
_test.eq.undefined.diff.ty_label	.string	undefined\sgsv{foo}\s≡\sundefined\sgsv{bar}
_test.eq.undefined.diff.ty_false	.string	undefined\sgsv{foo}\s≠\sundefined\sgsv{bar}
_test.eq.undefined.diff.ty_true	.string	undefined\sgsv{foo}\s≡\sundefined\sgsv{bar}
_test.eq.undefined.diff.ty_foo.s	.string	foo
_test.eq.undefined.diff.ty_bar.s	.string	bar

_test.eq.closure.diff.ty	.closure	_test.eq.closure.diff.ty_c
_test.eq.closure.diff.ty_label	.string	closure\sqq{_foo_c}\snothing\s≡\sclosure\sqq{_foo_c}\s(just\sqq{_foo_ty})
_test.eq.closure.diff.ty_false	.string	closure\sqq{_foo_c}\snothing\s≠\sclosure\sqq{_foo_c}\s(just\sqq{_foo_ty})
_test.eq.closure.diff.ty_true	.string	closure\sqq{_foo_c}\snothing\s≡\sclosure\sqq{_foo_c}\s(just\sqq{_foo_ty})
_test.eq.closure.diff.ty_foo.c.s	.string	_foo_c
_test.eq.closure.diff.ty_foo.ty.s	.string	_foo_ty

# §section Parsers

_test.parse	.closure	_test.parse_c

_tests.parse	.list	test.property.t	_test.parse.missing.gsdata.segment	_test.parse.empty.gsdata.segment	_test.parse.closure	_test.parse.closure.nolabel	_test.parse.closure.typesig	_test.parse.list

_test.parse.missing.gsdata.segment	.closure	_test.parse.missing.gsdata.segment_c
_test.parse.missing.gsdata.segment_label	.string	segment.parser\s=~\sqq{}

_test.parse.empty.gsdata.segment	.closure	_test.parse.empty.gsdata.segment_c
_test.parse.empty.gsdata.segment_label	.string	segment.parser\s=~\sqq{\\t.data\\n}
_test.parse.empty.gsdata.segment_input	.string	\t.data\n

_test.parse.closure	.closure	_test.parse.closure_c
_test.parse.closure_label	.string	qq{foo\\t.closure\\t_foo_c\\n}\s=~\sparser
_test.parse.closure_input	.string	foo\t.closure\t_foo_c\n
_test.parse.closure_foo.s	.string	foo
_test.parse.closure_foo.c.s	.string	_foo_c

_test.parse.closure.nolabel	.closure	_test.parse.closure.nolabel_c
_test.parse.closure.nolabel_label	.string	parser\s=~\sqq{\\t.closure\\t_foo_c\\n}
_test.parse.closure.nolabel_input	.string	\t.closure\t_foo_c\n
_test.parse.closure.nolabel_foo.c.s	.string	_foo_c

_test.parse.closure.typesig	.closure	_test.parse.closure.typesig_c
_test.parse.closure.typesig_label	.string	qq{foo\\t.closure\\t_foo_c\\t_foo_ty\\n}\s=~\sparser
_test.parse.closure.typesig_input	.string	foo\t.closure\t_foo_c\t_foo_ty\n
_test.parse.closure.typesig_foo.s	.string	foo
_test.parse.closure.typesig_foo.c.s	.string	_foo_c
_test.parse.closure.typesig_foo.ty.s	.string	_foo_ty

_test.parse.list	.closure	_test.parse.list_c
_test.parse.list_label	.string	qq{_tests\\t.list\\ttest.property.t\\t_test.x.eq.x\\n}\s=~\sparser
_test.parse.list_input	.string	_tests\t.list\ttest.property.t\t_test.x.eq.x\n

# §section §gs{fmtgs}

_test.fmtgs	.closure	_test.fmtgs_c
_tests.fmtgs	.list	test.property.t	_test.fmtgs.undefined

_test.fmtgs.undefined	.closure	_test.fmtgs.undefined_c
_test.fmtgs.undefined_label	.string	fmtgs\s(undefined\sgsv{foo})
_test.fmtgs.undefined_file.s	.string	./foo
_test.fmtgs.undefined_foo.s	.string	foo
_test.fmtgs.undefined_expected	.string	undefined\s〈\s'file\s∝\sfn<./foo>;\s'0.line\s∝\s1;\s'0.col\s∝\s1;\s〉\snothing\sgsv{foo}

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section §gs{≡}

_test.eq_c	.expr
test.all	.gvar
_tests.eq	.gvar
	.app	_tests.eq
	.enter	test.all

# §subsection §gs{undefined qq{foo} ≡ undefined qq{bar}}

_test.eq.undefined.diff.ty_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.var.component.t	.tygvar
test.property.label	.gvar
_test.eq.undefined.diff.ty_label	.gvar
test.deny	.gvar
_test.eq.undefined.diff.ty_false	.gvar
_test.eq.undefined.diff.ty_true	.gvar
gsdl.ags.dataitem.≡	.gvar
gsdl.ags.dataitem.undefined	.gvar
maybe.nothing	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test.eq.undefined.diff.ty_foo.s	.gvar
_test.eq.undefined.diff.ty_bar.s	.gvar
pos0	.undefined	gsdl.sourcepos.t
nothing	.apply	maybe.nothing	gsdl.var.t
foo.c0	.apply	gsdl.var.component.alphanum	|	_test.eq.undefined.diff.ty_foo.s
foo.cs	.apply	list.singleton	gsdl.var.component.t	|	foo.c0
foo.v	.apply	gsdl.var.basevar	|	foo.cs
u.foo	.apply	gsdl.ags.dataitem.undefined	|	pos0	nothing	foo.v
bar.c0	.apply	gsdl.var.component.alphanum	|	_test.eq.undefined.diff.ty_bar.s
bar.cs	.apply	list.singleton	gsdl.var.component.t	|	bar.c0
bar.v	.apply	gsdl.var.basevar	|	bar.cs
u.bar	.apply	gsdl.ags.dataitem.undefined	|	pos0	nothing	bar.v
eq	.apply	gsdl.ags.dataitem.≡	|	u.foo	u.bar
test	.apply	test.deny	|	_test.eq.undefined.diff.ty_false	_test.eq.undefined.diff.ty_true	eq
	.app	_test.eq.undefined.diff.ty_label	test
	.enter	test.property.label

# §subsection §gs{closure qq{_foo_c} nothing ≡ closure qq{_foo_c} (just qq{_foo_ty})}

_test.eq.closure.diff.ty_c	.expr
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
test.property.label	.gvar
_test.eq.closure.diff.ty_label	.gvar
test.deny	.gvar
_test.eq.closure.diff.ty_false	.gvar
_test.eq.closure.diff.ty_true	.gvar
gsdl.ags.dataitem.≡	.gvar
gsdl.ags.dataitem.closure	.gvar
maybe.nothing	.gvar
_test.eq.closure.diff.ty_foo.c.s	.gvar
maybe.just	.gvar
_test.eq.closure.diff.ty_foo.ty.s	.gvar
pos	.undefined	gsdl.sourcepos.t
nothing	.apply	maybe.nothing	string.t
da0	.apply	gsdl.ags.dataitem.closure	|	pos	nothing	_test.eq.closure.diff.ty_foo.c.s	nothing
just.foo.ty.s	.apply	maybe.just	string.t	|	_test.eq.closure.diff.ty_foo.ty.s
da1	.apply	gsdl.ags.dataitem.closure	|	pos	nothing	_test.eq.closure.diff.ty_foo.c.s	just.foo.ty.s
eq	.apply	gsdl.ags.dataitem.≡	|	da0	da1
test	.apply	test.deny	|	_test.eq.closure.diff.ty_false	_test.eq.closure.diff.ty_true	eq
	.app	_test.eq.closure.diff.ty_label	test
	.enter	test.property.label

# §section Parsers

_test.parse_c	.expr
test.all	.gvar
_tests.parse	.gvar
	.app	_tests.parse
	.enter	test.all

# §subsection §gs{segment.parser =~ qq{}}

_test.parse.missing.gsdata.segment_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
_test.parse.missing.gsdata.segment_k_c	.subcode
test.property.label	.gvar
_test.parse.missing.gsdata.segment_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.dataitem.segment.parser	.gvar
bool.false	.gvar
list.nil	.gvar
datasegment_ty	.tylet	list.t	gsdl.ags.dataitem.t
nil	.apply	list.nil	rune.t
k	.alloc	_test.parse.missing.gsdata.segment_k_c
ds	.apply	gsdl.ags.dataitem.segment.parser	|	bool.false
test	.apply	parser.test.assert.passes	rune.t	datasegment_ty	|	parser.rune.advance	rune.print	ds	nil	k
	.app	_test.parse.missing.gsdata.segment_label	test
	.enter	test.property.label

_test.parse.missing.gsdata.segment_k_c	.expr
list.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
eq.t	.tygvar
fmtgs.t	.tygvar
test.assert.eq	.gvar
list.≡	.gvar
list.fmtgs.byDefault	.gvar
list.nil	.gvar
datasegment_ty	.tylet	list.t	gsdl.ags.dataitem.t
das	.larg	list.t	gsdl.ags.dataitem.t
d.≡	.undefined	eq.t	gsdl.ags.dataitem.t
ds.≡	.apply	list.≡	gsdl.ags.dataitem.t	|	d.≡
d.fmtgs	.undefined	fmtgs.t	gsdl.ags.dataitem.t
ds.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.dataitem.t	|	d.fmtgs
nil	.apply	list.nil	gsdl.ags.dataitem.t
	.app	ds.≡	ds.fmtgs	das	nil
	.enter	test.assert.eq	datasegment_ty

# §subsection §gs{segment.parser =~ qq{\\t.data\\n}}

_test.parse.empty.gsdata.segment_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
_test.parse.empty.gsdata.segment_k_c	.subcode
test.property.label	.gvar
_test.parse.empty.gsdata.segment_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.dataitem.segment.parser	.gvar
bool.false	.gvar
_test.parse.empty.gsdata.segment_input	.gvar
datasegment_ty	.tylet	list.t	gsdl.ags.dataitem.t
k	.alloc	_test.parse.empty.gsdata.segment_k_c
ds	.apply	gsdl.ags.dataitem.segment.parser	|	bool.false
test	.apply	parser.test.assert.passes	rune.t	datasegment_ty	|	parser.rune.advance	rune.print	ds	_test.parse.empty.gsdata.segment_input	k
	.app	_test.parse.empty.gsdata.segment_label	test
	.enter	test.property.label

_test.parse.empty.gsdata.segment_k_c	.expr
list.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
eq.t	.tygvar
fmtgs.t	.tygvar
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.dataitem.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.dataitem.fmtgs	.gvar
list.nil	.gvar
datasegment_ty	.tylet	list.t	gsdl.ags.dataitem.t
das	.larg	list.t	gsdl.ags.dataitem.t
ds.≡	.apply	list.≡	gsdl.ags.dataitem.t	|	gsdl.ags.dataitem.≡
ds.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.dataitem.t	|	gsdl.ags.dataitem.fmtgs
nil	.apply	list.nil	gsdl.ags.dataitem.t
	.app	ds.≡	ds.fmtgs	das	nil
	.enter	test.assert.eq	datasegment_ty

# §subsection §gs{parser =~ qq{foo\\t.closure\\t_foo_c\\n}}

_test.parse.closure_c	.expr
rune.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
_test.parse.closure_k_c	.subcode
test.property.label	.gvar
_test.parse.closure_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.dataitem.parser	.gvar
bool.false	.gvar
_test.parse.closure_input	.gvar
k	.alloc	_test.parse.closure_k_c
ds	.apply	gsdl.ags.dataitem.parser	|	bool.false
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.dataitem.t	|	parser.rune.advance	rune.print	ds	_test.parse.closure_input	k
	.app	_test.parse.closure_label	test
	.enter	test.property.label

# foo	.closure	_foo_c
_test.parse.closure_k_c	.expr
gsdl.ags.dataitem.t	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
test.assert.eq	.gvar
gsdl.ags.dataitem.≡	.gvar
gsdl.ags.dataitem.fmtgs	.gvar
gsdl.ags.dataitem.closure	.gvar
maybe.just	.gvar
_test.parse.closure_foo.s	.gvar
_test.parse.closure_foo.c.s	.gvar
maybe.nothing	.gvar
di	.larg	gsdl.ags.dataitem.t
pos	.undefined	gsdl.sourcepos.t
just.foo.s	.apply	maybe.just	string.t	|	_test.parse.closure_foo.s
nothing	.apply	maybe.nothing	string.t
expected	.apply	gsdl.ags.dataitem.closure	|	pos	just.foo.s	_test.parse.closure_foo.c.s	nothing
	.app	gsdl.ags.dataitem.≡	gsdl.ags.dataitem.fmtgs	di	expected
	.enter	test.assert.eq	gsdl.ags.dataitem.t

# §subsection §gs{parser =~ qq{\\t.closure\\t_foo_c\\n}}

_test.parse.closure.nolabel_c	.expr
rune.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
_test.parse.closure.nolabel_k_c	.subcode
test.property.label	.gvar
_test.parse.closure.nolabel_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.dataitem.parser	.gvar
bool.false	.gvar
_test.parse.closure.nolabel_input	.gvar
k	.alloc	_test.parse.closure.nolabel_k_c
di	.apply	gsdl.ags.dataitem.parser	|	bool.false
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.dataitem.t	|	parser.rune.advance	rune.print	di	_test.parse.closure.nolabel_input	k
	.app	_test.parse.closure.nolabel_label	test
	.enter	test.property.label

# foo	.closure	_foo_c
_test.parse.closure.nolabel_k_c	.expr
gsdl.ags.dataitem.t	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
test.assert.eq	.gvar
gsdl.ags.dataitem.≡	.gvar
gsdl.ags.dataitem.fmtgs	.gvar
gsdl.ags.dataitem.closure	.gvar
_test.parse.closure.nolabel_foo.c.s	.gvar
maybe.nothing	.gvar
di	.larg	gsdl.ags.dataitem.t
pos	.undefined	gsdl.sourcepos.t
nothing	.apply	maybe.nothing	string.t
expected	.apply	gsdl.ags.dataitem.closure	|	pos	nothing	_test.parse.closure.nolabel_foo.c.s	nothing
	.app	gsdl.ags.dataitem.≡	gsdl.ags.dataitem.fmtgs	di	expected
	.enter	test.assert.eq	gsdl.ags.dataitem.t

# §subsection §gs{qq{foo\\t.closure\\t_foo_c\\t_foo_ty\\n} =~ parser}

_test.parse.closure.typesig_c	.expr
rune.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
_test.parse.closure.typesig_k_c	.subcode
test.property.label	.gvar
_test.parse.closure.typesig_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.dataitem.parser	.gvar
bool.false	.gvar
_test.parse.closure.typesig_input	.gvar
k	.alloc	_test.parse.closure.typesig_k_c
ds	.apply	gsdl.ags.dataitem.parser	|	bool.false
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.dataitem.t	|	parser.rune.advance	rune.print	ds	_test.parse.closure.typesig_input	k
	.app	_test.parse.closure.typesig_label	test
	.enter	test.property.label

_test.parse.closure.typesig_k_c	.expr
gsdl.ags.dataitem.t	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
test.assert.eq	.gvar
gsdl.ags.dataitem.≡	.gvar
gsdl.ags.dataitem.fmtgs	.gvar
gsdl.ags.dataitem.closure	.gvar
maybe.just	.gvar
_test.parse.closure.typesig_foo.s	.gvar
_test.parse.closure.typesig_foo.c.s	.gvar
_test.parse.closure.typesig_foo.ty.s	.gvar
di	.larg	gsdl.ags.dataitem.t
pos	.undefined	gsdl.sourcepos.t
just.foo.s	.apply	maybe.just	string.t	|	_test.parse.closure.typesig_foo.s
just.foo.ty.s	.apply	maybe.just	string.t	|	_test.parse.closure.typesig_foo.ty.s
expected	.apply	gsdl.ags.dataitem.closure	|	pos	just.foo.s	_test.parse.closure.typesig_foo.c.s	just.foo.ty.s
	.app	gsdl.ags.dataitem.≡	gsdl.ags.dataitem.fmtgs	di	expected
	.enter	test.assert.eq	gsdl.ags.dataitem.t

# §subsection §gs{qq{_tests\\t.list\\ttest.property.t\\t_test.x.eq.x\\n} =~ parser}

_test.parse.list_c	.expr
rune.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
_test.parse.list_k_c	.subcode
test.property.label	.gvar
_test.parse.list_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.dataitem.parser	.gvar
bool.true	.gvar
_test.parse.list_input	.gvar
k	.alloc	_test.parse.list_k_c
ds	.apply	gsdl.ags.dataitem.parser	|	bool.true
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.dataitem.t	|	parser.rune.advance	rune.print	ds	_test.parse.list_input	k
	.app	_test.parse.list_label	test
	.enter	test.property.label

_test.parse.list_k_c	.expr
gsdl.ags.dataitem.t	.tygvar
test.true	.gvar
di	.larg	gsdl.ags.dataitem.t
	.enter	test.true

# §section §gs{fmtgs}

_test.fmtgs_c	.expr
test.all	.gvar
_tests.fmtgs	.gvar
	.app	_tests.fmtgs
	.enter	test.all

# §subsection §gs{fmtgs (undefined 〈 'file ∝ fn<./foo>; '0.line ∝ 1; '0.col ∝ 1; 〉 qq{foo})}

_test.fmtgs.undefined_c	.expr
string.t	.tygvar
gsdl.var.t	.tygvar
gsdl.var.component.t	.tygvar
rune.t	.tygvar
test.property.label	.gvar
_test.fmtgs.undefined_label	.gvar
test.assert.eq	.gvar
string.≡	.gvar
string.fmtgs	.gvar
gsdl.ags.dataitem.fmtgs	.gvar
gsdl.ags.dataitem.undefined	.gvar
natural.1	.gvar
ibio.file.name.in	.gvar
_test.fmtgs.undefined_file.s	.gvar
maybe.nothing	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test.fmtgs.undefined_foo.s	.gvar
fmtgs.prec.app	.gvar
list.nil	.gvar
_test.fmtgs.undefined_expected	.gvar
fn	.apply	ibio.file.name.in	|	_test.fmtgs.undefined_file.s
pos	.lrecord	0.col	natural.1	0.line	natural.1	file	fn
nothing	.apply	maybe.nothing	gsdl.var.t
foo.c0	.apply	gsdl.var.component.alphanum	|	_test.fmtgs.undefined_foo.s
foo.cs	.apply	list.singleton	gsdl.var.component.t	|	foo.c0
foo.v	.apply	gsdl.var.basevar	|	foo.cs
di	.apply	gsdl.ags.dataitem.undefined	|	pos	nothing	foo.v
nil	.apply	list.nil	rune.t
actual	.apply	gsdl.ags.dataitem.fmtgs	|	di	fmtgs.prec.app	nil
test	.apply	test.assert.eq	string.t	|	string.≡	string.fmtgs	actual	_test.fmtgs.undefined_expected
	.app	_test.fmtgs.undefined_label	test
	.enter	test.property.label
