#calculus: gsdl.string-code 0.6

	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.parse	_test.eq

-- §section Parsers

_test.parse	.closure	_test.parse_c
_tests.parse	.list	test.property.t	_test.parse_segments	_test.parse_expr.items	_test.parse_forcecont.items	_test.parse_strictcont.items	_test.parse_impprog.items	_test.parse_ubcasecont.items	_test.parse_gvars	_test.parse_allocs	_test.parse_impgens	_test.parse_exprs

-- §subsection Code Segments

_test.parse_segments	.closure	_test.parse_segments_c
_tests.parse_segments	.list	test.property.t	_test.parse_segment.empty

_test.parse_segment.empty	.closure	_test.parse_segment.empty_c
_test.parse_segment.empty_label	.string	qq{\\t.code\\n}\s=~\ssegment.parser
_test.parse_segment.empty_input	.string	\t.code\n

-- §subsection §ags{.expr} Code Items

_test.parse_expr.items	.closure	_test.parse_expr.items_c
_tests.parse_expr.items	.list	test.property.t	_test.parse_expr	_test.parse_expr.tygvar	_test.parse_expr.subcode	_test.parse_expr.cogvar	_test.parse_expr.gvar	_test.parse_expr.rune	_test.parse_expr.larg	_test.parse_expr.alloc	_test.parse_expr.impprim	_test.parse_expr.impprim.args	_test.parse_expr.undefined	_test.parse_expr.field	_test.parse_expr.record	_test.parse_expr.prim	_test.parse_expr.prim.tyargs	_test.parse_expr.prim.args

_test.parse_expr	.closure	_test.parse_expr_c
_test.parse_expr_label	.string	qq{_foo_c\\t.expr\\n\\t.enter\\tbar\\n}\s=~\sparser
_test.parse_expr_input	.string	_foo_c\t.expr\n\t.enter\tbar\n
_test.parse_expr_k_bar.s	.string	bar

_test.parse_expr.tygvar	.closure	_test.parse_expr.tygvar_c
_test.parse_expr.tygvar_label	.string	qq{_foo_c\\t.expr\\nbar.t\\t.tygvar\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.tygvar_input	.string	_foo_c\t.expr\nbar.t\t.tygvar\n\t.enter\tbaz\n
_test.parse_expr.tygvar_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.tygvar_k_tygvs.expected	.list	gsdl.ags.typeitem.decls.tygvar.t	_test.parse_expr.tygvar_k_bar.t.tygv
_test.parse_expr.tygvar_k_bar.t.tygv	.closure	_test.parse_expr.tygvar_k_bar.t.tygv_c

_test.parse_expr.subcode	.closure	_test.parse_expr.subcode_c
_test.parse_expr.subcode_label	.string	qq{_foo_c\\t.expr\\n_bar_c\\t.subcode\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.subcode_input	.string	_foo_c\t.expr\n_bar_c\t.subcode\n\t.enter\tbaz\n
_test.parse_expr.subcode_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.subcode_k_subcodes.expected	.list	string.t	_test.parse_expr.subcode_k_subcodes.expected_0
_test.parse_expr.subcode_k_subcodes.expected_0	.string	_bar_c

_test.parse_expr.cogvar	.closure	_test.parse_expr.cogvar_c
_test.parse_expr.cogvar_label	.string	qq{_foo_c\\t.expr\\nbar.t.out\\t.cogvar\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.cogvar_input	.string	_foo_c\t.expr\nbar.t.out\t.cogvar\n\t.enter\tbaz\n
_test.parse_expr.cogvar_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.cogvar_k_cogvars.expected	.list	string.t	_test.parse_expr.cogvar_k_cogvars.expected_0
_test.parse_expr.cogvar_k_cogvars.expected_0	.string	bar.t.out

_test.parse_expr.gvar	.closure	_test.parse_expr.gvar_c
_test.parse_expr.gvar_label	.string	qq{_foo_c\\t.expr\\nbar\\t.gvar\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.gvar_input	.string	_foo_c\t.expr\nbar\t.gvar\n\t.enter\tbaz\n
_test.parse_expr.gvar_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.gvar_k_gvars.expected.0_bar.s	.string	bar

_test.parse_expr.rune	.closure	_test.parse_expr.rune_c
_test.parse_expr.rune_label	.string	qq{_foo_c\\t.expr\\nnl\\t.rune\\t\\\\n\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.rune_input	.string	_foo_c\t.expr\nnl\t.rune\t\\n\n\t.enter\tbaz\n

_test.parse_expr.larg	.closure	_test.parse_expr.larg_c
_test.parse_expr.larg_label	.string	qq{_foo_c\\t.expr\\nbar\\t.larg\\tbar.t\\tquux.t\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.larg_input	.string	_foo_c\t.expr\nbar\t.larg\tbar.t\tquux.t\n\t.enter\tbaz\n
_test.parse_expr.larg_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.larg_k_tyargs	.list	gsdl.var.t	_fixtures_quux.t.v

_test.parse_expr.alloc	.closure	_test.parse_expr.alloc_c
_test.parse_expr.alloc_label	.string	qq{_foo_c\\t.expr\\nbar\\t.alloc\\t_bar_c\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.alloc_input	.string	_foo_c\t.expr\nbar\t.alloc\t_bar_c\n\t.enter\tbaz\n

_test.parse_expr.impprim	.closure	_test.parse_expr.impprim_c
_test.parse_expr.impprim_label	.string	qq{_foo_c\\t.expr\\nu\\t.impprim\\tibio.prim\\tibio\\tunit\\t_ibio.prim.unit_ty\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.impprim_input	.string	_foo_c\t.expr\nu\t.impprim\tibio.prim\tibio\tunit\t_ibio.prim.unit_ty\n\t.enter\tbaz\n

_test.parse_expr.impprim.args	.closure	_test.parse_expr.impprim.args_c
_test.parse_expr.impprim.args_label	.string	qq{_foo_c\\t.expr\\nu\\t.impprim\\tibio.prim\\tibio\\tunit\\t_ibio.prim.\\\tα\\t|\\tx\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.impprim.args_input	.string	_foo_c\t.expr\nu\t.impprim\tibio.prim\tibio\tunit\t_ibio.prim.unit_ty\tα\t|\tx\n\t.enter\tbaz\n

_test.parse_expr.undefined	.closure	_test.parse_expr.undefined_c
_test.parse_expr.undefined_label	.string	qq{_foo_c\\t.expr\\nbar\\t.undefined\\tbar.t\\tα\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.undefined_input	.string	_foo_c\t.expr\nbar\t.undefined\tbar.t\tα\n\t.enter\tbaz\n

_test.parse_expr.field	.closure	_test.parse_expr.field_c
_test.parse_expr.field_label	.string	qq{_foo_c\\t.expr\\nx.bar\\t.field\\tbar\\tx\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.field_input	.string	_foo_c\t.expr\nx.bar\t.field\tbar.t\tx\n\t.enter\tbaz\n

_test.parse_expr.record	.closure	_test.parse_expr.record_c
_test.parse_expr.record_label	.string	qq{_foo_c\\t.expr\\nx\\t.record\\tf\\tx.f\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.record_input	.string	_foo_c\t.expr\nx\t.record\tf\tx.f\n\t.enter\tbaz\n

_test.parse_expr.prim	.closure	_test.parse_expr.prim_c
_test.parse_expr.prim_label	.string	qq{_foo_c\\t.expr\\nx\\t.prim\\tset\\tf\\tty\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.prim_input	.string	_foo_c\t.expr\nx\t.prim\tset\tf\tty\n\t.enter\tbaz\n

_test.parse_expr.prim.tyargs	.closure	_test.parse_expr.prim.tyargs_c
_test.parse_expr.prim.tyargs_label	.string	qq{_foo_c\\t.expr\\nx\\t.prim\\tset\\tf\\tty\\tα\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.prim.tyargs_input	.string	_foo_c\t.expr\nx\t.prim\tset\tf\tty\tα\n\t.enter\tbaz\n

_test.parse_expr.prim.args	.closure	_test.parse_expr.prim.args_c
_test.parse_expr.prim.args_label	.string	qq{_foo_c\\t.expr\\nx\\t.prim\\tset\\tf\\tty\\t|\\tx\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.prim.args_input	.string	_foo_c\t.expr\nx\t.prim\tset\tf\tty\t|\tx\n\t.enter\tbaz\n

-- §subsection §ags{.forcecont} Code Items

_test.parse_forcecont.items	.closure	_test.parse_forcecont.items_c
_tests.parse_forcecont.items	.list	test.property.t	_test.parse_forcecont	_test.parse_forcecont.karg.tyargs	_test.parse_forcecont.undef	_test.parse_forcecont.tyfv	_test.parse_forcecont.tylet	_test.parse_forcecont.fv

_test.parse_forcecont	.closure	_test.parse_forcecont_c
_test.parse_forcecont_label	.string	qq{_foo_k\\t.forcecont\\nx0\\t.karg\\tx.u\\n\\t.enter\\ty\\n}\s=~\sparser
_test.parse_forcecont_input	.string	_foo_k\t.forcecont\nx0\t.karg\tx.u\n\t.enter\ty\n
_test.parse_forcecont_k_foo.k.s	.string	_foo_k
_test.parse_forcecont_k_x0.s	.string	x0
_test.parse_forcecont_k_x.u.s	.string	x.u
_test.parse_forcecont_k_y.s	.string	y

_test.parse_forcecont.karg.tyargs	.closure	_test.parse_forcecont.karg.tyargs_c
_test.parse_forcecont.karg.tyargs_label	.string	qq{_foo_k\\t.forcecont\\nx0\\t.karg\\tx.u\\tα\\n\\t.enter\\ty\\n}\s=~\sparser
_test.parse_forcecont.karg.tyargs_input	.string	_foo_k\t.forcecont\nx0\t.karg\tx.u\tα\n\t.enter\ty\n

_test.parse_forcecont.undef	.closure	_test.parse_forcecont.undef_c
_test.parse_forcecont.undef_label	.string	qq{_foo_k\\t.forcecont\\nx0\\t.karg\\tx.u\\n\\t.undef\\tx.t\\n}\s=~\sparser
_test.parse_forcecont.undef_input	.string	_foo_k\t.forcecont\nx0\t.karg\tx.u\n\t.undef\tx.t\n

_test.parse_forcecont.tyfv	.closure	_test.parse_forcecont.tyfv_c
_test.parse_forcecont.tyfv_label	.string	qq{_foo_k\\t.forcecont\\nα\\t.tyfv\\t*\\nx0\\t.karg\\tx.u\\n\\t.undef\\tα\\n}\s=~\sparser
_test.parse_forcecont.tyfv_input	.string	_foo_k\t.forcecont\nα\t.tyfv\t*\nx0\t.karg\tx.u\n\t.undef\tα\n

_test.parse_forcecont.tylet	.closure	_test.parse_forcecont.tylet_c
_test.parse_forcecont.tylet_label	.string	qq{_foo_k\\t.forcecont\\nty\\t.tylet\\tt\\tα\\nx0\\t.karg\\tx.u\\n\\t.undef\\tα\\n}\s=~\sparser
_test.parse_forcecont.tylet_input	.string	_foo_k\t.forcecont\nty\t.tylet\tt\tα\nx0\t.karg\tx.u\n\t.undef\tα\n

_test.parse_forcecont.fv	.closure	_test.parse_forcecont.fv_c
_test.parse_forcecont.fv_label	.string	qq{_foo_k\\t.forcecont\\nbar\\t.fv\\tbar.t\\nx0\\t.karg\\tx.u\\n\\t.enter\\ty\\n}\s=~\sparser
_test.parse_forcecont.fv_input	.string	_foo_k\t.forcecont\nbar\t.fv\tbar.t\nx0\t.karg\tx.u\n\t.enter\ty\n

-- §subsection §ags{.strictcont} Code Items

_test.parse_strictcont.items	.closure	_test.parse_strictcont.items_c
_tests.parse_strictcont.items	.list	test.property.t	_test.parse_strictcont

_test.parse_strictcont	.closure	_test.parse_strictcont_c
_test.parse_strictcont_label	.string	qq{_foo_k\\t.strictcont\\nx0\\t.karg\\tx.t\\n\\t.enter\\ty\\n}\s=~\sparser
_test.parse_strictcont_input	.string	_foo_k\t.strictcont\nx0\t.karg\tx.t\n\t.enter\ty\n

-- §subsection Imperative Block Statements

_test.parse_impprog.items	.closure	_test.parse_impprog.items_c
_tests.parse_impprog.items	.list	test.property.t	_test.parse_impprog	_test.parse_impprog.bind	_test.parse_impprog.0.4	_test.parse_impprog.0.5

_test.parse_impprog	.closure	_test.parse_impprog_c
_test.parse_impprog_label	.string	qq{_foo_c\\t.impprog\\tfoo\\tm\\n\\t.body\\t_foo_body_c\\n}\s=~\sparser
_test.parse_impprog_input	.string	_foo_c\t.impprog\tfoo\tm\n\t.body\t_foo_body_c\n

_test.parse_impprog.bind	.closure	_test.parse_impprog.bind_c
_test.parse_impprog.bind_label	.string	qq{_foo_c\\t.impprog\\tfoo\\tm\\nx\\t.bind\\t_foo_x_c\\n\\t.body\\t_foo_body_c\\n}\s=~\sparser
_test.parse_impprog.bind_input	.string	_foo_c\t.impprog\tfoo\tm\nx\t.bind\t_foo_x_c\n\t.body\t_foo_body_c\n

_test.parse_impprog.0.4	.closure	_test.parse_impprog.0.4_c
_test.parse_impprog.0.4_label	.string	qq{_foo_c\\t.impprog\\tfoo\\tm\\n\\t.body.closure\\t_foo_body_c\\n}\s=~\sparser\s0.4
_test.parse_impprog.0.4_input	.string	_foo_c\t.impprog\tfoo\tm\n\t.body.closure\t_foo_body_c\n

_test.parse_impprog.0.5	.closure	_test.parse_impprog.0.5_c
_test.parse_impprog.0.5_label	.string	qq{_foo_c\\t.impprog\\tfoo\\tm\\n\\t.body\\t.closure\\t_foo_body_c\\n}\s=~\sparser\s0.5
_test.parse_impprog.0.5_input	.string	_foo_c\t.impprog\tfoo\tm\n\t.body\t.closure\t_foo_body_c\n

-- §subsection §ags{.ubcasecont} Code Items

_test.parse_ubcasecont.items	.closure	_test.parse_ubcasecont.items_c
_tests.parse_ubcasecont.items	.list	test.property.t	_test.parse_ubcasecont

_test.parse_ubcasecont	.closure	_test.parse_ubcasecont_c
_test.parse_ubcasecont_label	.string	qq{_rune.≡.k1.0\\t.ubcasecont\\n\\t.enter\\tbool.false\\n}\s=~\sparser
_test.parse_ubcasecont_input	.string	_rune.≡.k1.0\t.ubcasecont\n\t.enter\tbool.false\n

-- §subsection Global Variable Declarations

_test.parse_gvars	.closure	_test.parse_gvars_c
_test.parse_gvars_label	.string	Global\sValue\sVariable\sDeclarations
_tests.parse_gvars	.list	test.property.t	_test.parse_gvar_rune.no.hash	_test.parse_gvar_rune.bs.h	_test.parse_gvar_0.2.rune.hash	_test.parse_gvar_0.2.rune.no.bs.h

_test.parse_gvar_rune.no.hash	.closure	_test.parse_gvar_rune.no.hash_c
_test.parse_gvar_rune.no.hash_label	.string	qq{x\\t.rune\\t#\\n}\s=~\sgsdl.ags.codeitem.gvars.parser
_test.parse_gvar_rune.no.hash_input	.string	x\t.rune\t#\n

_test.parse_gvar_rune.bs.h	.closure	_test.parse_gvar_rune.bs.h_c
_test.parse_gvar_rune.bs.h_label	.string	qq{x\\t.rune\\t\\\\h\\n}\s=~\sgsdl.ags.codeitem.gvars.parser
_test.parse_gvar_rune.bs.h_input	.string	x\t.rune\t\\h\n

_test.parse_gvar_0.2.rune.hash	.closure	_test.parse_gvar_0.2.rune.hash_c
_test.parse_gvar_0.2.rune.hash_label	.string	qq{x\\t.rune\\t#\\n}\s=~\sgsdl.ags.codeitem.gvars.parser
_test.parse_gvar_0.2.rune.hash_input	.string	x\t.rune\t#\n

_test.parse_gvar_0.2.rune.no.bs.h	.closure	_test.parse_gvar_0.2.rune.no.bs.h_c
_test.parse_gvar_0.2.rune.no.bs.h_label	.string	qq{x\\t.rune\\t\\\\h\\n}\s=~\sgsdl.ags.codeitem.gvars.parser
_test.parse_gvar_0.2.rune.no.bs.h_input	.string	x\t.rune\t\\h\n

-- §subsection Expression Generators

_test.parse_allocs	.closure	_test.parse_allocs_c
_test.parse_allocs_label	.string	Expression\sGenerators

_tests.parse_allocs	.list	test.property.t	_test.parse_alloc_0.2.alloc	_test.parse_alloc_0.2.no.closure	_test.parse_alloc_0.3.no.alloc	_test.parse_alloc_0.3.closure

_test.parse_alloc_0.2.alloc	.closure	_test.parse_alloc_0.2.alloc_c
_test.parse_alloc_0.2.alloc_label	.string	qq{x\\t.alloc\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.allocs.parser\s0.2
_test.parse_alloc_0.2.alloc_input	.string	x\t.alloc\t_x_c\n

_test.parse_alloc_0.2.no.closure	.closure	_test.parse_alloc_0.2.no.closure_c
_test.parse_alloc_0.2.no.closure_label	.string	qq{x\\t.closure\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.allocs.parser\s0.2
_test.parse_alloc_0.2.no.closure_input	.string	x\t.closure\t_x_c\n

_test.parse_alloc_0.3.no.alloc	.closure	_test.parse_alloc_0.3.no.alloc_c
_test.parse_alloc_0.3.no.alloc_label	.string	qq{x\\t.alloc\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.allocs.parser\s0.3
_test.parse_alloc_0.3.no.alloc_input	.string	x\t.alloc\t_x_c\n

_test.parse_alloc_0.3.closure	.closure	_test.parse_alloc_0.3.closure_c
_test.parse_alloc_0.3.closure_label	.string	qq{x\\t.closure\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.allocs.parser\s0.3
_test.parse_alloc_0.3.closure_input	.string	x\t.closure\t_x_c\n

-- §subsection Imperative Generators

_test.parse_impgens	.closure	_test.parse_impgens_c
_test.parse_impgens_label	.string	Imperative\sGenerators

_tests.parse_impgens	.list	test.property.t	_test.parse_impgens_0.3.bind	_test.parse_impgens_0.3.no.bind.closure	_test.parse_impgens_0.4.no.bind	_test.parse_impgens_0.4.bind.closure	_test.parse_impgens_0.5.bind.closure.two.words

_test.parse_impgens_0.3.bind	.closure	_test.parse_impgens_0.3.bind_c
_test.parse_impgens_0.3.bind_label	.string	qq{x\\t.bind\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.impgens.parser\s0.3
_test.parse_impgens_0.3.bind_input	.string	x\t.bind\t_x_c\n

_test.parse_impgens_0.3.no.bind.closure	.closure	_test.parse_impgens_0.3.no.bind.closure_c
_test.parse_impgens_0.3.no.bind.closure_label	.string	qq{x\\t.bind.closure\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.impgens.parser\s0.3
_test.parse_impgens_0.3.no.bind.closure_input	.string	x\t.bind.closure\t_x_c\n

_test.parse_impgens_0.4.no.bind	.closure	_test.parse_impgens_0.4.no.bind_c
_test.parse_impgens_0.4.no.bind_label	.string	qq{x\\t.bind\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.impgens.parser\s0.4
_test.parse_impgens_0.4.no.bind_input	.string	x\t.bind\t_x_c\n

_test.parse_impgens_0.4.bind.closure	.closure	_test.parse_impgens_0.4.bind.closure_c
_test.parse_impgens_0.4.bind.closure_label	.string	qq{x\\t.bind.closure\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.impgens.parser\s0.4
_test.parse_impgens_0.4.bind.closure_input	.string	x\t.bind.closure\t_x_c\n

_test.parse_impgens_0.5.bind.closure.two.words	.closure	_test.parse_impgens_0.5.bind.closure.two.words_c
_test.parse_impgens_0.5.bind.closure.two.words_label	.string	qq{x\\t.bind\\t.closure\\t_x_c\\n}\s=~\sgsdl.ags.codeitem.impgens.parser\s0.5
_test.parse_impgens_0.5.bind.closure.two.words_input	.string	x\t.bind\t.closure\t_x_c\n

-- §subsection String Code Expressions

_test.parse_exprs	.closure	_test.parse_exprs_c
_tests.parse_exprs	.list	test.property.t	_test.parse_expr.force	_test.parse_expr.strict	_test.parse_expr.coerce	_test.parse_expr.app	_test.parse_expr.ubanalyze	_test.parse_expr.enter	_test.parse_expr.analyze	_test.parse_expr.analyze.fkarg	_test.parse_expr.gsanalyze.apply	_test.parse_expr.ubprim	_test.parse_expr.lprim

_test.parse_expr.force	.closure	_test.parse_expr.force_c
_test.parse_expr.force_label	.string	qq{\\t.force\\t_foo_k\\n\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.force_input	.string	\t.force\t_foo_k\n\t.enter\tfoo\n
_test.parse_expr.force_k_k_wrong.constr.s	.string	Parse\sresult\sis\snot\sa\s.force\sconstructor
_test.parse_expr.force_k_co.expected.s	.string	_foo_k

_test.parse_expr.strict	.closure	_test.parse_expr.strict_c
_test.parse_expr.strict_label	.string	qq{\\t.strict\\t_foo_k\\n\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.strict_input	.string	\t.strict\t_foo_k\n\t.enter\tfoo\n

_test.parse_expr.coerce	.closure	_test.parse_expr.coerce_c
_test.parse_expr.coerce_label	.string	qq{\\t.coerce\\tbar.t.out\\n\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.coerce_input	.string	\t.coerce\tbar.t.out\n\t.enter\tfoo\n
_test.parse_expr.coerce_k_k_wrong.constr.s	.string	Parse\sresult\sis\snot\sa\s.coerce\sconstructor
_test.parse_expr.coerce_k_co.expected.s	.string	bar.t.out

_test.parse_expr.app	.closure	_test.parse_expr.app_c
_test.parse_expr.app_label	.string	qq{\\t.app\\tbar\\n\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.app_input	.string	\t.app\tbar\n\t.enter\tfoo\n
_test.parse_expr.app_k_k_wrong.constr.s	.string	Parse\sresult\sis\snot\san\s.app\sconstructor
_test.parse_expr.app_k_as.expected	.list	string.t	_test.parse_expr.app_k_as.expected_0
_test.parse_expr.app_k_as.expected_0	.string	bar

_test.parse_expr.ubanalyze	.closure	_test.parse_expr.ubanalyze_c
_test.parse_expr.ubanalyze_label	.string	qq{\\t.ubanalyze\\t0\\t_foo_k0\\n\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.ubanalyze_input	.string	\t.ubanalyze\t0\t_foo_k0\n\t.enter\tfoo\n

_test.parse_expr.enter	.closure	_test.parse_expr.enter_c
_test.parse_expr.enter_label	.string	qq{\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.enter_input	.string	\t.enter\tfoo\n
_test.parse_expr.enter_k_foo.s	.string	foo

_test.parse_expr.analyze	.closure	_test.parse_expr.analyze_c
_test.parse_expr.analyze_label	.string	qq{\\t.analyze\\tfoo\\tbar\\n\\t.case\\tbar\\n\\t.enter\\tbaz\\n}\s=~\sexpr.parser
_test.parse_expr.analyze_input	.string	\t.analyze\tfoo\tbar\n\t.case\tbar\n\t.enter\tbaz\n

_test.parse_expr.analyze.fkarg	.closure	_test.parse_expr.analyze.fkarg_c
_test.parse_expr.analyze.fkarg_label	.string	qq{\\t.analyze\\tfoo\\tbar\\n\\t.case\\tbar\\nx\\t.fkarg\\t0\\tx.t\\tα\\n\\t.enter\\tbaz\\n}\s=~\sexpr.parser
_test.parse_expr.analyze.fkarg_input	.string	\t.analyze\tfoo\tbar\n\t.case\tbar\nx\t.fkarg\t0\tx.t\tα\n\t.enter\tbaz\n

_test.parse_expr.gsanalyze.apply	.closure	_test.parse_expr.gsanalyze.apply_c
_test.parse_expr.gsanalyze.apply_label	.string	qq{\\t.analyze\\tfoo\\tbar\\n\\t.case\\tbar\\nbaz\\t.apply\\tf\\tx.t\\t|\\tx\\n\\t.enter\\tbaz\\n}\s=~\sexpr.parser
_test.parse_expr.gsanalyze.apply_input	.string	\t.analyze\tfoo\tbar\n\t.case\tbar\nbaz\t.apply\tf\tx.t\t|\tx\n\t.enter\tbaz\n

_test.parse_expr.ubprim	.closure	_test.parse_expr.ubprim_c
_test.parse_expr.ubprim_label	.string	qq{\\t.ubprim\\trune.prim\\teq\\t_rune.prim.eq.t\\t|\\tx0\\ty0\\n}\s=~\sexpr.parser
_test.parse_expr.ubprim_input	.string	\t.ubprim\trune.prim\teq\t_rune.prim.eq.t\t|\tx0\ty0\n

_test.parse_expr.lprim	.closure	_test.parse_expr.lprim_c
_test.parse_expr.lprim_label	.string	qq{\\t.lprim\\trune.prim\\teq\\t_rune.prim.eq_ty\\tα\\t|\\tx\\n}\s=~\sexpr.parser
_test.parse_expr.lprim_input	.string	\t.lprim\trune.prim\teq\t_rune.prim.eq_ty\tα\t|\tx\n

-- §section §gs{≡}

_test.eq	.closure	_test.eq_c
_tests.eq	.list	test.property.t	_test.eq_codeitem.expr.diff.tygvars	_test.eq_codeitem.expr.diff.subcodes	_test.eq_codeitem.expr.diff.cogvars	_test.eq_codeitem.expr.diff.gvars	_test.eq_codeitem.expr.diff.args	_test.eq_arg.diff.name	_test.eq_arg.diff.lifted	_test.eq_arg.diff.ty	_test.eq_arg.diff.tyargs

_test.eq_codeitem.expr.diff.tygvars	.closure	_test.eq_codeitem.expr.diff.tygvars_c
_test.eq_codeitem.expr.diff.tygvars_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\stygvars
_test.eq_codeitem.expr.diff.tygvars_false.s	.string	ags.codeitem.expr\snm\s〈\s'tygvars\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'tygvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.tygvars_true.s	.string	ags.codeitem.expr\snm\s〈\s'tygvars\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'tygvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.tygvars_bar.s	.string	bar
_test.eq_codeitem.expr.diff.tygvars_foo.tygv	.closure	_test.eq_codeitem.expr.diff.tygvars_foo.tygv_c

_test.eq_codeitem.expr.diff.subcodes	.closure	_test.eq_codeitem.expr.diff.subcodes_c
_test.eq_codeitem.expr.diff.subcodes_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\ssubcodes
_test.eq_codeitem.expr.diff.subcodes_false.s	.string	ags.codeitem.expr\snm\s〈\s'subcodes\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'subcodes\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.subcodes_true.s	.string	ags.codeitem.expr\snm\s〈\s'subcodes\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'subcodes\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.subcodes_bar.s	.string	bar
_test.eq_codeitem.expr.diff.subcodes_foo.s	.string	foo

_test.eq_codeitem.expr.diff.cogvars	.closure	_test.eq_codeitem.expr.diff.cogvars_c
_test.eq_codeitem.expr.diff.cogvars_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\scogvars
_test.eq_codeitem.expr.diff.cogvars_false.s	.string	ags.codeitem.expr\snm\s〈\s'cogvars\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'cogvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.cogvars_true.s	.string	ags.codeitem.expr\snm\s〈\s'cogvars\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'cogvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.cogvars_bar.s	.string	bar
_test.eq_codeitem.expr.diff.cogvars_foo.s	.string	foo

_test.eq_codeitem.expr.diff.gvars	.closure	_test.eq_codeitem.expr.diff.gvars_c
_test.eq_codeitem.expr.diff.gvars_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\sgvars
_test.eq_codeitem.expr.diff.gvars_false.s	.string	ags.codeitem.expr\snm\s〈\s'gvars\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'gvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.gvars_true.s	.string	ags.codeitem.expr\snm\s〈\s'gvars\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'gvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.gvars_bar.s	.string	bar
_test.eq_codeitem.expr.diff.gvars_foo.s	.string	foo

_test.eq_codeitem.expr.diff.args	.closure	_test.eq_codeitem.expr.diff.args_c
_test.eq_codeitem.expr.diff.args_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\sargs
_test.eq_codeitem.expr.diff.args_false.s	.string	ags.codeitem.expr\snm\s〈\s'args\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'args\s∝\s[\sarg,\s];\s〉\se
_test.eq_codeitem.expr.diff.args_true.s	.string	ags.codeitem.expr\snm\s〈\s'args\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'args\s∝\s[\sarg,\s];\s〉\se
_test.eq_codeitem.expr.diff.args_bar.s	.string	bar

_test.eq_arg.diff.name	.closure	_test.eq_arg.diff.name_c
_test.eq_arg.diff.name_label	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{baz};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.name_false	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≠\s〈\s'name\s∝\sqq{baz};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.name_true	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{baz};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉

_test.eq_arg.diff.lifted	.closure	_test.eq_arg.diff.lifted_c
_test.eq_arg.diff.lifted_label	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\sfalse;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.lifted_false	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≠\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\sfalse;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.lifted_true	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\sfalse;\s'ty\s∝\sqq{bar.t};\s〉

_test.eq_arg.diff.ty	.closure	_test.eq_arg.diff.ty_c
_test.eq_arg.diff.ty_label	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{baz.t};\s〉
_test.eq_arg.diff.ty_false	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≠\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{baz.t};\s〉
_test.eq_arg.diff.ty_true	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{baz.t};\s〉

_test.eq_arg.diff.tyargs	.closure	_test.eq_arg.diff.tyargs_c
_test.eq_arg.diff.tyargs_label	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[];\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[\sqq{quux.t},\s];\s〉
_test.eq_arg.diff.tyargs_false	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[];\s〉\s≠\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[\sqq{quux.t},\s];\s〉
_test.eq_arg.diff.tyargs_true	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[];\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[\sqq{quux.t},\s];\s〉
_test.eq_arg.diff.tyargs_quux.t.s	.string	quux.t

-- §section Fixtures

_fixtures_foo.c.v	.closure	_fixtures_foo.c.v_c

_fixtures_foo.v	.closure	_fixtures_foo.v_c
_fixtures_foo.v_foo.s	.string	foo

_fixtures_c.v_c.s	.string	c

_fixtures_bar.v	.closure	_fixtures_bar.v_c

_fixtures_bar.t.v	.closure	_fixtures_bar.t.v_c

_fixtures_bar.c	.closure	_fixtures_bar.c_c
_fixtures_bar.c_bar.s	.string	bar

_fixtures_baz.t.v	.closure	_fixtures_baz.t.v_c

_fixtures_baz.v	.closure	_fixtures_baz.v_c

_fixtures_baz.c	.closure	_fixtures_baz.c_c
_fixtures_baz.c_baz.s	.string	baz

_fixtures_quux.t.v	.closure	_fixtures_quux.t.v_c
_fixtures_quux.t.v_quux.s	.string	quux

_fixtures_x.v	.closure	_fixtures_x.v_c

_fixtures_x.t.v	.closure	_fixtures_x.t.v_c

_fixtures_x.c	.closure	_fixtures_x.c_c
_fixtures_x.c_x.s	.string	x

_fixtures_t.c	.closure	_fixtures_t.c_c
_fixtures_t.c_t.s	.string	t

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

-- §section Parsers

_test.parse_c	.expr
test.all	.gvar
_tests.parse	.gvar
	.app	_tests.parse
	.enter	test.all

-- §subsection Code Segments

_test.parse_segments_c	.expr
test.all	.gvar
_tests.parse_segments	.gvar
	.app	_tests.parse_segments
	.enter	test.all

-- §subsubsection §gs{qq{\\t.code\\n}=~ segment.parser}

_test.parse_segment.empty_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_segment.empty_k_c	.subcode
test.property.label	.gvar
_test.parse_segment.empty_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.segment.parser	.gvar
_test.parse_segment.empty_input	.gvar
codesegment_ty	.tylet	list.t	gsdl.ags.codeitem.t
k	.closure	_test.parse_segment.empty_k_c
fs	.undefined	gsdl.ags.syntax.features.t
seg.p	.apply	gsdl.ags.codeitem.segment.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	codesegment_ty	|	parser.rune.advance	rune.print	seg.p	_test.parse_segment.empty_input	k
	.app	_test.parse_segment.empty_label	test
	.enter	test.property.label

_test.parse_segment.empty_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.codeitem.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.fmtgs	.gvar
list.nil	.gvar
codesegment_ty	.tylet	list.t	gsdl.ags.codeitem.t
cos	.larg	list.t	gsdl.ags.codeitem.t
cs.≡	.apply	list.≡	gsdl.ags.codeitem.t	|	gsdl.ags.codeitem.≡
cs.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.t	|	gsdl.ags.codeitem.fmtgs
nil	.apply	list.nil	gsdl.ags.codeitem.t
	.app	cs.≡	cs.fmtgs	cos	nil
	.enter	test.assert.eq	codesegment_ty

-- §subsection §ags{.expr} Code Items

_test.parse_expr.items_c	.expr
test.all	.gvar
_tests.parse_expr.items	.gvar
	.app	_tests.parse_expr.items
	.enter	test.all

-- §subsubsection §gs{qq{_foo_c\\t.expr\\n\\t.enter\\tbar\\n} =~ parser}

_test.parse_expr_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr_k_c	.subcode
test.property.label	.gvar
_test.parse_expr_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr_input	.gvar
k	.closure	_test.parse_expr_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr_input	k
	.app	_test.parse_expr_label	test
	.enter	test.property.label

_test.parse_expr_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
string.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.sourcepos.t	.tygvar	-- Temp
test.assert.eq	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.fmtgs	.gvar
gsdl.ags.codeitem.expr	.gvar
_fixtures_foo.c.v	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.parse_expr_k_bar.s	.gvar
list.nil	.gvar
actual	.larg	gsdl.ags.codeitem.t
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
allocs.nil	.apply	list.nil	gsdl.ags.codeitem.alloc.t
nil	.apply	list.nil	string.t
gvars.nil	.apply	list.nil	gsdl.ags.codeitem.gvar.t
tygvars.nil	.apply	list.nil	gsdl.ags.typeitem.decls.tygvar.t
ds	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars.nil	subcodes	nil	tygvars	tygvars.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
tyas	.apply	list.nil	string.t
expected.expr	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.parse_expr_k_bar.s	tyas
expected	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v	ds	expected.expr
	.app	gsdl.ags.codeitem.≡	gsdl.ags.codeitem.fmtgs	actual	expected
	.enter	test.assert.eq	gsdl.ags.codeitem.t

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nbar.t\\t.tygvar\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.tygvar_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.tygvar_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.tygvar_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.tygvar_input	.gvar
k	.closure	_test.parse_expr.tygvar_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.tygvar_input	k
	.app	_test.parse_expr.tygvar_label	test
	.enter	test.property.label

_test.parse_expr.tygvar_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.tygvar_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.tygvar_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.tygvar_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
test.property.false	.gvar
_test.parse_expr.tygvar_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.typeitem.decls.tygvar.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.typeitem.decls.tygvar.fmtgs	.gvar
_test.parse_expr.tygvar_k_tygvs.expected	.gvar
list.tygvar.ty	.tylet	list.t	gsdl.ags.typeitem.decls.tygvar.t
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.tygvar_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	gsdl.var.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
tygvs			.lfield	tygvars	ds
tygvs.≡			.apply	list.≡	gsdl.ags.typeitem.decls.tygvar.t	|	gsdl.ags.typeitem.decls.tygvar.≡
tygvs.fmtgs			.apply	list.fmtgs.byDefault	gsdl.ags.typeitem.decls.tygvar.t	|	gsdl.ags.typeitem.decls.tygvar.fmtgs
			.app	tygvs.≡	tygvs.fmtgs	tygvs	_test.parse_expr.tygvar_k_tygvs.expected
			.enter	test.assert.eq	list.tygvar.ty

_test.parse_expr.tygvar_k_bar.t.tygv_c	.expr
gsdl.ags.typeitem.decls.tygvar.tygvar	.gvar
_fixtures_bar.t.v	.gvar
	.app	_fixtures_bar.t.v
	.enter	gsdl.ags.typeitem.decls.tygvar.tygvar

-- §subsubsection §gs{qq{_foo_c\\t.expr\\n_bar_c\\t.subcode\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.subcode_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.subcode_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.subcode_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.subcode_input	.gvar
k	.closure	_test.parse_expr.subcode_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.subcode_input	k
	.app	_test.parse_expr.subcode_label	test
	.enter	test.property.label

_test.parse_expr.subcode_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.subcode_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.subcode_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.subcode_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
string.t	.tygvar
test.property.false	.gvar
_test.parse_expr.subcode_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.subcode_k_subcodes.expected	.gvar
list.string.ty	.tylet	list.t	string.t
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.subcode_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	gsdl.var.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
subcodes			.lfield	subcodes	ds
subcodes.≡			.apply	list.≡	string.t	|	string.≡
subcodes.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	subcodes.≡	subcodes.fmtgs	subcodes	_test.parse_expr.subcode_k_subcodes.expected
			.enter	test.assert.eq	list.string.ty

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nbar.t.out\\t.cogvar\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.cogvar_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.cogvar_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.cogvar_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.cogvar_input	.gvar
k	.closure	_test.parse_expr.cogvar_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.cogvar_input	k
	.app	_test.parse_expr.cogvar_label	test
	.enter	test.property.label

_test.parse_expr.cogvar_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.cogvar_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.cogvar_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.cogvar_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
string.t	.tygvar
test.property.false	.gvar
_test.parse_expr.cogvar_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.cogvar_k_cogvars.expected	.gvar
list.string.ty	.tylet	list.t	string.t
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.cogvar_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	gsdl.var.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
cogvars			.lfield	cogvars	ds
cogvars.≡			.apply	list.≡	string.t	|	string.≡
cogvars.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	cogvars.≡	cogvars.fmtgs	cogvars	_test.parse_expr.cogvar_k_cogvars.expected
			.enter	test.assert.eq	list.string.ty

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nbar\\t.gvar\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.gvar_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.gvar_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.gvar_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.gvar_input	.gvar
k	.closure	_test.parse_expr.gvar_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.gvar_input	k
	.app	_test.parse_expr.gvar_label	test
	.enter	test.property.label

_test.parse_expr.gvar_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.gvar_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.gvar_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.gvar_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
list.t	.tygvar
string.t	.tygvar
test.property.false	.gvar
_test.parse_expr.gvar_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.codeitem.gvar.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.gvar.fmtgs	.gvar
list.singleton	.gvar
gsdl.ags.codeitem.gvar.gvar	.gvar
_test.parse_expr.gvar_k_gvars.expected.0_bar.s	.gvar
list.gvar.ty	.tylet	list.t	gsdl.ags.codeitem.gvar.t
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.gvar_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	gsdl.var.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
gvars			.lfield	gvars	ds
gvars.≡			.apply	list.≡	gsdl.ags.codeitem.gvar.t	|	gsdl.ags.codeitem.gvar.≡
gvars.fmtgs			.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.gvar.t	|	gsdl.ags.codeitem.gvar.fmtgs
expected.0			.apply	gsdl.ags.codeitem.gvar.gvar	|	pos	_test.parse_expr.gvar_k_gvars.expected.0_bar.s
expected			.apply	list.singleton	gsdl.ags.codeitem.gvar.t	|	expected.0
			.app	gvars.≡	gvars.fmtgs	gvars	expected
			.enter	test.assert.eq	list.gvar.ty

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nnl\\t.rune\\t\\\\n\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.rune_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_expr.rune_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.rune_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.rune_input	.gvar
k	.closure	_test.parse_expr.rune_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.rune_input	k
	.app	_test.parse_expr.rune_label	test
	.enter	test.property.label

_test.parse_expr.rune_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nbar\\t.larg\\tbar.t\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.larg_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.larg_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.larg_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.larg_input	.gvar
k	.closure	_test.parse_expr.larg_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.larg_input	k
	.app	_test.parse_expr.larg_label	test
	.enter	test.property.label

_test.parse_expr.larg_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.larg_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.larg_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.larg_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
test.property.false	.gvar
_test.parse_expr.larg_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.arg.fmtgs	.gvar
list.:	.gvar
gsdl.ags.codeitem.arg.larg	.gvar
_fixtures_bar.v	.gvar
_fixtures_bar.t.v	.gvar
_test.parse_expr.larg_k_tyargs	.gvar
list.nil	.gvar
list.arg.ty	.tylet	list.t	gsdl.ags.codeitem.arg.t
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.larg_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	gsdl.var.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
args			.lfield	args	ds
args.≡			.apply	list.≡	gsdl.ags.codeitem.arg.t	|	gsdl.ags.codeitem.arg.≡
args.fmtgs			.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.arg.t	|	gsdl.ags.codeitem.arg.fmtgs
arg0			.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_bar.v	_fixtures_bar.t.v	_test.parse_expr.larg_k_tyargs
nil			.apply	list.nil	gsdl.ags.codeitem.arg.t
expected			.apply	list.:	gsdl.ags.codeitem.arg.t	|	arg0	nil
			.app	args.≡	args.fmtgs	args	expected
			.enter	test.assert.eq	list.arg.ty

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nbar\\t.alloc\\t_bar_c\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.alloc_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.alloc_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.alloc_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.alloc_input	.gvar
k	.closure	_test.parse_expr.alloc_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.alloc_input	k
	.app	_test.parse_expr.alloc_label	test
	.enter	test.property.label

_test.parse_expr.alloc_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nu\\t.impprim\\tibio.prim\\tibio\\tunit\\t_ibio.prim.unit_ty\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.impprim_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.impprim_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.impprim_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.impprim_input	.gvar
k	.closure	_test.parse_expr.impprim_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.impprim_input	k
	.app	_test.parse_expr.impprim_label	test
	.enter	test.property.label

_test.parse_expr.impprim_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nu\\t.impprim\\tibio.prim\\tibio\\tunit\\t_ibio.prim.unit_ty\\tα\\t|\\tx\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.impprim.args_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.impprim.args_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.impprim.args_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.impprim.args_input	.gvar
k	.closure	_test.parse_expr.impprim.args_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.impprim.args_input	k
	.app	_test.parse_expr.impprim.args_label	test
	.enter	test.property.label

_test.parse_expr.impprim.args_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nbar\\t.undefined\\tbar.t\\tα\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.undefined_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.undefined_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.undefined_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.undefined_input	.gvar
k	.closure	_test.parse_expr.undefined_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.undefined_input	k
	.app	_test.parse_expr.undefined_label	test
	.enter	test.property.label

_test.parse_expr.undefined_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nx.bar\\t.field\\tbar\\tx\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.field_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.field_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.field_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.field_input	.gvar
k	.closure	_test.parse_expr.field_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.field_input	k
	.app	_test.parse_expr.field_label	test
	.enter	test.property.label

_test.parse_expr.field_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nx\\t.record\\tf\\tx.f\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.record_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.record_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.record_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.record_input	.gvar
k	.closure	_test.parse_expr.record_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.record_input	k
	.app	_test.parse_expr.record_label	test
	.enter	test.property.label

_test.parse_expr.record_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nx\\t.prim\\tf\\tty\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.prim_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.prim_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.prim_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.prim_input	.gvar
k	.closure	_test.parse_expr.prim_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.prim_input	k
	.app	_test.parse_expr.prim_label	test
	.enter	test.property.label

_test.parse_expr.prim_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nx\\t.prim\\tf\\tty\tα\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.prim.tyargs_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.prim.tyargs_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.prim.tyargs_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.prim.tyargs_input	.gvar
k	.closure	_test.parse_expr.prim.tyargs_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.prim.tyargs_input	k
	.app	_test.parse_expr.prim.tyargs_label	test
	.enter	test.property.label

_test.parse_expr.prim.tyargs_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.expr\\nx\\t.prim\\tf\\tty\tα\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.prim.args_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.prim.args_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.prim.args_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_expr.prim.args_input	.gvar
k	.closure	_test.parse_expr.prim.args_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_expr.prim.args_input	k
	.app	_test.parse_expr.prim.args_label	test
	.enter	test.property.label

_test.parse_expr.prim.args_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsection §ags{.forcecont} Code Items

_test.parse_forcecont.items_c	.expr
test.all	.gvar
_tests.parse_forcecont.items	.gvar
	.app	_tests.parse_forcecont.items
	.enter	test.all

-- §subsubsection §gs{qq{_foo_k\\t.forcecont\\nx0\\t.karg\\tx.u\\n\\t.enter\\ty\\n} =~ parser}

_test.parse_forcecont_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_forcecont_k_c	.subcode
test.property.label	.gvar
_test.parse_forcecont_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_forcecont_input	.gvar
k	.closure	_test.parse_forcecont_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_forcecont_input	k
	.app	_test.parse_forcecont_label	test
	.enter	test.property.label

_test.parse_forcecont_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.ags.codeitem.fv.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
string.t	.tygvar
test.assert.eq	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.fmtgs	.gvar
gsdl.ags.codeitem.forcecont	.gvar
_test.parse_forcecont_k_foo.k.s	.gvar
gsdl.ags.codeitem.karg.karg	.gvar
_test.parse_forcecont_k_x.u.s	.gvar
_test.parse_forcecont_k_x0.s	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.parse_forcecont_k_y.s	.gvar
ci	.larg	gsdl.ags.codeitem.t
pos	.undefined	gsdl.sourcepos.t
nil.fvs	.apply	list.nil	gsdl.ags.codeitem.fv.t
nil.gvars	.apply	list.nil	gsdl.ags.codeitem.gvar.t
nil	.apply	list.nil	string.t
karg	.apply	gsdl.ags.codeitem.karg.karg	|	_test.parse_forcecont_k_x0.s	_test.parse_forcecont_k_x.u.s	nil
decls	.lrecord	fvs	nil.fvs	gvars	nil.gvars	karg	karg	tygvars	nil
e	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.parse_forcecont_k_y.s	nil
expected	.apply	gsdl.ags.codeitem.forcecont	|	pos	_test.parse_forcecont_k_foo.k.s	decls	e
	.app	gsdl.ags.codeitem.≡	gsdl.ags.codeitem.fmtgs	ci	expected
	.enter	test.assert.eq	gsdl.ags.codeitem.t

-- §subsubsection §gs{qq{_foo_k\\t.forcecont\\nx0\\t.karg\\tx.u\\tα\\n\\t.enter\\ty\\n} =~ parser}

_test.parse_forcecont.karg.tyargs_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_forcecont.karg.tyargs_k_c	.subcode
test.property.label	.gvar
_test.parse_forcecont.karg.tyargs_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_forcecont.karg.tyargs_input	.gvar
k	.closure	_test.parse_forcecont.karg.tyargs_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_forcecont.karg.tyargs_input	k
	.app	_test.parse_forcecont.karg.tyargs_label	test
	.enter	test.property.label

_test.parse_forcecont.karg.tyargs_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_k\\t.forcecont\\nx0\\t.karg\\tx.u\\n\\t.undef\\tx.t\\n} =~ parser}

_test.parse_forcecont.undef_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_forcecont.undef_k_c	.subcode
test.property.label	.gvar
_test.parse_forcecont.undef_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_forcecont.undef_input	.gvar
k	.closure	_test.parse_forcecont.undef_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_forcecont.undef_input	k
	.app	_test.parse_forcecont.undef_label	test
	.enter	test.property.label

_test.parse_forcecont.undef_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §ags{.forcecont}s with §ags{.tyfv}s

_test.parse_forcecont.tyfv_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_forcecont.tyfv_k_c	.subcode
test.property.label	.gvar
_test.parse_forcecont.tyfv_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_forcecont.tyfv_input	.gvar
k	.closure	_test.parse_forcecont.tyfv_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_forcecont.tyfv_input	k
	.app	_test.parse_forcecont.tyfv_label	test
	.enter	test.property.label

_test.parse_forcecont.tyfv_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_k\\t.forcecont\\nty\\t.tylet\\tt\\tα\\nx0\\t.karg\\tx.u\\n\\t.undef\\tα\\n} =~ parser}

_test.parse_forcecont.tylet_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_forcecont.tylet_k_c	.subcode
test.property.label	.gvar
_test.parse_forcecont.tylet_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_forcecont.tylet_input	.gvar
k	.closure	_test.parse_forcecont.tylet_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_forcecont.tylet_input	k
	.app	_test.parse_forcecont.tylet_label	test
	.enter	test.property.label

_test.parse_forcecont.tylet_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §ags{.forcecont}s with §ags{.fv}s

_test.parse_forcecont.fv_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_forcecont.fv_k_c	.subcode
test.property.label	.gvar
_test.parse_forcecont.fv_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_forcecont.fv_input	.gvar
k	.closure	_test.parse_forcecont.fv_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_forcecont.fv_input	k
	.app	_test.parse_forcecont.fv_label	test
	.enter	test.property.label

_test.parse_forcecont.fv_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsection §ags{.strictcont} Code Items

_test.parse_strictcont.items_c	.expr
test.all	.gvar
_tests.parse_strictcont.items	.gvar
	.app	_tests.parse_strictcont.items
	.enter	test.all

-- §subsubsection §gs{qq{_foo_k\\t.strictcont\\nx0\\t.karg\\tx.t\\n\\t.enter\\ty\\n} =~ parser}

_test.parse_strictcont_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_strictcont_k_c	.subcode
test.property.label	.gvar
_test.parse_strictcont_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_strictcont_input	.gvar
k	.closure	_test.parse_strictcont_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_strictcont_input	k
	.app	_test.parse_strictcont_label	test
	.enter	test.property.label

_test.parse_strictcont_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsection Imperative Block Statements

_test.parse_impprog.items_c	.expr
test.all	.gvar
_tests.parse_impprog.items	.gvar
	.app	_tests.parse_impprog.items
	.enter	test.all

-- §subsubsection §gs{qq{_foo_c\\t.impprog\\tfoo\\tm\\n\\t.body\\t_foo_body_c\\n} =~ parser}

_test.parse_impprog_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impprog_k_c	.subcode
test.property.label	.gvar
_test.parse_impprog_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_impprog_input	.gvar
k	.closure	_test.parse_impprog_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_impprog_input	k
	.app	_test.parse_impprog_label	test
	.enter	test.property.label

_test.parse_impprog_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.impprog\\tfoo\\tm\\nx\\t.bind\\t_foo_x_c\\n\\t.body\\t_foo_body_c\\n} =~ parser}

_test.parse_impprog.bind_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impprog.bind_k_c	.subcode
test.property.label	.gvar
_test.parse_impprog.bind_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.false	.gvar
_test.parse_impprog.bind_input	.gvar
k	.closure	_test.parse_impprog.bind_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_impprog.bind_input	k
	.app	_test.parse_impprog.bind_label	test
	.enter	test.property.label

_test.parse_impprog.bind_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.impprog\\tfoo\\tm\\n\\t.body.closure\\t_foo_body_c\\n} =~ parser 0.4}

_test.parse_impprog.0.4_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impprog.0.4_k_c	.subcode
test.property.label	.gvar
_test.parse_impprog.0.4_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.true	.gvar
bool.false	.gvar
_test.parse_impprog.0.4_input	.gvar
k	.closure	_test.parse_impprog.0.4_k_c
fs	.lrecord	bind.closure.one.word	bool.true	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_impprog.0.4_input	k
	.app	_test.parse_impprog.0.4_label	test
	.enter	test.property.label

_test.parse_impprog.0.4_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsubsection §gs{qq{_foo_c\\t.impprog\\tfoo\\tm\\n\\t.body\\t.closure\\t_foo_body_c\\n} =~ parser 0.5}

_test.parse_impprog.0.5_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impprog.0.5_k_c	.subcode
test.property.label	.gvar
_test.parse_impprog.0.5_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
bool.true	.gvar
bool.false	.gvar
_test.parse_impprog.0.5_input	.gvar
k	.closure	_test.parse_impprog.0.5_k_c
fs	.lrecord	bind.closure.one.word	bool.true	bind.closure.two.words	 bool.true	closure	bool.true	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_impprog.0.5_input	k
	.app	_test.parse_impprog.0.5_label	test
	.enter	test.property.label

_test.parse_impprog.0.5_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsection §ags{.ubcasecont} Code Items

_test.parse_ubcasecont.items_c	.expr
test.all	.gvar
_tests.parse_ubcasecont.items	.gvar
	.app	_tests.parse_ubcasecont.items
	.enter	test.all

-- §subsubsection §gs{qq{_rune.≡.k1.0\\t.ubcasecont\\n\\t.enter\\tbool.false\\n} =~ parser}

_test.parse_ubcasecont_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_ubcasecont_k_c	.subcode
test.property.label	.gvar
_test.parse_ubcasecont_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_ubcasecont_input	.gvar
k	.closure	_test.parse_ubcasecont_k_c
fs	.undefined	gsdl.ags.syntax.features.t
ci.p	.apply	gsdl.ags.codeitem.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	ci.p	_test.parse_ubcasecont_input	k
	.app	_test.parse_ubcasecont_label	test
	.enter	test.property.label

_test.parse_ubcasecont_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

-- §subsection Global Variable Declarations

_test.parse_gvars_c	.expr
test.property.label	.gvar
_test.parse_gvars_label	.gvar
test.all	.gvar
_tests.parse_gvars	.gvar
t	.apply	test.all	|	_tests.parse_gvars
	.app	_test.parse_gvars_label	t
	.enter	test.property.label

-- §subsubsection §gs{qq{x\\t.rune\\t#\\n} =~ gsdl.ags.codeitem.gvars.parser}

_test.parse_gvar_rune.no.hash_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_gvar_rune.no.hash_k_c	.subcode
test.property.label	.gvar
_test.parse_gvar_rune.no.hash_label	.gvar
parser.test.assert.fails	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.gvar.fmtgs	.gvar
gsdl.ags.codeitem.gvars.parser	.gvar
bool.false	.gvar
_test.parse_gvar_rune.no.hash_input	.gvar
list.gvar.ty	.tylet	list.t	gsdl.ags.codeitem.gvar.t
list.gvar.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.gvar.t	|	gsdl.ags.codeitem.gvar.fmtgs
k	.closure	_test.parse_gvar_rune.no.hash_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
gvs.p	.apply	gsdl.ags.codeitem.gvars.parser	|	fs
test	.apply	parser.test.assert.fails	rune.t	list.gvar.ty	|	parser.rune.advance	rune.print	list.gvar.fmtgs	gvs.p	_test.parse_gvar_rune.no.hash_input	k
	.app	_test.parse_gvar_rune.no.hash_label	test
	.enter	test.property.label

_test.parse_gvar_rune.no.hash_k_c	.expr
parser.err.t	.tygvar
test.true	.gvar
err	.larg	parser.err.t
	.enter	test.true

-- §subsubsection §gs{qq{x\\t.rune\\t\\h\\n} =~ gsdl.ags.codeitem.gvars.parser}

_test.parse_gvar_rune.bs.h_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_gvar_rune.bs.h_k_c	.subcode
test.property.label	.gvar
_test.parse_gvar_rune.bs.h_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.gvars.parser	.gvar
bool.false	.gvar
_test.parse_gvar_rune.bs.h_input	.gvar
list.gvar.ty	.tylet	list.t	gsdl.ags.codeitem.gvar.t
k	.closure	_test.parse_gvar_rune.bs.h_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
gvs.p	.apply	gsdl.ags.codeitem.gvars.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	list.gvar.ty	|	parser.rune.advance	rune.print	gvs.p	_test.parse_gvar_rune.bs.h_input	k
	.app	_test.parse_gvar_rune.bs.h_label	test
	.enter	test.property.label

_test.parse_gvar_rune.bs.h_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
test.true	.gvar
gvs	.larg	list.t	gsdl.ags.codeitem.gvar.t
	.enter	test.true

-- §subsubsection §gs{qq{x\\t.rune\\t#\\n} =~ gsdl.ags.codeitem.gvars.parser} (version 0.2)

_test.parse_gvar_0.2.rune.hash_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_gvar_0.2.rune.hash_k_c	.subcode
test.property.label	.gvar
_test.parse_gvar_0.2.rune.hash_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.gvars.parser	.gvar
bool.false	.gvar
bool.true	.gvar
_test.parse_gvar_0.2.rune.hash_input	.gvar
list.gvar.ty	.tylet	list.t	gsdl.ags.codeitem.gvar.t
k	.closure	_test.parse_gvar_0.2.rune.hash_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
gvs.p	.apply	gsdl.ags.codeitem.gvars.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	list.gvar.ty	|	parser.rune.advance	rune.print	gvs.p	_test.parse_gvar_0.2.rune.hash_input	k
	.app	_test.parse_gvar_0.2.rune.hash_label	test
	.enter	test.property.label

_test.parse_gvar_0.2.rune.hash_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
test.true	.gvar
gvs	.larg	list.t	gsdl.ags.codeitem.gvar.t
	.enter	test.true

-- §subsubsection §gs{qq{x\\t.rune\\t\\h\\n} =~ gsdl.ags.codeitem.gvars.parser} (version 0.2)

_test.parse_gvar_0.2.rune.no.bs.h_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_gvar_0.2.rune.no.bs.h_k_c	.subcode
test.property.label	.gvar
_test.parse_gvar_0.2.rune.no.bs.h_label	.gvar
parser.test.assert.fails	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.gvar.fmtgs	.gvar
gsdl.ags.codeitem.gvars.parser	.gvar
bool.false	.gvar
bool.true	.gvar
_test.parse_gvar_0.2.rune.no.bs.h_input	.gvar
list.gvar.ty	.tylet	list.t	gsdl.ags.codeitem.gvar.t
k	.closure	_test.parse_gvar_0.2.rune.no.bs.h_k_c
list.gvar.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.gvar.t	|	gsdl.ags.codeitem.gvar.fmtgs
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
gvs.p	.apply	gsdl.ags.codeitem.gvars.parser	|	fs
test	.apply	parser.test.assert.fails	rune.t	list.gvar.ty	|	parser.rune.advance	rune.print	list.gvar.fmtgs	gvs.p	_test.parse_gvar_0.2.rune.no.bs.h_input	k
	.app	_test.parse_gvar_0.2.rune.no.bs.h_label	test
	.enter	test.property.label

_test.parse_gvar_0.2.rune.no.bs.h_k_c	.expr
parser.err.t	.tygvar
test.true	.gvar
err	.larg	parser.err.t
	.enter	test.true
	
-- §subsection Expression Generators

_test.parse_allocs_c	.expr
test.property.label	.gvar
_test.parse_allocs_label	.gvar
test.all	.gvar
_tests.parse_allocs	.gvar
test	.apply	test.all	|	_tests.parse_allocs
	.app	_test.parse_allocs_label	test
	.enter	test.property.label

-- §subsubsection Use §stringcode{.alloc} up through 0.2

_test.parse_alloc_0.2.alloc_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_alloc_0.2.alloc_k_c	.subcode
test.property.label	.gvar
_test.parse_alloc_0.2.alloc_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.allocs.parser	.gvar
bool.false	.gvar
bool.true	.gvar
_test.parse_alloc_0.2.alloc_input	.gvar
list.alloc.ty	.tylet	list.t	gsdl.ags.codeitem.alloc.t
k	.closure	_test.parse_alloc_0.2.alloc_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
allocs.p	.apply	gsdl.ags.codeitem.allocs.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	list.alloc.ty	|	parser.rune.advance	rune.print	allocs.p	_test.parse_alloc_0.2.alloc_input	k
	.app	_test.parse_alloc_0.2.alloc_label	test
	.enter	test.property.label

_test.parse_alloc_0.2.alloc_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
test.true	.gvar
err	.larg	list.t	gsdl.ags.codeitem.alloc.t
	.enter	test.true

-- §subsubsection §stringcode{.closure} an error up through 0.2

_test.parse_alloc_0.2.no.closure_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_alloc_0.2.no.closure_k_c	.subcode
test.property.label	.gvar
_test.parse_alloc_0.2.no.closure_label	.gvar
parser.test.assert.fails	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.alloc.fmtgs	.gvar
gsdl.ags.codeitem.allocs.parser	.gvar
bool.false	.gvar
bool.true	.gvar
_test.parse_alloc_0.2.no.closure_input	.gvar
list.alloc.ty	.tylet	list.t	gsdl.ags.codeitem.alloc.t
k	.closure	_test.parse_alloc_0.2.no.closure_k_c
list.alloc.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.alloc.t	|	gsdl.ags.codeitem.alloc.fmtgs
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
allocs.p	.apply	gsdl.ags.codeitem.allocs.parser	|	fs
test	.apply	parser.test.assert.fails	rune.t	list.alloc.ty	|	parser.rune.advance	rune.print	list.alloc.fmtgs	allocs.p	_test.parse_alloc_0.2.no.closure_input	k
	.app	_test.parse_alloc_0.2.no.closure_label	test
	.enter	test.property.label

_test.parse_alloc_0.2.no.closure_k_c	.expr
parser.err.t	.tygvar
test.true	.gvar
err	.larg	parser.err.t
	.enter	test.true

-- §subsubsection §stringcode{.alloc} an error starting in 0.3

_test.parse_alloc_0.3.no.alloc_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_alloc_0.3.no.alloc_k_c	.subcode
test.property.label	.gvar
_test.parse_alloc_0.3.no.alloc_label	.gvar
parser.test.assert.fails	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.alloc.fmtgs	.gvar
gsdl.ags.codeitem.allocs.parser	.gvar
bool.false	.gvar
bool.true	.gvar
_test.parse_alloc_0.3.no.alloc_input	.gvar
list.alloc.ty	.tylet	list.t	gsdl.ags.codeitem.alloc.t
k	.closure	_test.parse_alloc_0.3.no.alloc_k_c
list.alloc.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.alloc.t	|	gsdl.ags.codeitem.alloc.fmtgs
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.true	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
allocs.p	.apply	gsdl.ags.codeitem.allocs.parser	|	fs
test	.apply	parser.test.assert.fails	rune.t	list.alloc.ty	|	parser.rune.advance	rune.print	list.alloc.fmtgs	allocs.p	_test.parse_alloc_0.3.no.alloc_input	k
	.app	_test.parse_alloc_0.3.no.alloc_label	test
	.enter	test.property.label

_test.parse_alloc_0.3.no.alloc_k_c	.expr
parser.err.t	.tygvar
test.true	.gvar
err	.larg	parser.err.t
	.enter	test.true

-- §subsubsection Use §stringcode{.closure} after 0.3

_test.parse_alloc_0.3.closure_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_alloc_0.3.closure_k_c	.subcode
test.property.label	.gvar
_test.parse_alloc_0.3.closure_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.allocs.parser	.gvar
bool.false	.gvar
bool.true	.gvar
_test.parse_alloc_0.3.closure_input	.gvar
list.alloc.ty	.tylet	list.t	gsdl.ags.codeitem.alloc.t
k	.closure	_test.parse_alloc_0.3.closure_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	 bool.true	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
allocs.p	.apply	gsdl.ags.codeitem.allocs.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	list.alloc.ty	|	parser.rune.advance	rune.print	allocs.p	_test.parse_alloc_0.3.closure_input	k
	.app	_test.parse_alloc_0.3.closure_label	test
	.enter	test.property.label

_test.parse_alloc_0.3.closure_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
test.true	.gvar
err	.larg	list.t	gsdl.ags.codeitem.alloc.t
	.enter	test.true

-- §subsection Imperative Generators

_test.parse_impgens_c	.expr
test.property.label	.gvar
_test.parse_impgens_label	.gvar
test.all	.gvar
_tests.parse_impgens	.gvar
test	.apply	test.all	|	_tests.parse_impgens
	.app	_test.parse_impgens_label	test
	.enter	test.property.label

-- §subsubsection Use §stringcode{.bind} before 0.4

_test.parse_impgens_0.3.bind_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.impgen.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impgens_0.3.bind_k_c	.subcode
test.property.label	.gvar
_test.parse_impgens_0.3.bind_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.impgens.parser	.gvar
bool.false	.gvar
bool.true	.gvar
_test.parse_impgens_0.3.bind_input	.gvar
list.impgen.ty	.tylet	list.t	gsdl.ags.codeitem.impgen.t
k	.closure	_test.parse_impgens_0.3.bind_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	 bool.true	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
impgens.p	.apply	gsdl.ags.codeitem.impgens.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	list.impgen.ty	|	parser.rune.advance	rune.print	impgens.p	_test.parse_impgens_0.3.bind_input	k
	.app	_test.parse_impgens_0.3.bind_label	test
	.enter	test.property.label

_test.parse_impgens_0.3.bind_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.impgen.t	.tygvar
test.true	.gvar
err	.larg	list.t	gsdl.ags.codeitem.impgen.t
	.enter	test.true

-- §subsubsection No §stringcode{.bind.closure} before 0.4

_test.parse_impgens_0.3.no.bind.closure_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.impgen.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impgens_0.3.no.bind.closure_k_c	.subcode
test.property.label	.gvar
_test.parse_impgens_0.3.no.bind.closure_label	.gvar
parser.test.assert.fails	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.impgen.fmtgs	.gvar
gsdl.ags.codeitem.impgens.parser	.gvar
bool.false	.gvar
bool.true	.gvar
_test.parse_impgens_0.3.no.bind.closure_input	.gvar
list.impgen.ty	.tylet	list.t	gsdl.ags.codeitem.impgen.t
k	.closure	_test.parse_impgens_0.3.no.bind.closure_k_c
list.impgen.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.impgen.t	|	gsdl.ags.codeitem.impgen.fmtgs
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	 bool.true	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
impgens.p	.apply	gsdl.ags.codeitem.impgens.parser	|	fs
test	.apply	parser.test.assert.fails	rune.t	list.impgen.ty	|	parser.rune.advance	rune.print	list.impgen.fmtgs	impgens.p	_test.parse_impgens_0.3.no.bind.closure_input	k
	.app	_test.parse_impgens_0.3.no.bind.closure_label	test
	.enter	test.property.label

_test.parse_impgens_0.3.no.bind.closure_k_c	.expr
parser.err.t	.tygvar
test.true	.gvar
err	.larg	parser.err.t
	.enter	test.true

-- §subsubsection No §stringcode{.bind} starting with 0.4

_test.parse_impgens_0.4.no.bind_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.impgen.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impgens_0.4.no.bind_k_c	.subcode
test.property.label	.gvar
_test.parse_impgens_0.4.no.bind_label	.gvar
parser.test.assert.fails	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.impgen.fmtgs	.gvar
gsdl.ags.codeitem.impgens.parser	.gvar
bool.true	.gvar
bool.false	.gvar
_test.parse_impgens_0.4.no.bind_input	.gvar
list.impgen.ty	.tylet	list.t	gsdl.ags.codeitem.impgen.t
k	.closure	_test.parse_impgens_0.4.no.bind_k_c
list.impgen.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.impgen.t	|	gsdl.ags.codeitem.impgen.fmtgs
fs	.lrecord	bind.closure.one.word	bool.true	bind.closure.two.words	 bool.false	closure	 bool.true	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
impgens.p	.apply	gsdl.ags.codeitem.impgens.parser	|	fs
test	.apply	parser.test.assert.fails	rune.t	list.impgen.ty	|	parser.rune.advance	rune.print	list.impgen.fmtgs	impgens.p	_test.parse_impgens_0.4.no.bind_input	k
	.app	_test.parse_impgens_0.4.no.bind_label	test
	.enter	test.property.label

_test.parse_impgens_0.4.no.bind_k_c	.expr
parser.err.t	.tygvar
test.true	.gvar
err	.larg	parser.err.t
	.enter	test.true

-- §section Use §gs{.bind.closure} starting in 0.4

_test.parse_impgens_0.4.bind.closure_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.impgen.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impgens_0.4.bind.closure_k_c	.subcode
test.property.label	.gvar
_test.parse_impgens_0.4.bind.closure_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.impgens.parser	.gvar
bool.true	.gvar
bool.false	.gvar
_test.parse_impgens_0.4.bind.closure_input	.gvar
list.impgen.ty	.tylet	list.t	gsdl.ags.codeitem.impgen.t
k	.closure	_test.parse_impgens_0.4.bind.closure_k_c
fs	.lrecord	bind.closure.one.word	bool.true	bind.closure.two.words	 bool.false	closure	 bool.true	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
impgens.p	.apply	gsdl.ags.codeitem.impgens.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	list.impgen.ty	|	parser.rune.advance	rune.print	impgens.p	_test.parse_impgens_0.4.bind.closure_input	k
	.app	_test.parse_impgens_0.4.bind.closure_label	test
	.enter	test.property.label

_test.parse_impgens_0.4.bind.closure_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.impgen.t	.tygvar
test.true	.gvar
err	.larg	list.t	gsdl.ags.codeitem.impgen.t
	.enter	test.true

-- §section Use §gs{.bind	.closure} starting in 0.5

_test.parse_impgens_0.5.bind.closure.two.words_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.impgen.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar
_test.parse_impgens_0.5.bind.closure.two.words_k_c	.subcode
test.property.label	.gvar
_test.parse_impgens_0.5.bind.closure.two.words_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.impgens.parser	.gvar
bool.true	.gvar
_test.parse_impgens_0.5.bind.closure.two.words_input	.gvar
list.impgen.ty	.tylet	list.t	gsdl.ags.codeitem.impgen.t
k	.closure	_test.parse_impgens_0.5.bind.closure.two.words_k_c
fs	.lrecord	bind.closure.one.word	bool.true	bind.closure.two.words	bool.true	closure	 bool.true	hash.normal	bool.true	|	gsdl.ags.syntax.features.t
impgens.p	.apply	gsdl.ags.codeitem.impgens.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	list.impgen.ty	|	parser.rune.advance	rune.print	impgens.p	_test.parse_impgens_0.5.bind.closure.two.words_input	k
	.app	_test.parse_impgens_0.5.bind.closure.two.words_label	test
	.enter	test.property.label

_test.parse_impgens_0.5.bind.closure.two.words_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.impgen.t	.tygvar
test.true	.gvar
err	.larg	list.t	gsdl.ags.codeitem.impgen.t
	.enter	test.true

-- §subsection String Code Expressions

_test.parse_exprs_c	.expr
test.all	.gvar
_tests.parse_exprs	.gvar
	.app	_tests.parse_exprs
	.enter	test.all

-- §subsubsection §gs{qq{\\t.force\\t_foo_k\\n\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.force_c	.expr
gsdl.ags.syntax.features.t	.tygvar	-- Temp
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.force_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.force_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.force_input	.gvar
k	.closure	_test.parse_expr.force_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.force_input	k
	.app	_test.parse_expr.force_label	test
	.enter	test.property.label

_test.parse_expr.force_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.force_k_k	.subcode
gsdl.ags.codeitem.expr.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.expr.t
	.force	_test.parse_expr.force_k_k
	.coerce	gsdl.ags.codeitem.expr.t.out
	.enter	ci

_test.parse_expr.force_k_k	.forcecont
gsdl.ags.codeitem.expr.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
test.property.false	.gvar
_test.parse_expr.force_k_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
string.≡	.gvar
string.fmtgs	.gvar
_test.parse_expr.force_k_co.expected.s	.gvar
ci0	.karg	gsdl.ags.codeitem.expr.prim.u
	.danalyze	ci0	force
		.default
			.app	_test.parse_expr.force_k_k_wrong.constr.s
			.enter	test.property.false
		.case	force
pos0		.fkarg	0	gsdl.sourcepos.t
co		.fkarg	1	string.t
e		.fkarg	2	gsdl.ags.codeitem.expr.t
			.app	string.≡	string.fmtgs	co	_test.parse_expr.force_k_co.expected.s
			.enter	test.assert.eq	string.t

-- §subsubsection §gs{qq{\\t.strict\\t_foo_k\\n\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.strict_c	.expr
gsdl.ags.syntax.features.t	.tygvar	-- Temp
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.strict_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.strict_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.strict_input	.gvar
k	.closure	_test.parse_expr.strict_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.strict_input	k
	.app	_test.parse_expr.strict_label	test
	.enter	test.property.label

_test.parse_expr.strict_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

-- §subsubsection §gs{qq{\\t.coerce\\tbar.t.out\\n\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.coerce_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.coerce_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.coerce_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.coerce_input	.gvar
k	.closure	_test.parse_expr.coerce_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.coerce_input	k
	.app	_test.parse_expr.coerce_label	test
	.enter	test.property.label

_test.parse_expr.coerce_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.coerce_k_k	.subcode
gsdl.ags.codeitem.expr.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.expr.t
	.force	_test.parse_expr.coerce_k_k
	.coerce	gsdl.ags.codeitem.expr.t.out
	.enter	ci

_test.parse_expr.coerce_k_k	.forcecont
gsdl.ags.codeitem.expr.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
test.property.false	.gvar
_test.parse_expr.coerce_k_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
string.≡	.gvar
string.fmtgs	.gvar
_test.parse_expr.coerce_k_co.expected.s	.gvar
ci0	.karg	gsdl.ags.codeitem.expr.prim.u
	.danalyze	ci0	coerce
		.default
			.app	_test.parse_expr.coerce_k_k_wrong.constr.s
			.enter	test.property.false
		.case	coerce
pos		.fkarg	0	gsdl.sourcepos.t
co		.fkarg	1	string.t
coas		.fkarg	2	list.t	string.t
e		.fkarg	3	gsdl.ags.codeitem.expr.t
			.app	string.≡	string.fmtgs	co	_test.parse_expr.coerce_k_co.expected.s
			.enter	test.assert.eq	string.t

-- §subsubsection §gs{qq{\\t.app\\tbar\\n\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.app_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.app_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.app_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.app_input	.gvar
k	.closure	_test.parse_expr.app_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.app_input	k
	.app	_test.parse_expr.app_label	test
	.enter	test.property.label

_test.parse_expr.app_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.app_k_k	.subcode
gsdl.ags.codeitem.expr.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.expr.t
	.force	_test.parse_expr.app_k_k
	.coerce	gsdl.ags.codeitem.expr.t.out
	.enter	ci

_test.parse_expr.app_k_k	.forcecont
gsdl.ags.codeitem.expr.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
test.property.false	.gvar
_test.parse_expr.app_k_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.app_k_as.expected	.gvar
list.string.ty	.tylet	list.t	string.t
ci0	.karg	gsdl.ags.codeitem.expr.prim.u
	.danalyze	ci0	app
		.default
			.app	_test.parse_expr.app_k_k_wrong.constr.s
			.enter	test.property.false
		.case	app
pos		.fkarg	0	gsdl.sourcepos.t
as		.fkarg	1	list.t	string.t
e		.fkarg	2	gsdl.ags.codeitem.expr.t
list.string.≡			.apply	list.≡	string.t	|	string.≡
list.string.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	list.string.≡	list.string.fmtgs	as	_test.parse_expr.app_k_as.expected
			.enter	test.assert.eq	list.string.ty

-- §subsubsection §gs{qq{\\t.ubanalyze\\t0\\t_foo_k0\\n\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.ubanalyze_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.ubanalyze_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.ubanalyze_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.ubanalyze_input	.gvar
k	.closure	_test.parse_expr.ubanalyze_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.ubanalyze_input	k
	.app	_test.parse_expr.ubanalyze_label	test
	.enter	test.property.label

_test.parse_expr.ubanalyze_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
actual	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

-- §subsubsection §gs{qq{\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.enter_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.enter_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.enter_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.enter_input	.gvar
k	.closure	_test.parse_expr.enter_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.enter_input	k
	.app	_test.parse_expr.enter_label	test
	.enter	test.property.label

_test.parse_expr.enter_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
string.t	.tygvar
gsdl.sourcepos.t	.tygvar	-- Temp
test.assert.eq	.gvar
gsdl.ags.codeitem.expr.≡	.gvar
gsdl.ags.codeitem.expr.fmtgs	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.parse_expr.enter_k_foo.s	.gvar
list.nil	.gvar
actual	.larg	gsdl.ags.codeitem.expr.t
pos	.undefined	gsdl.sourcepos.t
nil	.apply	list.nil	string.t
expected	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.parse_expr.enter_k_foo.s	nil
	.app	gsdl.ags.codeitem.expr.≡	gsdl.ags.codeitem.expr.fmtgs	 actual	expected
	.enter	test.assert.eq	gsdl.ags.codeitem.expr.t

-- §subsubsection §gs{qq{\\t.analyze\\tfoo\\n} =~ expr.parser}

_test.parse_expr.analyze_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.analyze_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.analyze_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.analyze_input	.gvar
k	.closure	_test.parse_expr.analyze_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.analyze_input	k
	.app	_test.parse_expr.analyze_label	test
	.enter	test.property.label

_test.parse_expr.analyze_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
e	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

-- §subsubsection §gs{qq{\\t.analyze\\tfoo\\n\\t.case\\nx\\t.fkarg\\t0\\tx.t\\n} =~ expr.parser}

_test.parse_expr.analyze.fkarg_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.analyze.fkarg_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.analyze.fkarg_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
bool.false	.gvar
_test.parse_expr.analyze.fkarg_input	.gvar
k	.closure	_test.parse_expr.analyze.fkarg_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.analyze.fkarg_input	k
	.app	_test.parse_expr.analyze.fkarg_label	test
	.enter	test.property.label

_test.parse_expr.analyze.fkarg_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
e	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

-- §subsubsection §gs{qq{\\t.analyze\\tfoo\\tbar\\n\\t.case\\tbar\\nbaz\\t.apply\\tf\\tx.t\\n\\t.enter\\tbaz\\n} =~ expr.parser}

_test.parse_expr.gsanalyze.apply_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.gsanalyze.apply_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.gsanalyze.apply_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
bool.false	.gvar
_test.parse_expr.gsanalyze.apply_input	.gvar
k	.closure	_test.parse_expr.gsanalyze.apply_k_c
fs	.lrecord	bind.closure.one.word	bool.false	bind.closure.two.words	 bool.false	closure	bool.false	hash.normal	bool.false	|	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.gsanalyze.apply_input	k
	.app	_test.parse_expr.gsanalyze.apply_label	test
	.enter	test.property.label

_test.parse_expr.gsanalyze.apply_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
e	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

-- §subsubsection §gs{qq{\\t.ubprim\\trune.prim\\teq\\t_rune.prim.eq.t\\t|\\tx0\\ty0\\n} =~ expr.parser}

_test.parse_expr.ubprim_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.ubprim_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.ubprim_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.ubprim_input	.gvar
k	.closure	_test.parse_expr.ubprim_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.ubprim_input	k
	.app	_test.parse_expr.ubprim_label	test
	.enter	test.property.label

_test.parse_expr.ubprim_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
e	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

-- §subsubsection §gs{qq{\\t.lprim\\trune.prim\\teq\\t_rune.prim.eq_ty\\n} =~ expr.parser}

_test.parse_expr.lprim_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
gsdl.ags.syntax.features.t	.tygvar	-- Temp
_test.parse_expr.lprim_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.lprim_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.lprim_input	.gvar
k	.closure	_test.parse_expr.lprim_k_c
fs	.undefined	gsdl.ags.syntax.features.t
expr.p	.apply	gsdl.ags.codeitem.expr.parser	|	fs
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	expr.p	_test.parse_expr.lprim_input	k
	.app	_test.parse_expr.lprim_label	test
	.enter	test.property.label

_test.parse_expr.lprim_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
e	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

-- §section §gs{≡}

_test.eq_c	.expr
test.all	.gvar
_tests.eq	.gvar
	.app	_tests.eq
	.enter	test.all

-- §subsection §gs{ags.codeitem.≡ expr expr} with different §ags{.tygvar}s

_test.eq_codeitem.expr.diff.tygvars_c	.expr
string.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.sourcepos.t	.tygvar	-- Temp
test.property.label	.gvar
_test.eq_codeitem.expr.diff.tygvars_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.tygvars_false.s	.gvar
_test.eq_codeitem.expr.diff.tygvars_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_fixtures_foo.c.v	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.tygvars_bar.s	.gvar
list.:	.gvar
_test.eq_codeitem.expr.diff.tygvars_foo.tygv	.gvar
pos	.undefined	gsdl.sourcepos.t
nil	.apply	list.nil	string.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
allocs.nil	.apply	list.nil	gsdl.ags.codeitem.alloc.t
gvars.nil	.apply	list.nil	gsdl.ags.codeitem.gvar.t
tygvs.nil	.apply	list.nil	gsdl.ags.typeitem.decls.tygvar.t
decls0	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars.nil	subcodes	nil	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.tygvars_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls0	exp
tygvs1	.apply	list.:	gsdl.ags.typeitem.decls.tygvar.t	|	_test.eq_codeitem.expr.diff.tygvars_foo.tygv	tygvs.nil
decls1	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars.nil	subcodes	nil	tygvars	tygvs1	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.tygvars_false.s	_test.eq_codeitem.expr.diff.tygvars_true.s	eq
	.app	_test.eq_codeitem.expr.diff.tygvars_label	test
	.enter	test.property.label

_test.eq_codeitem.expr.diff.tygvars_foo.tygv_c	.expr
gsdl.ags.typeitem.decls.tygvar.tygvar	.gvar
_fixtures_foo.v	.gvar
	.app	_fixtures_foo.v
	.enter	gsdl.ags.typeitem.decls.tygvar.tygvar

-- §subsection §gs{ags.codeitem.≡ expr expr} with different §ags{.subcode}s

_test.eq_codeitem.expr.diff.subcodes_c	.expr
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
test.property.label	.gvar
_test.eq_codeitem.expr.diff.subcodes_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.subcodes_false.s	.gvar
_test.eq_codeitem.expr.diff.subcodes_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_fixtures_foo.c.v	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.subcodes_bar.s	.gvar
list.:	.gvar
_test.eq_codeitem.expr.diff.subcodes_foo.s	.gvar
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
allocs.nil	.apply	list.nil	gsdl.ags.codeitem.alloc.t
gvars.nil	.apply	list.nil	gsdl.ags.codeitem.gvar.t
nil	.apply	list.nil	string.t
tygvs.nil	.apply	list.nil	gsdl.ags.typeitem.decls.tygvar.t
decls0	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars.nil	subcodes	nil	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.subcodes_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls0	exp
subcodes1	.apply	list.:	string.t	|	_test.eq_codeitem.expr.diff.subcodes_foo.s	nil
decls1	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars.nil	subcodes	subcodes1	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.subcodes_false.s	_test.eq_codeitem.expr.diff.subcodes_true.s	eq
	.app	_test.eq_codeitem.expr.diff.subcodes_label	test
	.enter	test.property.label

-- §subsection §gs{ags.codeitem.≡ expr expr} with different §ags{.cogvar}s

_test.eq_codeitem.expr.diff.cogvars_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
string.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
test.property.label	.gvar
_test.eq_codeitem.expr.diff.cogvars_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.cogvars_false.s	.gvar
_test.eq_codeitem.expr.diff.cogvars_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_fixtures_foo.c.v	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.cogvars_bar.s	.gvar
list.:	.gvar
_test.eq_codeitem.expr.diff.cogvars_foo.s	.gvar
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
allocs.nil	.apply	list.nil	gsdl.ags.codeitem.alloc.t
gvars.nil	.apply	list.nil	gsdl.ags.codeitem.gvar.t
nil	.apply	list.nil	string.t
tygvs.nil	.apply	list.nil	gsdl.ags.typeitem.decls.tygvar.t
decls0	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars.nil	subcodes	nil	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.cogvars_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls0	exp
cogvars1	.apply	list.:	string.t	|	_test.eq_codeitem.expr.diff.cogvars_foo.s	nil
decls1	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	cogvars1	gvars	gvars.nil	subcodes	nil	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.cogvars_false.s	_test.eq_codeitem.expr.diff.cogvars_true.s	eq
	.app	_test.eq_codeitem.expr.diff.cogvars_label	test
	.enter	test.property.label

-- §subsection §gs{ags.codeitem.≡ expr expr} with different §ags{.gvar}s

_test.eq_codeitem.expr.diff.gvars_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
test.property.label	.gvar
_test.eq_codeitem.expr.diff.gvars_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.gvars_false.s	.gvar
_test.eq_codeitem.expr.diff.gvars_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_fixtures_foo.c.v	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.gvars_bar.s	.gvar
list.:	.gvar
gsdl.ags.codeitem.gvar.gvar	.gvar
_test.eq_codeitem.expr.diff.gvars_foo.s	.gvar
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
allocs.nil	.apply	list.nil	gsdl.ags.codeitem.alloc.t
gvars.nil	.apply	list.nil	gsdl.ags.codeitem.gvar.t
nil	.apply	list.nil	string.t
tygvs.nil	.apply	list.nil	gsdl.ags.typeitem.decls.tygvar.t
decls0	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars.nil	subcodes	nil	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.gvars_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls0	exp
gvar0	.apply	gsdl.ags.codeitem.gvar.gvar	|	pos	_test.eq_codeitem.expr.diff.gvars_foo.s
gvars1	.apply	list.:	gsdl.ags.codeitem.gvar.t	|	gvar0	gvars.nil
decls1	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars1	subcodes	nil	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.gvars_false.s	_test.eq_codeitem.expr.diff.gvars_true.s	eq
	.app	_test.eq_codeitem.expr.diff.gvars_label	test
	.enter	test.property.label

-- §subsection §gs{ags.codeitem.≡ expr expr} with different args

_test.eq_codeitem.expr.diff.args_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
gsdl.ags.codeitem.alloc.t	.tygvar
gsdl.ags.codeitem.gvar.t	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
gsdl.var.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
test.property.label	.gvar
_test.eq_codeitem.expr.diff.args_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.args_false.s	.gvar
_test.eq_codeitem.expr.diff.args_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_fixtures_foo.c.v	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.args_bar.s	.gvar
list.:	.gvar
gsdl.ags.codeitem.arg.larg	.gvar
_fixtures_x.v	.gvar
_fixtures_x.t.v	.gvar
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
allocs.nil	.apply	list.nil	gsdl.ags.codeitem.alloc.t
gvars.nil	.apply	list.nil	gsdl.ags.codeitem.gvar.t
nil	.apply	list.nil	string.t
tygvs.nil	.apply	list.nil	gsdl.ags.typeitem.decls.tygvar.t
decls0	.lrecord	allocs	allocs.nil	args	args.nil	cogvars	nil	gvars	gvars.nil	subcodes	nil	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.args_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls0	exp
as.nil	.apply	list.nil	gsdl.var.t
arg0	.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_x.v	_fixtures_x.t.v	as.nil
args1	.apply	list.:	gsdl.ags.codeitem.arg.t	|	arg0	args.nil
decls1	.lrecord	allocs	allocs.nil	args	args1	cogvars	nil	gvars	gvars.nil	subcodes	nil	tygvars	tygvs.nil	|	_gsdl.ags.codeitem.prim.u_expr_decls_ty
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_fixtures_foo.c.v decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.args_false.s	_test.eq_codeitem.expr.diff.args_true.s	eq
	.app	_test.eq_codeitem.expr.diff.args_label	test
	.enter	test.property.label

-- §subsection §gs{〈 'name ∝ qq{foo}; 'lifted ∝ true; 'ty ∝ qq{bar.t}; 〉 ≡ 〈 'name ∝ qq{baz}; 'lifted ∝ true; 'ty ∝ qq{bar.t}; 〉}

_test.eq_arg.diff.name_c	.expr
gsdl.var.t	.tygvar
test.property.label	.gvar
_test.eq_arg.diff.name_label	.gvar
test.deny	.gvar
_test.eq_arg.diff.name_false	.gvar
_test.eq_arg.diff.name_true	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
gsdl.ags.codeitem.arg.larg	.gvar
_fixtures_foo.v	.gvar
_fixtures_bar.t.v	.gvar
list.nil	.gvar
_fixtures_baz.v	.gvar
nil	.apply	list.nil	gsdl.var.t
arg0	.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_foo.v	_fixtures_bar.t.v	nil
arg1	.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_baz.v	_fixtures_bar.t.v	nil
eq	.apply	gsdl.ags.codeitem.arg.≡	|	arg0	arg1
test	.apply	test.deny	|	_test.eq_arg.diff.name_false	_test.eq_arg.diff.name_true	eq
	.app	_test.eq_arg.diff.name_label	test
	.enter	test.property.label

-- §subsection §gs{〈 'name ∝ qq{foo}; 'lifted ∝ true; 'ty ∝ qq{bar.t}; 〉  〈 'name ∝ qq{foo}; 'lifted ∝ false; 'ty ∝ qq{bar.t}; 〉}

_test.eq_arg.diff.lifted_c	.expr
gsdl.var.t	.tygvar
test.property.label	.gvar
_test.eq_arg.diff.lifted_label	.gvar
test.deny	.gvar
_test.eq_arg.diff.lifted_false	.gvar
_test.eq_arg.diff.lifted_true	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
gsdl.ags.codeitem.arg.larg	.gvar
_fixtures_foo.v	.gvar
_fixtures_bar.t.v	.gvar
list.nil	.gvar
gsdl.ags.codeitem.arg.arg	.gvar
nil	.apply	list.nil	gsdl.var.t
arg0	.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_foo.v	_fixtures_bar.t.v	nil
arg1	.apply	gsdl.ags.codeitem.arg.arg	|	_fixtures_foo.v	_fixtures_bar.t.v	nil
eq	.apply	gsdl.ags.codeitem.arg.≡	|	arg0	arg1
test	.apply	test.deny	|	_test.eq_arg.diff.lifted_false	_test.eq_arg.diff.lifted_true	eq
	.app	_test.eq_arg.diff.lifted_label	test
	.enter	test.property.label

-- §subsection §gs{〈 'name ∝ qq{foo}; 'lifted ∝ true; 'ty ∝ qq{bar.t}; 〉 ≡ 〈 'name ∝ qq{foo}; 'lifted ∝ true; 'ty ∝ qq{baz.t}; 〉}

_test.eq_arg.diff.ty_c	.expr
gsdl.var.t	.tygvar
test.property.label	.gvar
_test.eq_arg.diff.ty_label	.gvar
test.deny	.gvar
_test.eq_arg.diff.ty_false	.gvar
_test.eq_arg.diff.ty_true	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
gsdl.ags.codeitem.arg.larg	.gvar
_fixtures_foo.v	.gvar
_fixtures_bar.t.v	.gvar
list.nil	.gvar
_fixtures_baz.t.v	.gvar
nil	.apply	list.nil	gsdl.var.t
arg0	.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_foo.v	_fixtures_bar.t.v	nil
arg1	.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_foo.v	_fixtures_baz.t.v	nil
eq	.apply	gsdl.ags.codeitem.arg.≡	|	arg0	arg1
test	.apply	test.deny	|	_test.eq_arg.diff.ty_false	_test.eq_arg.diff.ty_true	eq
	.app	_test.eq_arg.diff.ty_label	test
	.enter	test.property.label

-- §subsection §gs{〈 'name ∝ qq{foo}; 'lifted ∝ true; 'gstype ∝ qq{bar.t}; 'tyargs ∝ []; 〉 ≡ 〈 'name ∝ qq{foo}; 'lifted ∝ true; 'gstype ∝ qq{bar.t}; 'tyargs ∝ [ qq{quux.t}, ]; 〉}

_test.eq_arg.diff.tyargs_c	.expr
gsdl.var.t	.tygvar
test.property.label	.gvar
_test.eq_arg.diff.tyargs_label	.gvar
test.deny	.gvar
_test.eq_arg.diff.tyargs_false	.gvar
_test.eq_arg.diff.tyargs_true	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
gsdl.ags.codeitem.arg.larg	.gvar
_fixtures_foo.v	.gvar
_fixtures_bar.t.v	.gvar
list.nil	.gvar
list.:	.gvar
_fixtures_quux.t.v	.gvar
nil	.apply	list.nil	gsdl.var.t
arg0	.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_foo.v	_fixtures_bar.t.v	nil
tyargs1	.apply	list.:	gsdl.var.t	|	_fixtures_quux.t.v	nil
arg1	.apply	gsdl.ags.codeitem.arg.larg	|	_fixtures_foo.v	_fixtures_bar.t.v	tyargs1
eq	.apply	gsdl.ags.codeitem.arg.≡	|	arg0	arg1
test	.apply	test.deny	|	_test.eq_arg.diff.tyargs_false	_test.eq_arg.diff.tyargs_true	eq
	.app	_test.eq_arg.diff.tyargs_label	test
	.enter	test.property.label

-- §section Test fixtures

_fixtures_foo.c.v_c	.expr
gsdl.var.t	.tygvar
_fixtures_c.v_c	.subcode
gsdl.var.constructed	.gvar
natural.1	.gvar
list.:	.gvar
_fixtures_foo.v	.gvar
list.singleton	.gvar
_fixtures_c.v	.closure	_fixtures_c.v_c
cs1	.apply	list.singleton	gsdl.var.t	|	_fixtures_c.v
cs	.apply	list.:	gsdl.var.t	|	_fixtures_foo.v	cs1
	.app	natural.1	cs
	.enter	gsdl.var.constructed

_fixtures_foo.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_fixtures_foo.v_foo.s	.gvar
c0	.apply	gsdl.var.component.alphanum	|	_fixtures_foo.v_foo.s
cs	.apply	list.singleton	gsdl.var.component.t	|	c0
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_c.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_fixtures_c.v_c.s	.gvar
c0	.apply	gsdl.var.component.alphanum	|	_fixtures_c.v_c.s
cs	.apply	list.singleton	gsdl.var.component.t	|	c0
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_bar.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
_fixtures_bar.c	.gvar
cs	.apply	list.singleton	gsdl.var.component.t	|	_fixtures_bar.c
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_bar.t.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.:	.gvar
_fixtures_bar.c	.gvar
list.singleton	.gvar
_fixtures_t.c	.gvar
cs1	.apply	list.singleton	gsdl.var.component.t	|	_fixtures_t.c
cs	.apply	list.:	gsdl.var.component.t	|	_fixtures_bar.c	cs1
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_bar.c_c	.expr
gsdl.var.component.alphanum	.gvar
_fixtures_bar.c_bar.s	.gvar
	.app	_fixtures_bar.c_bar.s
	.enter	gsdl.var.component.alphanum

_fixtures_baz.t.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.:	.gvar
_fixtures_baz.c	.gvar
list.singleton	.gvar
_fixtures_t.c	.gvar
cs1	.apply	list.singleton	gsdl.var.component.t	|	_fixtures_t.c
cs	.apply	list.:	gsdl.var.component.t	|	_fixtures_baz.c	cs1
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_baz.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
_fixtures_baz.c	.gvar
cs	.apply	list.singleton	gsdl.var.component.t	|	_fixtures_baz.c
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_baz.c_c	.expr
gsdl.var.component.alphanum	.gvar
_fixtures_baz.c_baz.s	.gvar
	.app	_fixtures_baz.c_baz.s
	.enter	gsdl.var.component.alphanum

_fixtures_quux.t.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.:	.gvar
gsdl.var.component.alphanum	.gvar
_fixtures_quux.t.v_quux.s	.gvar
list.singleton	.gvar
_fixtures_t.c	.gvar
c0	.apply	gsdl.var.component.alphanum	|	_fixtures_quux.t.v_quux.s
cs1	.apply	list.singleton	gsdl.var.component.t	|	_fixtures_t.c
cs	.apply	list.:	gsdl.var.component.t	|	c0	cs1
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_x.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
_fixtures_x.c	.gvar
cs	.apply	list.singleton	gsdl.var.component.t	|	_fixtures_x.c
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_x.t.v_c	.expr
gsdl.var.component.t	.tygvar
gsdl.var.basevar	.gvar
list.:	.gvar
_fixtures_x.c	.gvar
list.singleton	.gvar
_fixtures_t.c	.gvar
cs1	.apply	list.singleton	gsdl.var.component.t	|	_fixtures_t.c
cs	.apply	list.:	gsdl.var.component.t	|	_fixtures_x.c	cs1
	.app	cs
	.enter	gsdl.var.basevar

_fixtures_x.c_c	.expr
gsdl.var.component.alphanum	.gvar
_fixtures_x.c_x.s	.gvar
	.app	_fixtures_x.c_x.s
	.enter	gsdl.var.component.alphanum

_fixtures_t.c_c	.expr
gsdl.var.component.alphanum	.gvar
_fixtures_t.c_t.s	.gvar
	.app	_fixtures_t.c_t.s
	.enter	gsdl.var.component.alphanum
