	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.parse	_test.eq

# §section Parsers

_test.parse	.closure	_test.parse_c
_tests.parse	.list	test.property.t	_test.parse_segments	_test.parse_expr.items	_test.parse_forcecont.items	_test.parse_exprs

# §subsection Code Segments

_test.parse_segments	.closure	_test.parse_segments_c
_tests.parse_segments	.list	test.property.t	_test.parse_segment.empty

_test.parse_segment.empty	.closure	_test.parse_segment.empty_c
_test.parse_segment.empty_label	.string	qq{\\t.code\\n}\s=~\ssegment.parser
_test.parse_segment.empty_input	.string	\t.code\n

# §subsection §ags{.expr} Code Items

_test.parse_expr.items	.closure	_test.parse_expr.items_c
_tests.parse_expr.items	.list	test.property.t	_test.parse_expr	_test.parse_expr.tygvar	_test.parse_expr.subcode	_test.parse_expr.cogvar	_test.parse_expr.gvar	_test.parse_expr.larg

_test.parse_expr	.closure	_test.parse_expr_c
_test.parse_expr_label	.string	qq{_foo_c\\t.expr\\n\\t.enter\\tbar\\n}\s=~\sparser
_test.parse_expr_input	.string	_foo_c\t.expr\n\t.enter\tbar\n
_test.parse_expr_k_foo.c.s	.string	_foo_c
_test.parse_expr_k_bar.s	.string	bar

_test.parse_expr.tygvar	.closure	_test.parse_expr.tygvar_c
_test.parse_expr.tygvar_label	.string	qq{_foo_c\\t.expr\\nbar.t\\t.tygvar\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.tygvar_input	.string	_foo_c\t.expr\nbar.t\t.tygvar\n\t.enter\tbaz\n
_test.parse_expr.tygvar_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.tygvar_k_tygvs.expected	.list	string.t	_test.parse_expr.tygvar_k_tygvs.expected_0
_test.parse_expr.tygvar_k_tygvs.expected_0	.string	bar.t

_test.parse_expr.subcode	.closure	_test.parse_expr.subcode_c
_test.parse_expr.subcode_label	.string	qq{_foo_c\\t.expr\\n_bar_c\\t.subcode\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.subcode_input	.string	_foo_c\t.expr\n_bar_c\t.subcode\n\t.enter\tbaz\n
_test.parse_expr.subcode_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.subcode_k_subcodes.expected	.list	string.t	_test.parse_expr.subcode_k_subcodes.expected_0
_test.parse_expr.subcode_k_subcodes.expected_0	.string	_bar_c

_test.parse_expr.cogvar	.closure	_test.parse_expr.cogvar_c
_test.parse_expr.cogvar_label	.string	qq{_foo_c\\t.expr\\nbar.t.out\\t.cogvar\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.cogvar_input	.string	_foo_c\t.expr\nbar.t.out\t.cogvar\n\t.enter\tbaz\n
_test.parse_expr.cogvar_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.cogvar_k_cogvars.expected	.list	string.t	_test.parse_expr.cogvar_k_cogvars.expected_0
_test.parse_expr.cogvar_k_cogvars.expected_0	.string	bar.t.out

_test.parse_expr.gvar	.closure	_test.parse_expr.gvar_c
_test.parse_expr.gvar_label	.string	qq{_foo_c\\t.expr\\nbar\\t.gvar\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.gvar_input	.string	_foo_c\t.expr\nbar\t.gvar\n\t.enter\tbaz\n
_test.parse_expr.gvar_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.gvar_k_gvars.expected	.list	string.t	_test.parse_expr.gvar_k_gvars.expected_0
_test.parse_expr.gvar_k_gvars.expected_0	.string	bar

_test.parse_expr.larg	.closure	_test.parse_expr.larg_c
_test.parse_expr.larg_label	.string	qq{_foo_c\\t.expr\\nbar\\t.larg\\tbar.t\\tquux.t\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.larg_input	.string	_foo_c\t.expr\nbar\t.larg\tbar.t\tquux.t\n\t.enter\tbaz\n
_test.parse_expr.larg_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.larg_k_bar.s	.string	bar
_test.parse_expr.larg_k_bar.t.s	.string	bar.t
_test.parse_expr.larg_k_tyargs	.list	string.t	_test.parse_expr.larg_k_tyargs_0
_test.parse_expr.larg_k_tyargs_0	.string	quux.t

# §subsection §ags{.forcecont} Code Items

_test.parse_forcecont.items	.closure	_test.parse_forcecont.items_c
_tests.parse_forcecont.items	.list	test.property.t	_test.parse_forcecont	_test.parse_forcecont.fv

_test.parse_forcecont	.closure	_test.parse_forcecont_c
_test.parse_forcecont_label	.string	qq{_foo_k\\t.forcecont\\nx0\\t.karg\\tx.u\\n\\t.enter\\ty\\n}\s=~\sparser
_test.parse_forcecont_input	.string	_foo_k\t.forcecont\nx0\t.karg\tx.u\n\t.enter\ty\n
_test.parse_forcecont_k_foo.k.s	.string	_foo_k
_test.parse_forcecont_k_x0.s	.string	x0
_test.parse_forcecont_k_x.u.s	.string	x.u
_test.parse_forcecont_k_y.s	.string	y

_test.parse_forcecont.fv	.closure	_test.parse_forcecont.fv_c
_test.parse_forcecont.fv_label	.string	qq{_foo_k\\t.forcecont\\nbar\\t.fv\\tbar.t\\nx0\\t.karg\\tx.u\\n\\t.enter\\ty\\n}\s=~\sparser
_test.parse_forcecont.fv_input	.string	_foo_k\t.forcecont\nbar\t.fv\tbar.t\nx0\t.karg\tx.u\n\t.enter\ty\n

# §subsection String Code Expressions

_test.parse_exprs	.closure	_test.parse_exprs_c
_tests.parse_exprs	.list	test.property.t	_test.parse_expr.force	_test.parse_expr.coerce	_test.parse_expr.app	_test.parse_expr.enter	_test.parse_expr.analyze	_test.parse_expr.gsanalyze.apply

_test.parse_expr.force	.closure	_test.parse_expr.force_c
_test.parse_expr.force_label	.string	qq{\\t.force\\t_foo_k\\n\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.force_input	.string	\t.force\t_foo_k\n\t.enter\tfoo\n
_test.parse_expr.force_k_k_wrong.constr.s	.string	Parse\sresult\sis\snot\sa\s.force\sconstructor
_test.parse_expr.force_k_co.expected.s	.string	_foo_k

_test.parse_expr.coerce	.closure	_test.parse_expr.coerce_c
_test.parse_expr.coerce_label	.string	qq{\\t.coerce\\tbar.t.out\\n\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.coerce_input	.string	\t.coerce\tbar.t.out\n\t.enter\tfoo\n
_test.parse_expr.coerce_k_k_wrong.constr.s	.string	Parse\sresult\sis\snot\sa\s.coerce\sconstructor
_test.parse_expr.coerce_k_co.expected.s	.string	bar.t.out

_test.parse_expr.app	.closure	_test.parse_expr.app_c
_test.parse_expr.app_label	.string	qq{\\t.app\\tbar\\n\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.app_input	.string	\t.app\tbar\n\t.enter\tfoo\n
_test.parse_expr.app_k_k_wrong.constr.s	.string	Parse\sresult\sis\snot\san\s.app\sconstructor
_test.parse_expr.app_k_as.expected	.list	string.t	_test.parse_expr.app_k_as.expected_0
_test.parse_expr.app_k_as.expected_0	.string	bar

_test.parse_expr.enter	.closure	_test.parse_expr.enter_c
_test.parse_expr.enter_label	.string	qq{\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.enter_input	.string	\t.enter\tfoo\n
_test.parse_expr.enter_k_foo.s	.string	foo

_test.parse_expr.analyze	.closure	_test.parse_expr.analyze_c
_test.parse_expr.analyze_label	.string	qq{\\t.analyze\\tfoo\\tbar\\n\\t.case\\tbar\\n\\t.enter\\tbaz\\n}\s=~\sexpr.parser
_test.parse_expr.analyze_input	.string	\t.analyze\tfoo\tbar\n\t.case\tbar\n\t.enter\tbaz\n

_test.parse_expr.gsanalyze.apply	.closure	_test.parse_expr.gsanalyze.apply_c
_test.parse_expr.gsanalyze.apply_label	.string	qq{\\t.analyze\\tfoo\\tbar\\n\\t.case\\tbar\\nbaz\\t.apply\\tf\\tx.t\\n\\t.enter\\tbaz\\n}\s=~\sexpr.parser
_test.parse_expr.gsanalyze.apply_input	.string	\t.analyze\tfoo\tbar\n\t.case\tbar\nbaz\t.apply\tf\tx.t\n\t.enter\tbaz\n

# §section §gs{≡}

_test.eq	.closure	_test.eq_c
_tests.eq	.list	test.property.t	_test.eq_codeitem.expr.diff.tygvars	_test.eq_codeitem.expr.diff.subcodes	_test.eq_codeitem.expr.diff.cogvars	_test.eq_codeitem.expr.diff.gvars	_test.eq_codeitem.expr.diff.args	_test.eq_arg.diff.name	_test.eq_arg.diff.lifted	_test.eq_arg.diff.ty	_test.eq_arg.diff.tyargs

_test.eq_codeitem.expr.diff.tygvars	.closure	_test.eq_codeitem.expr.diff.tygvars_c
_test.eq_codeitem.expr.diff.tygvars_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\stygvars
_test.eq_codeitem.expr.diff.tygvars_false.s	.string	ags.codeitem.expr\snm\s〈\s'tygvars\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'tygvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.tygvars_true.s	.string	ags.codeitem.expr\snm\s〈\s'tygvars\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'tygvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.tygvars_foo.c.s	.string	_foo_c
_test.eq_codeitem.expr.diff.tygvars_bar.s	.string	bar
_test.eq_codeitem.expr.diff.tygvars_foo.s	.string	foo

_test.eq_codeitem.expr.diff.subcodes	.closure	_test.eq_codeitem.expr.diff.subcodes_c
_test.eq_codeitem.expr.diff.subcodes_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\ssubcodes
_test.eq_codeitem.expr.diff.subcodes_false.s	.string	ags.codeitem.expr\snm\s〈\s'subcodes\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'subcodes\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.subcodes_true.s	.string	ags.codeitem.expr\snm\s〈\s'subcodes\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'subcodes\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.subcodes_foo.c.s	.string	_foo_c
_test.eq_codeitem.expr.diff.subcodes_bar.s	.string	bar
_test.eq_codeitem.expr.diff.subcodes_foo.s	.string	foo

_test.eq_codeitem.expr.diff.cogvars	.closure	_test.eq_codeitem.expr.diff.cogvars_c
_test.eq_codeitem.expr.diff.cogvars_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\scogvars
_test.eq_codeitem.expr.diff.cogvars_false.s	.string	ags.codeitem.expr\snm\s〈\s'cogvars\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'cogvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.cogvars_true.s	.string	ags.codeitem.expr\snm\s〈\s'cogvars\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'cogvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.cogvars_foo.c.s	.string	_foo_c
_test.eq_codeitem.expr.diff.cogvars_bar.s	.string	bar
_test.eq_codeitem.expr.diff.cogvars_foo.s	.string	foo

_test.eq_codeitem.expr.diff.gvars	.closure	_test.eq_codeitem.expr.diff.gvars_c
_test.eq_codeitem.expr.diff.gvars_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\sgvars
_test.eq_codeitem.expr.diff.gvars_false.s	.string	ags.codeitem.expr\snm\s〈\s'gvars\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'gvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.gvars_true.s	.string	ags.codeitem.expr\snm\s〈\s'gvars\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'gvars\s∝\s[\sqq{foo},\s];\s〉\se
_test.eq_codeitem.expr.diff.gvars_foo.c.s	.string	_foo_c
_test.eq_codeitem.expr.diff.gvars_bar.s	.string	bar
_test.eq_codeitem.expr.diff.gvars_foo.s	.string	foo

_test.eq_codeitem.expr.diff.args	.closure	_test.eq_codeitem.expr.diff.args_c
_test.eq_codeitem.expr.diff.args_label	.string	ags.codeitem.≡\sexpr\sexpr\swith\sdifferent\sargs
_test.eq_codeitem.expr.diff.args_false.s	.string	ags.codeitem.expr\snm\s〈\s'args\s∝\snil;\s〉\se\s≠\sags.codeitem.expr\snm\s〈\s'args\s∝\s[\sarg,\s];\s〉\se
_test.eq_codeitem.expr.diff.args_true.s	.string	ags.codeitem.expr\snm\s〈\s'args\s∝\snil;\s〉\se\s≡\sags.codeitem.expr\snm\s〈\s'args\s∝\s[\sarg,\s];\s〉\se
_test.eq_codeitem.expr.diff.args_foo.c.s	.string	_foo_c
_test.eq_codeitem.expr.diff.args_x.s	.string	x
_test.eq_codeitem.expr.diff.args_x.t.s	.string	x.t
_test.eq_codeitem.expr.diff.args_bar.s	.string	bar

_test.eq_arg.diff.name	.closure	_test.eq_arg.diff.name_c
_test.eq_arg.diff.name_label	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{baz};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.name_false	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≠\s〈\s'name\s∝\sqq{baz};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.name_true	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{baz};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.name_foo.s	.string	foo
_test.eq_arg.diff.name_baz.s	.string	baz
_test.eq_arg.diff.name_bar.t.s	.string	bar.t

_test.eq_arg.diff.lifted	.closure	_test.eq_arg.diff.lifted_c
_test.eq_arg.diff.lifted_label	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\sfalse;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.lifted_false	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≠\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\sfalse;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.lifted_true	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\sfalse;\s'ty\s∝\sqq{bar.t};\s〉
_test.eq_arg.diff.lifted_foo.s	.string	foo
_test.eq_arg.diff.lifted_bar.t.s	.string	bar.t

_test.eq_arg.diff.ty	.closure	_test.eq_arg.diff.ty_c
_test.eq_arg.diff.ty_label	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{baz.t};\s〉
_test.eq_arg.diff.ty_false	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≠\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{baz.t};\s〉
_test.eq_arg.diff.ty_true	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{bar.t};\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'ty\s∝\sqq{baz.t};\s〉
_test.eq_arg.diff.ty_foo.s	.string	foo
_test.eq_arg.diff.ty_bar.t.s	.string	bar.t
_test.eq_arg.diff.ty_baz.t.s	.string	baz.t

_test.eq_arg.diff.tyargs	.closure	_test.eq_arg.diff.tyargs_c
_test.eq_arg.diff.tyargs_label	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[];\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[\sqq{quux.t},\s];\s〉
_test.eq_arg.diff.tyargs_false	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[];\s〉\s≠\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[\sqq{quux.t},\s];\s〉
_test.eq_arg.diff.tyargs_true	.string	〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[];\s〉\s≡\s〈\s'name\s∝\sqq{foo};\s'lifted\s∝\strue;\s'gstype\s∝\sqq{bar.t};\s'tyargs\s∝\s[\sqq{quux.t},\s];\s〉
_test.eq_arg.diff.tyargs_foo.s	.string	foo
_test.eq_arg.diff.tyargs_bar.t.s	.string	bar.t
_test.eq_arg.diff.tyargs_baz.t.s	.string	baz.t
_test.eq_arg.diff.tyargs_quux.t.s	.string	quux.t

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section Parsers

_test.parse_c	.expr
test.all	.gvar
_tests.parse	.gvar
	.app	_tests.parse
	.enter	test.all

# §subsection Code Segments

_test.parse_segments_c	.expr
test.all	.gvar
_tests.parse_segments	.gvar
	.app	_tests.parse_segments
	.enter	test.all

# §subsubsection §gs{qq{\\t.code\\n}=~ segment.parser}

_test.parse_segment.empty_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
codesegment_ty	.tylet	list.t	gsdl.ags.codeitem.t
_test.parse_segment.empty_k_c	.subcode
test.property.label	.gvar
_test.parse_segment.empty_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.segment.parser	.gvar
_test.parse_segment.empty_input	.gvar
k	.alloc	_test.parse_segment.empty_k_c
test	.apply	parser.test.assert.passes	rune.t	codesegment_ty	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.segment.parser	_test.parse_segment.empty_input	k
	.app	_test.parse_segment.empty_label	test
	.enter	test.property.label

_test.parse_segment.empty_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
codesegment_ty	.tylet	list.t	gsdl.ags.codeitem.t
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.codeitem.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.fmtgs	.gvar
list.nil	.gvar
cos	.larg	list.t	gsdl.ags.codeitem.t
cs.≡	.apply	list.≡	gsdl.ags.codeitem.t	|	gsdl.ags.codeitem.≡
cs.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.t	|	gsdl.ags.codeitem.fmtgs
nil	.apply	list.nil	gsdl.ags.codeitem.t
	.app	cs.≡	cs.fmtgs	cos	nil
	.enter	test.assert.eq	codesegment_ty

# §subsection §ags{.expr} Code Items

_test.parse_expr.items_c	.expr
test.all	.gvar
_tests.parse_expr.items	.gvar
	.app	_tests.parse_expr.items
	.enter	test.all

# §subsubsection §gs{qq{_foo_c\\t.expr\\n\\t.enter\\tbar\\n} =~ parser}

_test.parse_expr_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr_k_c	.subcode
test.property.label	.gvar
_test.parse_expr_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr_input	.gvar
k	.alloc	_test.parse_expr_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_expr_input	k
	.app	_test.parse_expr_label	test
	.enter	test.property.label

_test.parse_expr_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
string.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
gsdl.sourcepos.t	.tygvar	# Temp
test.assert.eq	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.fmtgs	.gvar
gsdl.ags.codeitem.expr	.gvar
_test.parse_expr_k_foo.c.s	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.parse_expr_k_bar.s	.gvar
list.nil	.gvar
actual	.larg	gsdl.ags.codeitem.t
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
nil	.apply	list.nil	string.t
ds	.lrecord	args	args.nil	cogvars	nil	gvars	nil	subcodes	nil	tygvs	nil
tyas	.apply	list.nil	string.t
expected.expr	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.parse_expr_k_bar.s	tyas
expected	.apply	gsdl.ags.codeitem.expr	|	pos	_test.parse_expr_k_foo.c.s	ds	expected.expr
	.app	gsdl.ags.codeitem.≡	gsdl.ags.codeitem.fmtgs	actual	expected
	.enter	test.assert.eq	gsdl.ags.codeitem.t

# §subsubsection §gs{qq{_foo_c\\t.expr\\nbar.t\\t.tygvar\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.tygvar_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.tygvar_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.tygvar_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr.tygvar_input	.gvar
k	.alloc	_test.parse_expr.tygvar_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_expr.tygvar_input	k
	.app	_test.parse_expr.tygvar_label	test
	.enter	test.property.label

_test.parse_expr.tygvar_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.tygvar_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.tygvar_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.tygvar_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
list.string.ty	.tylet	list.t	string.t
test.property.false	.gvar
_test.parse_expr.tygvar_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.tygvar_k_tygvs.expected	.gvar
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.tygvar_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	string.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
tygvs			.lfield	tygvs	ds
tygvs.≡			.apply	list.≡	string.t	|	string.≡
tygvs.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	tygvs.≡	tygvs.fmtgs	tygvs	_test.parse_expr.tygvar_k_tygvs.expected
			.enter	test.assert.eq	list.string.ty

# §subsubsection §gs{qq{_foo_c\\t.expr\\n_bar_c\\t.subcode\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.subcode_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.subcode_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.subcode_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr.subcode_input	.gvar
k	.alloc	_test.parse_expr.subcode_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_expr.subcode_input	k
	.app	_test.parse_expr.subcode_label	test
	.enter	test.property.label

_test.parse_expr.subcode_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.subcode_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.subcode_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.subcode_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
list.string.ty	.tylet	list.t	string.t
test.property.false	.gvar
_test.parse_expr.subcode_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.subcode_k_subcodes.expected	.gvar
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.subcode_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	string.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
subcodes			.lfield	subcodes	ds
subcodes.≡			.apply	list.≡	string.t	|	string.≡
subcodes.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	subcodes.≡	subcodes.fmtgs	subcodes	_test.parse_expr.subcode_k_subcodes.expected
			.enter	test.assert.eq	list.string.ty

# §subsubsection §gs{qq{_foo_c\\t.expr\\nbar.t.out\\t.cogvar\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.cogvar_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.cogvar_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.cogvar_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr.cogvar_input	.gvar
k	.alloc	_test.parse_expr.cogvar_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_expr.cogvar_input	k
	.app	_test.parse_expr.cogvar_label	test
	.enter	test.property.label

_test.parse_expr.cogvar_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.cogvar_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.cogvar_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.cogvar_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
list.string.ty	.tylet	list.t	string.t
test.property.false	.gvar
_test.parse_expr.cogvar_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.cogvar_k_cogvars.expected	.gvar
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.cogvar_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	string.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
cogvars			.lfield	cogvars	ds
cogvars.≡			.apply	list.≡	string.t	|	string.≡
cogvars.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	cogvars.≡	cogvars.fmtgs	cogvars	_test.parse_expr.cogvar_k_cogvars.expected
			.enter	test.assert.eq	list.string.ty

# §subsubsection §gs{qq{_foo_c\\t.expr\\nbar\\t.gvar\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.gvar_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.gvar_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.gvar_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr.gvar_input	.gvar
k	.alloc	_test.parse_expr.gvar_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_expr.gvar_input	k
	.app	_test.parse_expr.gvar_label	test
	.enter	test.property.label

_test.parse_expr.gvar_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.gvar_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.gvar_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.gvar_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
list.string.ty	.tylet	list.t	string.t
test.property.false	.gvar
_test.parse_expr.gvar_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.gvar_k_gvars.expected	.gvar
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.gvar_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	string.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
gvars			.lfield	gvars	ds
gvars.≡			.apply	list.≡	string.t	|	string.≡
gvars.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	gvars.≡	gvars.fmtgs	gvars	_test.parse_expr.gvar_k_gvars.expected
			.enter	test.assert.eq	list.string.ty

# §subsubsection §gs{qq{_foo_c\\t.expr\\nbar\\t.larg\\tbar.t\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.larg_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.larg_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.larg_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr.larg_input	.gvar
k	.alloc	_test.parse_expr.larg_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_expr.larg_input	k
	.app	_test.parse_expr.larg_label	test
	.enter	test.property.label

_test.parse_expr.larg_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.larg_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.larg_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.larg_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
list.arg.ty	.tylet	list.t	gsdl.ags.codeitem.arg.t
test.property.false	.gvar
_test.parse_expr.larg_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.arg.fmtgs	.gvar
list.:	.gvar
_test.parse_expr.larg_k_bar.t.s	.gvar
bool.true	.gvar
_test.parse_expr.larg_k_bar.s	.gvar
_test.parse_expr.larg_k_tyargs	.gvar
list.nil	.gvar
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.larg_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	string.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
args			.lfield	args	ds
args.≡			.apply	list.≡	gsdl.ags.codeitem.arg.t	|	gsdl.ags.codeitem.arg.≡
args.fmtgs			.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.arg.t	|	gsdl.ags.codeitem.arg.fmtgs
arg0			.lrecord	gstype	_test.parse_expr.larg_k_bar.t.s	lifted	bool.true	name	_test.parse_expr.larg_k_bar.s	tyargs	_test.parse_expr.larg_k_tyargs
nil			.apply	list.nil	gsdl.ags.codeitem.arg.t
expected			.apply	list.:	gsdl.ags.codeitem.arg.t	|	arg0	nil
			.app	args.≡	args.fmtgs	args	expected
			.enter	test.assert.eq	list.arg.ty

# §subsection §ags{.forcecont} Code Items

_test.parse_forcecont.items_c	.expr
test.all	.gvar
_tests.parse_forcecont.items	.gvar
	.app	_tests.parse_forcecont.items
	.enter	test.all

# §subsubsection §gs{qq{_foo_k\\t.forcecont\\nx0\\t.karg\\tx.u\\n\\t.enter\\ty\\n} =~ parser}

_test.parse_forcecont_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_forcecont_k_c	.subcode
test.property.label	.gvar
_test.parse_forcecont_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_forcecont_input	.gvar
k	.alloc	_test.parse_forcecont_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_forcecont_input	k
	.app	_test.parse_forcecont_label	test
	.enter	test.property.label

_test.parse_forcecont_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.ags.codeitem.fv.t	.tygvar
string.t	.tygvar
test.assert.eq	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.fmtgs	.gvar
gsdl.ags.codeitem.forcecont	.gvar
_test.parse_forcecont_k_foo.k.s	.gvar
_test.parse_forcecont_k_x.u.s	.gvar
_test.parse_forcecont_k_x0.s	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.parse_forcecont_k_y.s	.gvar
ci	.larg	gsdl.ags.codeitem.t
pos	.undefined	gsdl.sourcepos.t
nil.fvs	.apply	list.nil	gsdl.ags.codeitem.fv.t
nil	.apply	list.nil	string.t
karg	.lrecord	gstype	_test.parse_forcecont_k_x.u.s	name	_test.parse_forcecont_k_x0.s	tyargs	nil
decls	.lrecord	fvs	nil.fvs	gvars	nil	karg	karg	tygvars	nil
e	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.parse_forcecont_k_y.s	nil
expected	.apply	gsdl.ags.codeitem.forcecont	|	pos	_test.parse_forcecont_k_foo.k.s	decls	e
	.app	gsdl.ags.codeitem.≡	gsdl.ags.codeitem.fmtgs	ci	expected
	.enter	test.assert.eq	gsdl.ags.codeitem.t

# §subsubsection §ags{.forcecont}s with §ags{.fv}s

_test.parse_forcecont.fv_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_forcecont.fv_k_c	.subcode
test.property.label	.gvar
_test.parse_forcecont.fv_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_forcecont.fv_input	.gvar
k	.alloc	_test.parse_forcecont.fv_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_forcecont.fv_input	k
	.app	_test.parse_forcecont.fv_label	test
	.enter	test.property.label

_test.parse_forcecont.fv_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
test.true	.gvar
ci	.larg	gsdl.ags.codeitem.t
	.enter	test.true

# §subsection String Code Expressions

_test.parse_exprs_c	.expr
test.all	.gvar
_tests.parse_exprs	.gvar
	.app	_tests.parse_exprs
	.enter	test.all

# §subsubsection §gs{qq{\\t.force\\t_foo_k\\n\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.force_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.force_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.force_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.force_input	.gvar
k	.alloc	_test.parse_expr.force_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.expr.parser	_test.parse_expr.force_input	k
	.app	_test.parse_expr.force_label	test
	.enter	test.property.label

_test.parse_expr.force_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.force_k_k	.subcode
gsdl.ags.codeitem.expr.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.expr.t
	.force	_test.parse_expr.force_k_k
	.coerce	gsdl.ags.codeitem.expr.t.out
	.enter	ci

_test.parse_expr.force_k_k	.forcecont
gsdl.ags.codeitem.expr.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
test.property.false	.gvar
_test.parse_expr.force_k_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
string.≡	.gvar
string.fmtgs	.gvar
_test.parse_expr.force_k_co.expected.s	.gvar
ci0	.karg	gsdl.ags.codeitem.expr.prim.u
	.danalyze	ci0	force
		.default
			.app	_test.parse_expr.force_k_k_wrong.constr.s
			.enter	test.property.false
		.case	force
pos0		.fkarg	0	gsdl.sourcepos.t
co		.fkarg	1	string.t
e		.fkarg	2	gsdl.ags.codeitem.expr.t
			.app	string.≡	string.fmtgs	co	_test.parse_expr.force_k_co.expected.s
			.enter	test.assert.eq	string.t

# §subsubsection §gs{qq{\\t.coerce\\tbar.t.out\\n\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.coerce_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.coerce_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.coerce_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.coerce_input	.gvar
k	.alloc	_test.parse_expr.coerce_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.expr.parser	_test.parse_expr.coerce_input	k
	.app	_test.parse_expr.coerce_label	test
	.enter	test.property.label

_test.parse_expr.coerce_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.coerce_k_k	.subcode
gsdl.ags.codeitem.expr.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.expr.t
	.force	_test.parse_expr.coerce_k_k
	.coerce	gsdl.ags.codeitem.expr.t.out
	.enter	ci

_test.parse_expr.coerce_k_k	.forcecont
gsdl.ags.codeitem.expr.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
test.property.false	.gvar
_test.parse_expr.coerce_k_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
string.≡	.gvar
string.fmtgs	.gvar
_test.parse_expr.coerce_k_co.expected.s	.gvar
ci0	.karg	gsdl.ags.codeitem.expr.prim.u
	.danalyze	ci0	coerce
		.default
			.app	_test.parse_expr.coerce_k_k_wrong.constr.s
			.enter	test.property.false
		.case	coerce
pos		.fkarg	0	gsdl.sourcepos.t
co		.fkarg	1	string.t
coas		.fkarg	2	list.t	string.t
e		.fkarg	3	gsdl.ags.codeitem.expr.t
			.app	string.≡	string.fmtgs	co	_test.parse_expr.coerce_k_co.expected.s
			.enter	test.assert.eq	string.t

# §subsubsection §gs{qq{\\t.app\\tbar\\n\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.app_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.app_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.app_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.app_input	.gvar
k	.alloc	_test.parse_expr.app_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.expr.parser	_test.parse_expr.app_input	k
	.app	_test.parse_expr.app_label	test
	.enter	test.property.label

_test.parse_expr.app_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.app_k_k	.subcode
gsdl.ags.codeitem.expr.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.expr.t
	.force	_test.parse_expr.app_k_k
	.coerce	gsdl.ags.codeitem.expr.t.out
	.enter	ci

_test.parse_expr.app_k_k	.forcecont
gsdl.ags.codeitem.expr.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.string.ty	.tylet	list.t	string.t
test.property.false	.gvar
_test.parse_expr.app_k_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.app_k_as.expected	.gvar
ci0	.karg	gsdl.ags.codeitem.expr.prim.u
	.danalyze	ci0	app
		.default
			.app	_test.parse_expr.app_k_k_wrong.constr.s
			.enter	test.property.false
		.case	app
pos		.fkarg	0	gsdl.sourcepos.t
as		.fkarg	1	list.t	string.t
e		.fkarg	2	gsdl.ags.codeitem.expr.t
list.string.≡			.apply	list.≡	string.t	|	string.≡
list.string.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	list.string.≡	list.string.fmtgs	as	_test.parse_expr.app_k_as.expected
			.enter	test.assert.eq	list.string.ty

# §subsubsection §gs{qq{\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.enter_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.enter_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.enter_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.enter_input	.gvar
k	.alloc	_test.parse_expr.enter_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.expr.parser	_test.parse_expr.enter_input	k
	.app	_test.parse_expr.enter_label	test
	.enter	test.property.label

_test.parse_expr.enter_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
string.t	.tygvar
gsdl.sourcepos.t	.tygvar	# Temp
test.assert.eq	.gvar
gsdl.ags.codeitem.expr.≡	.gvar
gsdl.ags.codeitem.expr.fmtgs	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.parse_expr.enter_k_foo.s	.gvar
list.nil	.gvar
actual	.larg	gsdl.ags.codeitem.expr.t
pos	.undefined	gsdl.sourcepos.t
nil	.apply	list.nil	string.t
expected	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.parse_expr.enter_k_foo.s	nil
	.app	gsdl.ags.codeitem.expr.≡	gsdl.ags.codeitem.expr.fmtgs	 actual	expected
	.enter	test.assert.eq	gsdl.ags.codeitem.expr.t

# §subsubsection §gs{qq{\\t.analyze\\tfoo\\n} =~ expr.parser}

_test.parse_expr.analyze_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.analyze_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.analyze_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.analyze_input	.gvar
k	.alloc	_test.parse_expr.analyze_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.expr.parser	_test.parse_expr.analyze_input	k
	.app	_test.parse_expr.analyze_label	test
	.enter	test.property.label

_test.parse_expr.analyze_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
e	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

# §subsubsection §gs{qq{\\t.analyze\\tfoo\\tbar\\n\\t.case\\tbar\\nbaz\\t.apply\\tf\\tx.t\\n\\t.enter\\tbaz\\n} =~ expr.parser}

_test.parse_expr.gsanalyze.apply_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.gsanalyze.apply_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.gsanalyze.apply_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.gsanalyze.apply_input	.gvar
k	.alloc	_test.parse_expr.gsanalyze.apply_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.expr.parser	_test.parse_expr.gsanalyze.apply_input	k
	.app	_test.parse_expr.gsanalyze.apply_label	test
	.enter	test.property.label

_test.parse_expr.gsanalyze.apply_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
test.true	.gvar
e	.larg	gsdl.ags.codeitem.expr.t
	.enter	test.true

# §section §gs{≡}

_test.eq_c	.expr
test.all	.gvar
_tests.eq	.gvar
	.app	_tests.eq
	.enter	test.all

# §subsection §gs{ags.codeitem.≡ expr expr} with different §ags{.tygvar}s

_test.eq_codeitem.expr.diff.tygvars_c	.expr
string.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
gsdl.sourcepos.t	.tygvar	# Temp
test.property.label	.gvar
_test.eq_codeitem.expr.diff.tygvars_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.tygvars_false.s	.gvar
_test.eq_codeitem.expr.diff.tygvars_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_test.eq_codeitem.expr.diff.tygvars_foo.c.s	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.tygvars_bar.s	.gvar
list.:	.gvar
_test.eq_codeitem.expr.diff.tygvars_foo.s	.gvar
pos	.undefined	gsdl.sourcepos.t
nil	.apply	list.nil	string.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
decls0	.lrecord	args	args.nil	cogvars	nil	gvars	nil	subcodes	nil	tygvs	nil
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.tygvars_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.tygvars_foo.c.s decls0	exp
tygvs1	.apply	list.:	string.t	|	_test.eq_codeitem.expr.diff.tygvars_foo.s	nil
decls1	.lrecord	args	args.nil	cogvars	nil	gvars	nil	subcodes	nil	tygvs	tygvs1
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.tygvars_foo.c.s decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.tygvars_false.s	_test.eq_codeitem.expr.diff.tygvars_true.s	eq
	.app	_test.eq_codeitem.expr.diff.tygvars_label	test
	.enter	test.property.label

# §subsection §gs{ags.codeitem.≡ expr expr} with different §ags{.subcode}s

_test.eq_codeitem.expr.diff.subcodes_c	.expr
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
test.property.label	.gvar
_test.eq_codeitem.expr.diff.subcodes_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.subcodes_false.s	.gvar
_test.eq_codeitem.expr.diff.subcodes_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_test.eq_codeitem.expr.diff.subcodes_foo.c.s	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.subcodes_bar.s	.gvar
list.:	.gvar
_test.eq_codeitem.expr.diff.subcodes_foo.s	.gvar
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
nil	.apply	list.nil	string.t
decls0	.lrecord	args	args.nil	cogvars	nil	gvars	nil	subcodes	nil	tygvs	nil
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.subcodes_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.subcodes_foo.c.s decls0	exp
subcodes1	.apply	list.:	string.t	|	_test.eq_codeitem.expr.diff.subcodes_foo.s	nil
decls1	.lrecord	args	args.nil	cogvars	nil	gvars	nil	subcodes	subcodes1	tygvs	nil
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.subcodes_foo.c.s decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.subcodes_false.s	_test.eq_codeitem.expr.diff.subcodes_true.s	eq
	.app	_test.eq_codeitem.expr.diff.subcodes_label	test
	.enter	test.property.label

# §subsection §gs{ags.codeitem.≡ expr expr} with different §ags{.cogvar}s

_test.eq_codeitem.expr.diff.cogvars_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
string.t	.tygvar
test.property.label	.gvar
_test.eq_codeitem.expr.diff.cogvars_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.cogvars_false.s	.gvar
_test.eq_codeitem.expr.diff.cogvars_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_test.eq_codeitem.expr.diff.cogvars_foo.c.s	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.cogvars_bar.s	.gvar
list.:	.gvar
_test.eq_codeitem.expr.diff.cogvars_foo.s	.gvar
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
nil	.apply	list.nil	string.t
decls0	.lrecord	args	args.nil	cogvars	nil	gvars	nil	subcodes	nil	tygvs	nil
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.cogvars_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.cogvars_foo.c.s decls0	exp
cogvars1	.apply	list.:	string.t	|	_test.eq_codeitem.expr.diff.cogvars_foo.s	nil
decls1	.lrecord	args	args.nil	cogvars	cogvars1	gvars	nil	subcodes	nil	tygvs	nil
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.cogvars_foo.c.s decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.cogvars_false.s	_test.eq_codeitem.expr.diff.cogvars_true.s	eq
	.app	_test.eq_codeitem.expr.diff.cogvars_label	test
	.enter	test.property.label

# §subsection §gs{ags.codeitem.≡ expr expr} with different §ags{.gvar}s

_test.eq_codeitem.expr.diff.gvars_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
string.t	.tygvar
test.property.label	.gvar
_test.eq_codeitem.expr.diff.gvars_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.gvars_false.s	.gvar
_test.eq_codeitem.expr.diff.gvars_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_test.eq_codeitem.expr.diff.gvars_foo.c.s	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.gvars_bar.s	.gvar
list.:	.gvar
_test.eq_codeitem.expr.diff.gvars_foo.s	.gvar
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
nil	.apply	list.nil	string.t
decls0	.lrecord	args	args.nil	cogvars	nil	gvars	nil	subcodes	nil	tygvs	nil
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.gvars_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.gvars_foo.c.s decls0	exp
gvars1	.apply	list.:	string.t	|	_test.eq_codeitem.expr.diff.gvars_foo.s	nil
decls1	.lrecord	args	args.nil	cogvars	nil	gvars	gvars1	subcodes	nil	tygvs	nil
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.gvars_foo.c.s decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.gvars_false.s	_test.eq_codeitem.expr.diff.gvars_true.s	eq
	.app	_test.eq_codeitem.expr.diff.gvars_label	test
	.enter	test.property.label

# §subsection §gs{ags.codeitem.≡ expr expr} with different args

_test.eq_codeitem.expr.diff.args_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.ags.codeitem.arg.t	.tygvar
string.t	.tygvar
test.property.label	.gvar
_test.eq_codeitem.expr.diff.args_label	.gvar
test.deny	.gvar
_test.eq_codeitem.expr.diff.args_false.s	.gvar
_test.eq_codeitem.expr.diff.args_true.s	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.expr	.gvar
_test.eq_codeitem.expr.diff.args_foo.c.s	.gvar
list.nil	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.eq_codeitem.expr.diff.args_foo.c.s	.gvar
_test.eq_codeitem.expr.diff.args_bar.s	.gvar
list.:	.gvar
_test.eq_codeitem.expr.diff.args_x.t.s	.gvar
bool.true	.gvar
_test.eq_codeitem.expr.diff.args_x.s	.gvar
pos	.undefined	gsdl.sourcepos.t
args.nil	.apply	list.nil	gsdl.ags.codeitem.arg.t
nil	.apply	list.nil	string.t
decls0	.lrecord	args	args.nil	cogvars	nil	gvars	nil	subcodes	nil	tygvs	nil
exp	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.eq_codeitem.expr.diff.args_bar.s	nil
ci0	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.args_foo.c.s decls0	exp
arg0	.lrecord	gstype	_test.eq_codeitem.expr.diff.args_x.t.s	lifted	bool.true	name	_test.eq_codeitem.expr.diff.args_x.s	tyargs	nil
args1	.apply	list.:	gsdl.ags.codeitem.arg.t	|	arg0	args.nil
decls1	.lrecord	args	args1	cogvars	nil	gvars	nil	subcodes	nil	tygvs	nil
ci1	.apply	gsdl.ags.codeitem.expr	|	pos	_test.eq_codeitem.expr.diff.args_foo.c.s decls1	exp
eq	.apply	gsdl.ags.codeitem.≡	|	ci0	ci1
test	.apply	test.deny	|	_test.eq_codeitem.expr.diff.args_false.s	_test.eq_codeitem.expr.diff.args_true.s	eq
	.app	_test.eq_codeitem.expr.diff.args_label	test
	.enter	test.property.label

# §subsection §gs{〈 'name ∝ qq{foo}; 'lifted ∝ true; 'ty ∝ qq{bar.t}; 〉 ≡ 〈 'name ∝ qq{baz}; 'lifted ∝ true; 'ty ∝ qq{bar.t}; 〉}

_test.eq_arg.diff.name_c	.expr
string.t	.tygvar
test.property.label	.gvar
_test.eq_arg.diff.name_label	.gvar
test.deny	.gvar
_test.eq_arg.diff.name_false	.gvar
_test.eq_arg.diff.name_true	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
_test.eq_arg.diff.name_bar.t.s	.gvar
bool.true	.gvar
_test.eq_arg.diff.name_foo.s	.gvar
list.nil	.gvar
_test.eq_arg.diff.name_baz.s	.gvar
nil	.apply	list.nil	string.t
arg0	.lrecord	gstype	_test.eq_arg.diff.name_bar.t.s	lifted	bool.true	name	_test.eq_arg.diff.name_foo.s	tyargs	nil
arg1	.lrecord	gstype	_test.eq_arg.diff.name_bar.t.s	lifted	bool.true	name	_test.eq_arg.diff.name_baz.s	tyargs	nil
eq	.apply	gsdl.ags.codeitem.arg.≡	|	arg0	arg1
test	.apply	test.deny	|	_test.eq_arg.diff.name_false	_test.eq_arg.diff.name_true	eq
	.app	_test.eq_arg.diff.name_label	test
	.enter	test.property.label

# §subsection §gs{〈 'name ∝ qq{foo}; 'lifted ∝ true; 'ty ∝ qq{bar.t}; 〉  〈 'name ∝ qq{foo}; 'lifted ∝ false; 'ty ∝ qq{bar.t}; 〉}

_test.eq_arg.diff.lifted_c	.expr
string.t	.tygvar
test.property.label	.gvar
_test.eq_arg.diff.lifted_label	.gvar
test.deny	.gvar
_test.eq_arg.diff.lifted_false	.gvar
_test.eq_arg.diff.lifted_true	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
_test.eq_arg.diff.lifted_bar.t.s	.gvar
bool.true	.gvar
_test.eq_arg.diff.lifted_foo.s	.gvar
list.nil	.gvar
bool.false	.gvar
nil	.apply	list.nil	string.t
arg0	.lrecord	gstype	_test.eq_arg.diff.lifted_bar.t.s	lifted	bool.true	name	_test.eq_arg.diff.lifted_foo.s	tyargs	nil
arg1	.lrecord	gstype	_test.eq_arg.diff.lifted_bar.t.s	lifted	bool.false	name	_test.eq_arg.diff.lifted_foo.s	tyargs	nil
eq	.apply	gsdl.ags.codeitem.arg.≡	|	arg0	arg1
test	.apply	test.deny	|	_test.eq_arg.diff.lifted_false	_test.eq_arg.diff.lifted_true	eq
	.app	_test.eq_arg.diff.lifted_label	test
	.enter	test.property.label

# §subsection §gs{〈 'name ∝ qq{foo}; 'lifted ∝ true; 'ty ∝ qq{bar.t}; 〉 ≡ 〈 'name ∝ qq{foo}; 'lifted ∝ true; 'ty ∝ qq{baz.t}; 〉}

_test.eq_arg.diff.ty_c	.expr
string.t	.tygvar
test.property.label	.gvar
_test.eq_arg.diff.ty_label	.gvar
test.deny	.gvar
_test.eq_arg.diff.ty_false	.gvar
_test.eq_arg.diff.ty_true	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
_test.eq_arg.diff.ty_bar.t.s	.gvar
bool.true	.gvar
_test.eq_arg.diff.ty_foo.s	.gvar
list.nil	.gvar
_test.eq_arg.diff.ty_baz.t.s	.gvar
nil	.apply	list.nil	string.t
arg0	.lrecord	gstype	_test.eq_arg.diff.ty_bar.t.s	lifted	bool.true	name	_test.eq_arg.diff.ty_foo.s	tyargs	nil
arg1	.lrecord	gstype	_test.eq_arg.diff.ty_baz.t.s	lifted	bool.true	name	_test.eq_arg.diff.ty_foo.s	tyargs	nil
eq	.apply	gsdl.ags.codeitem.arg.≡	|	arg0	arg1
test	.apply	test.deny	|	_test.eq_arg.diff.ty_false	_test.eq_arg.diff.ty_true	eq
	.app	_test.eq_arg.diff.ty_label	test
	.enter	test.property.label

# §subsection §gs{〈 'name ∝ qq{foo}; 'lifted ∝ true; 'gstype ∝ qq{bar.t}; 'tyargs ∝ []; 〉 ≡ 〈 'name ∝ qq{foo}; 'lifted ∝ true; 'gstype ∝ qq{bar.t}; 'tyargs ∝ [ qq{quux.t}, ]; 〉}

_test.eq_arg.diff.tyargs_c	.expr
string.t	.tygvar
test.property.label	.gvar
_test.eq_arg.diff.tyargs_label	.gvar
test.deny	.gvar
_test.eq_arg.diff.tyargs_false	.gvar
_test.eq_arg.diff.tyargs_true	.gvar
gsdl.ags.codeitem.arg.≡	.gvar
_test.eq_arg.diff.tyargs_bar.t.s	.gvar
bool.true	.gvar
_test.eq_arg.diff.tyargs_foo.s	.gvar
list.nil	.gvar
list.:	.gvar
_test.eq_arg.diff.tyargs_quux.t.s	.gvar
nil	.apply	list.nil	string.t
arg0	.lrecord	gstype	_test.eq_arg.diff.tyargs_bar.t.s	lifted	bool.true	name	_test.eq_arg.diff.tyargs_foo.s	tyargs	nil
tyargs1	.apply	list.:	string.t	|	_test.eq_arg.diff.tyargs_quux.t.s	nil
arg1	.lrecord	gstype	_test.eq_arg.diff.tyargs_bar.t.s	lifted	bool.true	name	_test.eq_arg.diff.tyargs_foo.s	tyargs	tyargs1
eq	.apply	gsdl.ags.codeitem.arg.≡	|	arg0	arg1
test	.apply	test.deny	|	_test.eq_arg.diff.tyargs_false	_test.eq_arg.diff.tyargs_true	eq
	.app	_test.eq_arg.diff.tyargs_label	test
	.enter	test.property.label
