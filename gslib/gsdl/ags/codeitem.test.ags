	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.parse

# §section Parsers

_test.parse	.closure	_test.parse_c
_tests.parse	.list	test.property.t	_test.parse_segment.empty	_test.parse_expr	_test.parse_expr.tygvar	_test.parse_expr.enter

_test.parse_segment.empty	.closure	_test.parse_segment.empty_c
_test.parse_segment.empty_label	.string	qq{\\t.code\\n}\s=~\ssegment.parser
_test.parse_segment.empty_input	.string	\t.code\n

_test.parse_expr	.closure	_test.parse_expr_c
_test.parse_expr_label	.string	qq{_foo_c\\t.expr\\n\\t.enter\\tbar\\n}\s=~\sparser
_test.parse_expr_input	.string	_foo_c\t.expr\n\t.enter\tbar\n
_test.parse_expr_k_foo.c.s	.string	_foo_c
_test.parse_expr_k_bar.s	.string	bar

_test.parse_expr.tygvar	.closure	_test.parse_expr.tygvar_c
_test.parse_expr.tygvar_label	.string	qq{_foo_c\\t.expr\\nbar.t\\t.tygvar\\n\\t.enter\\tbaz\\n}\s=~\sparser
_test.parse_expr.tygvar_input	.string	_foo_c\t.expr\nbar.t\t.tygvar\n\t.enter\tbaz\n
_test.parse_expr.tygvar_k_wrong.constr.s	.string	Parse\sresult\snot\san\s.expr
_test.parse_expr.tygvar_k_tygvs.expected	.list	string.t	_test.parse_expr.tygvar_k_tygvs.expected_0
_test.parse_expr.tygvar_k_tygvs.expected_0	.string	bar.t

_test.parse_expr.enter	.closure	_test.parse_expr.enter_c
_test.parse_expr.enter_label	.string	qq{\\t.enter\\tfoo\\n}\s=~\sexpr.parser
_test.parse_expr.enter_input	.string	\t.enter\tfoo\n
_test.parse_expr.enter_k_foo.s	.string	foo

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section Parsers

_test.parse_c	.expr
test.all	.gvar
_tests.parse	.gvar
	.app	_tests.parse
	.enter	test.all

# §section §gs{qq{\\t.code\\n}=~ segment.parser}

_test.parse_segment.empty_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
codesegment_ty	.tylet	list.t	gsdl.ags.codeitem.t
_test.parse_segment.empty_k_c	.subcode
test.property.label	.gvar
_test.parse_segment.empty_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.segment.parser	.gvar
_test.parse_segment.empty_input	.gvar
k	.alloc	_test.parse_segment.empty_k_c
test	.apply	parser.test.assert.passes	rune.t	codesegment_ty	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.segment.parser	_test.parse_segment.empty_input	k
	.app	_test.parse_segment.empty_label	test
	.enter	test.property.label

_test.parse_segment.empty_k_c	.expr
list.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
codesegment_ty	.tylet	list.t	gsdl.ags.codeitem.t
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.codeitem.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.codeitem.fmtgs	.gvar
list.nil	.gvar
cos	.larg	list.t	gsdl.ags.codeitem.t
cs.≡	.apply	list.≡	gsdl.ags.codeitem.t	|	gsdl.ags.codeitem.≡
cs.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.codeitem.t	|	gsdl.ags.codeitem.fmtgs
nil	.apply	list.nil	gsdl.ags.codeitem.t
	.app	cs.≡	cs.fmtgs	cos	nil
	.enter	test.assert.eq	codesegment_ty

# §section §gs{qq{_foo_c\\t.expr\\n\\t.enter\\tbar\\n} =~ parser}

_test.parse_expr_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr_k_c	.subcode
test.property.label	.gvar
_test.parse_expr_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr_input	.gvar
k	.alloc	_test.parse_expr_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_expr_input	k
	.app	_test.parse_expr_label	test
	.enter	test.property.label

_test.parse_expr_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
string.t	.tygvar
gsdl.sourcepos.t	.tygvar	# Temp
test.assert.eq	.gvar
gsdl.ags.codeitem.≡	.gvar
gsdl.ags.codeitem.fmtgs	.gvar
gsdl.ags.codeitem.expr	.gvar
_test.parse_expr_k_foo.c.s	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.parse_expr_k_bar.s	.gvar
list.nil	.gvar
actual	.larg	gsdl.ags.codeitem.t
pos	.undefined	gsdl.sourcepos.t
tygvs	.apply	list.nil	string.t
ds	.lrecord	tygvs	tygvs
tyas	.apply	list.nil	string.t
expected.expr	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.parse_expr_k_bar.s	tyas
expected	.apply	gsdl.ags.codeitem.expr	|	pos	_test.parse_expr_k_foo.c.s	ds	expected.expr
	.app	gsdl.ags.codeitem.≡	gsdl.ags.codeitem.fmtgs	actual	expected
	.enter	test.assert.eq	gsdl.ags.codeitem.t

# §section §gs{qq{_foo_c\\t.expr\\nbar.t\\t.tygvar\\n\\t.enter\\tbaz\\n} =~ parser}

_test.parse_expr.tygvar_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.tygvar_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.tygvar_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.parser	.gvar
_test.parse_expr.tygvar_input	.gvar
k	.alloc	_test.parse_expr.tygvar_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.parser	_test.parse_expr.tygvar_input	k
	.app	_test.parse_expr.tygvar_label	test
	.enter	test.property.label

_test.parse_expr.tygvar_k_c	.expr
gsdl.ags.codeitem.t	.tygvar
_test.parse_expr.tygvar_k_k	.subcode
gsdl.ags.codeitem.t.out	.cogvar
ci	.larg	gsdl.ags.codeitem.t
	.force	_test.parse_expr.tygvar_k_k
	.coerce	gsdl.ags.codeitem.t.out
	.enter	ci

_test.parse_expr.tygvar_k_k	.forcecont
gsdl.ags.codeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
string.t	.tygvar
_gsdl.ags.codeitem.prim.u_expr_decls_ty	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
list.t	.tygvar
list.string.ty	.tylet	list.t	string.t
test.property.false	.gvar
_test.parse_expr.tygvar_k_wrong.constr.s	.gvar
test.assert.eq	.gvar
list.≡	.gvar
string.≡	.gvar
list.fmtgs.byDefault	.gvar
string.fmtgs	.gvar
_test.parse_expr.tygvar_k_tygvs.expected	.gvar
ci0	.karg	gsdl.ags.codeitem.prim.u
	.danalyze	ci0	expr
		.default
			.app	_test.parse_expr.tygvar_k_wrong.constr.s
			.enter	test.property.false
		.case	expr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	string.t
ds		.fkarg	2	_gsdl.ags.codeitem.prim.u_expr_decls_ty
e		.fkarg	3	gsdl.ags.codeitem.expr.t
tygvs			.lfield	tygvs	ds
tygvs.≡			.apply	list.≡	string.t	|	string.≡
tygvs.fmtgs			.apply	list.fmtgs.byDefault	string.t	|	string.fmtgs
			.app	tygvs.≡	tygvs.fmtgs	tygvs	_test.parse_expr.tygvar_k_tygvs.expected
			.enter	test.assert.eq	list.string.ty

# §section §gs{qq{\\t.enter\\tfoo\\n} =~ expr.parser}

_test.parse_expr.enter_c	.expr
rune.t	.tygvar
gsdl.ags.codeitem.expr.t	.tygvar
_test.parse_expr.enter_k_c	.subcode
test.property.label	.gvar
_test.parse_expr.enter_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.codeitem.expr.parser	.gvar
_test.parse_expr.enter_input	.gvar
k	.alloc	_test.parse_expr.enter_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.codeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.codeitem.expr.parser	_test.parse_expr.enter_input	k
	.app	_test.parse_expr.enter_label	test
	.enter	test.property.label

_test.parse_expr.enter_k_c	.expr
gsdl.ags.codeitem.expr.t	.tygvar
string.t	.tygvar
gsdl.sourcepos.t	.tygvar	# Temp
test.assert.eq	.gvar
gsdl.ags.codeitem.expr.≡	.gvar
gsdl.ags.codeitem.expr.fmtgs	.gvar
gsdl.ags.codeitem.expr.enter	.gvar
_test.parse_expr.enter_k_foo.s	.gvar
list.nil	.gvar
actual	.larg	gsdl.ags.codeitem.expr.t
pos	.undefined	gsdl.sourcepos.t
nil	.apply	list.nil	string.t
expected	.apply	gsdl.ags.codeitem.expr.enter	|	pos	_test.parse_expr.enter_k_foo.s	nil
	.app	gsdl.ags.codeitem.expr.≡	gsdl.ags.codeitem.expr.fmtgs	 actual	expected
	.enter	test.assert.eq	gsdl.ags.codeitem.expr.t
