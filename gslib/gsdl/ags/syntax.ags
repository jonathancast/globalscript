	.prefix

	.data

gsdl.ags.syntax.whitespace	.closure	_gsdl.ags.syntax.whitespace_c
_gsdl.ags.syntax.whitespace_re	.regex	\n§*	_gsdl.ags.syntax.whitespace_re_blank
_gsdl.ags.syntax.whitespace_re_blank	.regex	\n|\t*\h[^\n]*\n

gsdl.ags.syntax.columnsep	.closure	_gsdl.ags.syntax.columnsep_c
_gsdl.ags.syntax.columnsep_re	.regex	[\s\t]\t*

gsdl.ags.syntax.separator	.closure	_gsdl.ags.syntax.separator_c
_gsdl.ags.syntax.separator_pipe.re	.regex	\|

gsdl.ags.syntax.id	.closure	_gsdl.ags.syntax.id_c
_gsdl.ags.syntax.id_re	.regex	§§§*	_gsdl.ags.syntax.id_underscore.re	_gsdl.ags.syntax.id_id.re	_gsdl.ags.syntax.id_t.re
_gsdl.ags.syntax.id_underscore.re	.regex	_|
_gsdl.ags.syntax.id_id.re	.regex	§§*	_gsdl.ags.syntax.id_id_component.re	_gsdl.ags.syntax.id_id_t.re
_gsdl.ags.syntax.id_id_t.re	.regex	.§	_gsdl.ags.syntax.id_id_component.re
_gsdl.ags.syntax.id_id_component.re	.regex	[a-zα-ω][a-z0-9A-Z]*|§§*|[0-9]	_gsdl.ags.syntax.id_id_component.re.symbol	_gsdl.ags.syntax.id_id_component.re.symbol
_gsdl.ags.syntax.id_id_component.re.symbol	.regex	[~!@\h$%^&*-+=|:<>?/≡≠≯≮]
_gsdl.ags.syntax.id_t.re	.regex	_§	_gsdl.ags.syntax.id_id.re

gsdl.ags.syntax.keywords	.list	string.t	_gsdl.ags.syntax.keywords_0
_gsdl.ags.syntax.keywords_0	.string	|

gsdl.ags.syntax.stringliteral	.closure	_gsdl.ags.syntax.stringliteral_c
_gsdl.ags.syntax.stringliteral_re	.regex	[^\s\t\n][^\s\t\n]*

	.code

# §section §gs{gsdl.ags.syntax.whitespace}

_gsdl.ags.syntax.whitespace_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.whitespace_re	.gvar
	.app	rune.compare	_gsdl.ags.syntax.whitespace_re
	.enter	parser.match	rune.t

# §section §gs{gsdl.ags.syntax.columnsep}

_gsdl.ags.syntax.columnsep_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.columnsep_re	.gvar
	.app	rune.compare	_gsdl.ags.syntax.columnsep_re
	.enter	parser.match	rune.t

# §section §gs{gsdl.ags.syntax.separator}

_gsdl.ags.syntax.separator_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.separator_pipe.re	.gvar
	.app	rune.compare	_gsdl.ags.syntax.separator_pipe.re
	.enter	parser.match	rune.t

# §section §gs{gsdl.ags.syntax.id}

_gsdl.ags.syntax.id_c	.expr
rune.t	.tygvar
string.t	.tygvar
_gsdl.ags.syntax.id_k_c	.subcode
parser.>>=	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.id_re	.gvar
p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.ags.syntax.id_re
k	.alloc	_gsdl.ags.syntax.id_k_c
	.app	p	k
	.enter	parser.>>=	rune.t	string.t	string.t

_gsdl.ags.syntax.id_k_c	.expr
string.t	.tygvar
_gsdl.ags.syntax.id_k_k	.subcode
bool.t.out	.cogvar
list.elem	.gvar
string.≡	.gvar
gsdl.ags.syntax.keywords	.gvar
v	.larg	string.t
	.force	_gsdl.ags.syntax.id_k_k
	.coerce	bool.t.out
	.app	string.≡	v	gsdl.ags.syntax.keywords
	.enter	list.elem	string.t

_gsdl.ags.syntax.id_k_k	.forcecont
string.t	.tygvar
bool.prim.u	.tygvar
rune.t	.tygvar
parser.unit	.gvar
parser.fail	.gvar
v	.fv	string.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
			.app	v
			.enter	parser.unit	rune.t	string.t
		.case	true
			.enter	parser.fail	rune.t	string.t

# §section §gs{gsdl.ags.syntax.stringliteral}

_gsdl.ags.syntax.stringliteral_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.stringliteral_re	.gvar
	.app	rune.compare	_gsdl.ags.syntax.stringliteral_re
	.enter	parser.match	rune.t
