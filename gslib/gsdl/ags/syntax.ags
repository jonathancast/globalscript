	.prefix

	.data

gsdl.ags.syntax.whitespace	.closure	_gsdl.ags.syntax.whitespace_c
_gsdl.ags.syntax.whitespace_re	.regex	\n§*	_gsdl.ags.syntax.whitespace_re_blank
_gsdl.ags.syntax.whitespace_re_blank	.regex	\n|\t*\h[^\n]*\n

gsdl.ags.syntax.columnsep	.closure	_gsdl.ags.syntax.columnsep_c
_gsdl.ags.syntax.columnsep_re	.regex	[\s\t]\t*

gsdl.ags.syntax.separator	.closure	_gsdl.ags.syntax.separator_c
_gsdl.ags.syntax.separator_pipe.re	.regex	\|

gsdl.ags.syntax.id	.closure	_gsdl.ags.syntax.id_c
_gsdl.ags.syntax.id_re	.regex	§§§*	_gsdl.ags.syntax.id_underscore.re	_gsdl.ags.syntax.id_id.re	_gsdl.ags.syntax.id_t.re
_gsdl.ags.syntax.id_underscore.re	.regex	_|
_gsdl.ags.syntax.id_id.re	.regex	§§*	_gsdl.ags.syntax.id_id_component.re	_gsdl.ags.syntax.id_id_t.re
_gsdl.ags.syntax.id_id_t.re	.regex	.§	_gsdl.ags.syntax.id_id_component.re
_gsdl.ags.syntax.id_id_component.re	.regex	[a-zα-ω][a-z0-9A-Z]*|§§*|[0-9]	_gsdl.ags.syntax.id_id_component.re.symbol	_gsdl.ags.syntax.id_id_component.re.symbol
_gsdl.ags.syntax.id_id_component.re.symbol	.regex	[~!@\h$%^&*-+=|:<>?/≡≠≯≮]
_gsdl.ags.syntax.id_t.re	.regex	_§	_gsdl.ags.syntax.id_id.re

gsdl.ags.syntax.var	.closure	_gsdl.ags.syntax.var_c
_gsdl.ags.syntax.var_base.p	.closure	_gsdl.ags.syntax.var_base.p_c
_gsdl.ags.syntax.var_alphanum.re	.regex	[a-zα-ω][a-z0-9A-Z]*
_gsdl.ags.syntax.var_dot.re	.regex	\.
_gsdl.ags.syntax.var_underbar.p	.closure	_gsdl.ags.syntax.var_underbar.p_c
_gsdl.ags.syntax.var_underbar.p_underbar.re	.regex	_

gsdl.ags.syntax.var.print	.closure	_gsdl.ags.syntax.var.print_c
_gsdl.ags.syntax.var.print_w	.closure	_gsdl.ags.syntax.var.print_w_c	_gsdl.ags.syntax.var.print_w_ty

gsdl.ags.syntax.var.component.print	.closure	_gsdl.ags.syntax.var.component.print_c

gsdl.ags.syntax.keywords	.list	string.t	_gsdl.ags.syntax.keywords_0
_gsdl.ags.syntax.keywords_0	.string	|

gsdl.ags.syntax.rune.literal	.closure	_gsdl.ags.syntax.rune.literal_c
gsdl.ags.syntax.rune.literal.re	.regex	[^\\\s\n\t\h]|\\[\\hnst]

gsdl.ags.syntax.stringliteral	.closure	_gsdl.ags.syntax.stringliteral_c
_gsdl.ags.syntax.stringliteral_re	.regex	[^\s\t\n][^\s\t\n]*

	.code

# §section §gs{gsdl.ags.syntax.whitespace}

_gsdl.ags.syntax.whitespace_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.whitespace_re	.gvar
	.app	rune.compare	_gsdl.ags.syntax.whitespace_re
	.enter	parser.match	rune.t

# §section §gs{gsdl.ags.syntax.columnsep}

_gsdl.ags.syntax.columnsep_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.columnsep_re	.gvar
	.app	rune.compare	_gsdl.ags.syntax.columnsep_re
	.enter	parser.match	rune.t

# §section §gs{gsdl.ags.syntax.separator}

_gsdl.ags.syntax.separator_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.separator_pipe.re	.gvar
	.app	rune.compare	_gsdl.ags.syntax.separator_pipe.re
	.enter	parser.match	rune.t

# §section §gs{gsdl.ags.syntax.id}

_gsdl.ags.syntax.id_c	.expr
rune.t	.tygvar
string.t	.tygvar
_gsdl.ags.syntax.id_k_c	.subcode
parser.>>=	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.id_re	.gvar
p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.ags.syntax.id_re
k	.alloc	_gsdl.ags.syntax.id_k_c
	.app	p	k
	.enter	parser.>>=	rune.t	string.t	string.t

_gsdl.ags.syntax.id_k_c	.expr
string.t	.tygvar
_gsdl.ags.syntax.id_k_k	.subcode
bool.t.out	.cogvar
list.elem	.gvar
string.≡	.gvar
gsdl.ags.syntax.keywords	.gvar
v	.larg	string.t
	.force	_gsdl.ags.syntax.id_k_k
	.coerce	bool.t.out
	.app	string.≡	v	gsdl.ags.syntax.keywords
	.enter	list.elem	string.t

_gsdl.ags.syntax.id_k_k	.forcecont
string.t	.tygvar
bool.prim.u	.tygvar
rune.t	.tygvar
parser.unit	.gvar
parser.fail	.gvar
v	.fv	string.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
			.app	v
			.enter	parser.unit	rune.t	string.t
		.case	true
			.enter	parser.fail	rune.t	string.t

# §section §gs{gsdl.ags.syntax.var}

_gsdl.ags.syntax.var_c	.expr
rune.t	.tygvar
gsdl.var.t	.tygvar
parser.<|>	.gvar
_gsdl.ags.syntax.var_base.p	.gvar
_gsdl.ags.syntax.var_underbar.p	.gvar
	.app	_gsdl.ags.syntax.var_base.p	_gsdl.ags.syntax.var_underbar.p
	.enter	parser.<|>	rune.t	gsdl.var.t

_gsdl.ags.syntax.var_base.p_c	.expr
rune.t	.tygvar
gsdl.var.t	.tygvar
gsdl.var.component.t	.tygvar
list.t	.tygvar
string.t	.tygvar
parser.map	.gvar
gsdl.var.basevar	.gvar
parser.lift2	.gvar
list.:	.gvar
gsdl.var.component.alphanum	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.var_alphanum.re	.gvar
parser.many	.gvar
parser.*>	.gvar
_gsdl.ags.syntax.var_dot.re	.gvar
parser.fail	.gvar	# Temp
list.component.ty	.tylet	list.t	gsdl.var.component.t
cons	.apply	list.:	gsdl.var.component.t
alphanum.f	.lifted	gsdl.var.component.alphanum
alphanum.p1	.apply	parser.match	rune.t	|	rune.compare	_gsdl.ags.syntax.var_alphanum.re
alphanum.p	.apply	parser.map	rune.t	string.t	gsdl.var.component.t	|	alphanum.f	alphanum.p1
head.p	.apply	alphanum.p
dot.p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.ags.syntax.var_dot.re
tail.p1	.apply	parser.*>	rune.t	string.t	gsdl.var.component.t	|	dot.p	alphanum.p
tail.p	.apply	parser.many	rune.t	gsdl.var.component.t	|	tail.p1
base.p	.apply	parser.lift2	rune.t	gsdl.var.component.t	list.component.ty	list.component.ty	|	cons	head.p	tail.p
	.app	gsdl.var.basevar	base.p
	.enter	parser.map	rune.t	list.component.ty	gsdl.var.t

_gsdl.ags.syntax.var_underbar.p_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.var.t	.tygvar
string.t	.tygvar
parser.map	.gvar
gsdl.var.constructed	.gvar
natural.1	.gvar
parser.lift2	.gvar
list.:	.gvar
parser.*>	.gvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.var_underbar.p_underbar.re	.gvar
_gsdl.ags.syntax.var_base.p	.gvar
parser.many	.gvar
parser.fail	.gvar	# Temp
list.var.ty	.tylet	list.t	gsdl.var.t
f	.apply	gsdl.var.constructed	|	natural.1
cons	.apply	list.:	gsdl.var.t
underbar.p	.apply	parser.match	rune.t	|	rune.compare	_gsdl.ags.syntax.var_underbar.p_underbar.re
var.p	.apply	parser.*>	rune.t	string.t	gsdl.var.t	|	underbar.p	_gsdl.ags.syntax.var_base.p
vars.p2	.apply	parser.many	rune.t	gsdl.var.t	|	var.p
vars.p1	.apply	parser.lift2	rune.t	gsdl.var.t	list.var.ty	list.var.ty	|	cons	var.p	vars.p2
vars.p	.apply	parser.lift2	rune.t	gsdl.var.t	list.var.ty	list.var.ty	|	cons	var.p	vars.p1
	.app	f	vars.p
	.enter	parser.map	rune.t	list.var.ty	gsdl.var.t

# §section §gs{gsdl.ags.syntax.var.print}

_gsdl.ags.syntax.var.print_c	.expr
gsdl.var.t	.tygvar
bool.prim.u	.tygvar
rune.t	.tygvar
_gsdl.ags.syntax.var.print_w	.gvar
list.nil	.gvar
v	.larg	gsdl.var.t
true	.constr	bool.prim.u	true
nil	.apply	list.nil	rune.t
	.app	v	true	nil
	.enter	_gsdl.ags.syntax.var.print_w

_gsdl.ags.syntax.var.print_w_c	.expr
gsdl.var.t	.tygvar
bool.prim.u	.tygvar
_gsdl.ags.syntax.var.print_w_k	.subcode
gsdl.var.t.out	.cogvar
v	.larg	gsdl.var.t
b	.larg	bool.prim.u
	.force	_gsdl.ags.syntax.var.print_w_k
	.coerce	gsdl.var.t.out
	.enter	v

_gsdl.ags.syntax.var.print_w_k	.forcecont
bool.prim.u	.tygvar
gsdl.var.prim.u	.tygvar
list.t	.tygvar
gsdl.var.component.t	.tygvar
natural.t	.tygvar
gsdl.var.t	.tygvar
diff.list.t	.tygvar
rune.t	.tygvar
_gsdl.ags.syntax.var.print_w_basevar_k	.subcode
_gsdl.ags.syntax.var.print_w_constructed_f_c	.subcode
list.t.out	.cogvar
list.foldr	.gvar
diff.list.<>	.gvar
diff.list.nil	.gvar
list.map	.gvar
diff.list.rune.ty	.tylet	diff.list.t	rune.t
b	.fv	bool.prim.u
v0	.karg	gsdl.var.prim.u
	.analyze	v0	basevar	constructed
		.case	basevar
cs		.fkarg	0	list.t	gsdl.var.component.t
			.force	_gsdl.ags.syntax.var.print_w_basevar_k
			.coerce	list.t.out	gsdl.var.component.t
			.enter	cs
		.case	constructed
d		.fkarg	0	natural.t
cs		.fkarg	1	list.t	gsdl.var.t
diff.list.rune.<>			.apply	diff.list.<>	rune.t
diff.list.rune.nil			.apply	diff.list.nil	rune.t
f			.alloc	_gsdl.ags.syntax.var.print_w_constructed_f_c
cs.dss			.apply	list.map	gsdl.var.t	diff.list.rune.ty	|	f	cs
			.app	diff.list.rune.<>	diff.list.rune.nil	cs.dss
			.enter	list.foldr	diff.list.rune.ty	diff.list.rune.ty

_gsdl.ags.syntax.var.print_w_basevar_k	.forcecont
list.prim.u	.tygvar
gsdl.var.component.t	.tygvar
list.t	.tygvar
rune.t	.tygvar
diff.list.t	.tygvar	# Temp
_gsdl.ags.syntax.var.print_w_basevar_:_f_c	.subcode
diff.list.<>	.gvar
gsdl.ags.syntax.var.component.print	.gvar
list.foldr	.gvar
diff.list.nil	.gvar
list.map	.gvar
diff.list.rune.ty	.tylet	diff.list.t	rune.t
cs0	.karg	list.prim.u	gsdl.var.component.t
	.analyze	cs0	:	nil
		.case	:
c0		.fkarg	0	gsdl.var.component.t
cs1		.fkarg	1	list.t	gsdl.var.component.t
c0.ds			.apply	gsdl.ags.syntax.var.component.print	|	c0
diff.list.rune.<>			.apply	diff.list.<>	rune.t
diff.list.rune.nil			.apply	diff.list.nil	rune.t
f			.alloc	_gsdl.ags.syntax.var.print_w_basevar_:_f_c
cs1.dss			.apply	list.map	gsdl.var.component.t	diff.list.rune.ty	|	f	cs1
cs1.ds			.apply	list.foldr	diff.list.rune.ty	diff.list.rune.ty	|	diff.list.rune.<>	diff.list.rune.nil	cs1.dss
			.app	c0.ds	cs1.ds
			.enter	diff.list.<>	rune.t
		.case	nil
			.undef	diff.list.t	rune.t

_gsdl.ags.syntax.var.print_w_basevar_:_f_c	.expr
gsdl.var.component.t	.tygvar
rune.t	.tygvar
diff.list.:	.gvar
rune.dot	.gvar
gsdl.ags.syntax.var.component.print	.gvar
c	.larg	gsdl.var.component.t
c.ds	.apply	gsdl.ags.syntax.var.component.print	|	c
	.app	rune.dot	c.ds
	.enter	diff.list.:	rune.t

_gsdl.ags.syntax.var.print_w_constructed_f_c	.expr
bool.prim.u	.tygvar
natural.t	.tygvar
gsdl.var.t	.tygvar
diff.list.t	.tygvar	# Temp
rune.t	.tygvar	# Temp
_gsdl.ags.syntax.var.print_w_constructed_f_ubs.ds_c	.subcode
diff.list.<>	.gvar
_gsdl.ags.syntax.var.print_w	.gvar
b	.fv	bool.prim.u
d	.fv	natural.t
v	.larg	gsdl.var.t
ubs.ds	.alloc	_gsdl.ags.syntax.var.print_w_constructed_f_ubs.ds_c
false	.constr	bool.prim.u	false
v.ds	.apply	_gsdl.ags.syntax.var.print_w	|	v	false
	.app	ubs.ds	v.ds
	.enter	diff.list.<>	rune.t

_gsdl.ags.syntax.var.print_w_constructed_f_ubs.ds_c	.expr
bool.prim.u	.tygvar
natural.t	.tygvar
rune.t	.tygvar
diff.list.t	.tygvar	# Temp
diff.list.replicate	.gvar
rune.underscore	.gvar
b	.fv	bool.prim.u
d	.fv	natural.t
	.analyze	b	false	true
		.case	false
			.undef	diff.list.t	rune.t
		.case	true
			.app	d	rune.underscore
			.enter	diff.list.replicate	rune.t

# §section §gs{gsdl.ags.syntax.var.component.print}

_gsdl.ags.syntax.var.component.print_c	.expr
gsdl.var.component.t	.tygvar
_gsdl.ags.syntax.var.component.print_k	.subcode
gsdl.var.component.t.out	.cogvar
c	.larg	gsdl.var.component.t
	.force	_gsdl.ags.syntax.var.component.print_k
	.coerce	gsdl.var.component.t.out
	.enter	c

_gsdl.ags.syntax.var.component.print_k	.forcecont
gsdl.var.component.prim.u	.tygvar
string.t	.tygvar
rune.t	.tygvar
natural.t	.tygvar
diff.list.t	.tygvar	# Temp
diff.list.fromlist	.gvar
natural.fmtdecimal	.gvar
c0	.karg	gsdl.var.component.prim.u
	.analyze	c0	alphanum	numeric
		.case	alphanum
s		.fkarg	0	string.t
			.app	s
			.enter	diff.list.fromlist	rune.t
		.case	numeric
n		.fkarg	0	natural.t
n.s			.apply	natural.fmtdecimal	|	n
			.app	n.s
			.enter	diff.list.fromlist	rune.t
	# > :: diff.list.t	rune.t

# §section §gs{gsdl.ags.syntax.rune.literal}

_gsdl.ags.syntax.rune.literal_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
gsdl.ags.syntax.rune.literal.re	.gvar
	.app	rune.compare	gsdl.ags.syntax.rune.literal.re
	.enter	parser.match	rune.t

# §section §gs{gsdl.ags.syntax.stringliteral}

_gsdl.ags.syntax.stringliteral_c	.expr
rune.t	.tygvar
parser.match	.gvar
rune.compare	.gvar
_gsdl.ags.syntax.stringliteral_re	.gvar
	.app	rune.compare	_gsdl.ags.syntax.stringliteral_re
	.enter	parser.match	rune.t

	.type

# §section §gs{gsdl.ags.syntax.var.print}

_gsdl.ags.syntax.var.print_w_ty	.tyexpr
gsdl.var.t	.tygvar
bool.prim.u	.tygvar
diff.list.t	.tygvar
rune.t	.tygvar
	.tylift
	.tyfun	gsdl.var.t
	.tylift
	.tyfun	bool.prim.u
	.tyref	diff.list.t	rune.t
