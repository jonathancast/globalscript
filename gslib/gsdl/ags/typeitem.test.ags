	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.parse_segment.empty	_test.parse.kind.u	_test.parse.kind.exp	_test.parse.tyabstract	_test.parse.tyexpr	_test.parse.tyexpr.tylet	_test.parse.tyexpr.tyforall	_test.parse.tyexpr.tyfun	_test.parse.tyexpr.typroduct	_test.parse.tyexpr.tyubsum	_test.parse.tydefinedprim

_test.parse_segment.empty	.closure	_test.parse_segment.empty_c
_test.parse_segment.empty_label	.string	qq{\\t.type\\n}\s=~\ssegment.parser
_test.parse_segment.empty_input	.string	\t.type\n

_test.parse.kind.u	.closure	_test.parse.kind.u_c
_test.parse.kind.u_label	.string	qq{u}\s=~\sgskind.parser
_test.parse.kind.u_input	.string	u

_test.parse.kind.exp	.closure	_test.parse.kind.exp_c
_test.parse.kind.exp_label	.string	qq{**^}\s=~\sgskind.parser
_test.parse.kind.exp_input	.string	**^

_test.parse.tyabstract	.closure	_test.parse.tyabstract_c
_test.parse.tyabstract_label	.string	qq{ibio.dir.t\\t.tyabstract\\t*\\n\\t.tyref\\tα\\n}\s=~\sparser
_test.parse.tyabstract_input	.string	ibio.dir.t\t.tyabstract\t*\n\t.tyref\tα\n
_test.parse.tyabstract_wrong.constr.s	.string	Wrong\sconstructor;\sexpected\styabstract

_test.parse.tyexpr	.closure	_test.parse.tyexpr_c
_test.parse.tyexpr_label	.string	qq{ibio.dir.u\\t.tyexpr\\n\\t.tyref\\tα\\n}\s=~\sparser
_test.parse.tyexpr_input	.string	ibio.dir.u\t.tyexpr\n\t.tyref\tα\n

_test.parse.tyexpr.tylet	.closure	_test.parse.tyexpr.tylet_c
_test.parse.tyexpr.tylet_label	.string	qq{ibio.dir.u\\t.tyexpr\\n_string.ty\\t.tylet\\tlist.t\\trune.t\\n\\t.tyref\\tα\\n}\s=~\sparser
_test.parse.tyexpr.tylet_input	.string	ibio.dir.u\t.tyexpr\n_string.ty\t.tylet\tlist.t\trune.t\n\t.tyref\tα\n

_test.parse.tyexpr.tyforall	.closure	_test.parse.tyexpr.tyforall_c
_test.parse.tyexpr.tyforall_label	.string	qq{_ibio.mapM.prim_ty\\t.tyexpr\\nα\\t.tyforall\\t*\\n\\t.tyref\\tibio.prim.t\\tres.ty\\n}\s=~\sparser
_test.parse.tyexpr.tyforall_input	.string	_ibio.mapM.prim_ty\t.tyexpr\nα\t.tyforall\t*\n\t.tyref\tibio.prim.t\tres.ty\n

_test.parse.tydefinedprim	.closure	_test.parse.tydefinedprim_c
_test.parse.tydefinedprim_label	.string	qq{rune.prim.rune\\t.tydefinedprim\\trune.prim\\trune\\t*\\n}\s=~\sparser
_test.parse.tydefinedprim_input	.string	rune.prim.rune\t.tydefinedprim\trune.prim\trune\t*\n

_test.parse.tyexpr.tyfun	.closure	_test.parse.tyexpr.tyfun_c
_test.parse.tyexpr.tyfun_label	.string	qq{\\t.tyfun\\tibio.prim.iport\\tι\\n\\t.tyref\\tibio.prim.m\\n}\s=~\sexpr.parser
_test.parse.tyexpr.tyfun_input	.string	\t.tyfun\tibio.prim.iport\tι\n\t.tyref\tibio.prim.m\n

_test.parse.tyexpr.typroduct	.closure	_test.parse.tyexpr.typroduct_c
_test.parse.tyexpr.typroduct_label	.string	qq{\\t.typroduct\\tatime\\ttime.t\\n}\s=~\sexpr.parser
_test.parse.tyexpr.typroduct_input	.string	\t.typroduct\tatime\ttime.t\n

_test.parse.tyexpr.tyubsum	.closure	_test.parse.tyexpr.tyubsum_c
_test.parse.tyexpr.tyubsum_label	.string	qq{\\t.tyubsum\\t0\\trecord.unboxed.empty\\n}\s=~\sexpr.parser
_test.parse.tyexpr.tyubsum_input	.string	\t.tyubsum\t0\trecord.unboxed.empty\n

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section §gs{qq{\\t.type\\n}=~ segment.parser}

_test.parse_segment.empty_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
_test.parse_segment.empty_k_c	.subcode
test.property.label	.gvar
_test.parse_segment.empty_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.segment.parser	.gvar
_test.parse_segment.empty_input	.gvar
typesegment_ty	.tylet	list.t	gsdl.ags.typeitem.t
k	.alloc	_test.parse_segment.empty_k_c
test	.apply	parser.test.assert.passes	rune.t	typesegment_ty	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.segment.parser	_test.parse_segment.empty_input	k
	.app	_test.parse_segment.empty_label	test
	.enter	test.property.label

_test.parse_segment.empty_k_c	.expr
list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.typeitem.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.typeitem.fmtgs	.gvar
list.nil	.gvar
typesegment_ty	.tylet	list.t	gsdl.ags.typeitem.t
tys	.larg	list.t	gsdl.ags.typeitem.t
ts.≡	.apply	list.≡	gsdl.ags.typeitem.t	|	gsdl.ags.typeitem.≡
ts.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.typeitem.t	|	gsdl.ags.typeitem.fmtgs
nil	.apply	list.nil	gsdl.ags.typeitem.t
	.app	ts.≡	ts.fmtgs	tys	nil
	.enter	test.assert.eq	typesegment_ty

# §section §gs{qq{u} =~ gskind.parser}

_test.parse.kind.u_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
_test.parse.kind.u_k_c	.subcode
test.property.label	.gvar
_test.parse.kind.u_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.gskind.parser	.gvar
_test.parse.kind.u_input	.gvar
k	.alloc	_test.parse.kind.u_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.gskind.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.gskind.parser	_test.parse.kind.u_input	k
	.app	_test.parse.kind.u_label	test
	.enter	test.property.label

_test.parse.kind.u_k_c	.expr
gsdl.ags.typeitem.gskind.t	.tygvar
test.true	.gvar
ki	.larg	gsdl.ags.typeitem.gskind.t
	.enter	test.true

# §section §gs{qq{**^} =~ gskind.parser}

_test.parse.kind.exp_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
_test.parse.kind.exp_k_c	.subcode
test.property.label	.gvar
_test.parse.kind.exp_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.gskind.parser	.gvar
_test.parse.kind.exp_input	.gvar
k	.alloc	_test.parse.kind.exp_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.gskind.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.gskind.parser	_test.parse.kind.exp_input	k
	.app	_test.parse.kind.exp_label	test
	.enter	test.property.label

_test.parse.kind.exp_k_c	.expr
gsdl.ags.typeitem.gskind.t	.tygvar
test.true	.gvar
ki	.larg	gsdl.ags.typeitem.gskind.t
	.enter	test.true

# §section §gs{qq{ibio.dir.t\\t.tyabstract\\t*\\n\\t.tyref\\tα\\n} =~ parser}

_test.parse.tyabstract_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
_test.parse.tyabstract_k_c	.subcode
test.property.label	.gvar
_test.parse.tyabstract_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.parser	.gvar
_test.parse.tyabstract_input	.gvar
k	.alloc	_test.parse.tyabstract_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.parser	_test.parse.tyabstract_input	k
	.app	_test.parse.tyabstract_label	test
	.enter	test.property.label

_test.parse.tyabstract_k_c	.expr
gsdl.ags.typeitem.t	.tygvar
_test.parse.tyabstract_k_k	.subcode
gsdl.ags.typeitem.t.out	.cogvar
ti	.larg	gsdl.ags.typeitem.t
	.force	_test.parse.tyabstract_k_k
	.coerce	gsdl.ags.typeitem.t.out
	.enter	ti

_test.parse.tyabstract_k_k	.forcecont
gsdl.ags.typeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.ags.typeitem.decls.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
test.property.false	.gvar
_test.parse.tyabstract_wrong.constr.s	.gvar
test.true	.gvar
ti0	.karg	gsdl.ags.typeitem.prim.u
	.danalyze	ti0	tyabstract
		.default
			.app	_test.parse.tyabstract_wrong.constr.s
			.enter	test.property.false
		.case	tyabstract
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.ags.typeitem.gskind.t
ds		.fkarg	3	gsdl.ags.typeitem.decls.t
defn		.fkarg	4	gsdl.ags.typeitem.expr.t
			.enter	test.true

# §section §gs{qq{ibio.dir.u\\t.tyexpr\\n\\t.tyref\\tα\\n}\s=~\sparser}

_test.parse.tyexpr_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
_test.parse.tyexpr_k_c	.subcode
test.property.label	.gvar
_test.parse.tyexpr_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.parser	.gvar
_test.parse.tyexpr_input	.gvar
k	.alloc	_test.parse.tyexpr_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.parser	_test.parse.tyexpr_input	k
	.app	_test.parse.tyexpr_label	test
	.enter	test.property.label

_test.parse.tyexpr_k_c	.expr
gsdl.ags.typeitem.t	.tygvar
_test.parse.tyexpr_k_k	.subcode
gsdl.ags.typeitem.t.out	.cogvar
ti	.larg	gsdl.ags.typeitem.t
	.force	_test.parse.tyexpr_k_k
	.coerce	gsdl.ags.typeitem.t.out
	.enter	ti

_test.parse.tyexpr_k_k	.forcecont
gsdl.ags.typeitem.prim.u	.tygvar
test.true	.gvar
ti0	.karg	gsdl.ags.typeitem.prim.u
	.enter	test.true

# §section §gs{qq{ibio.dir.u\\t.tyexpr\\n_string.ty\\t.tylet\\tlist.t\\trune.t\\n\\t.tyref\\tα\\n}\s=~\sparser}

_test.parse.tyexpr.tylet_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
_test.parse.tyexpr.tylet_k_c	.subcode
test.property.label	.gvar
_test.parse.tyexpr.tylet_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.parser	.gvar
_test.parse.tyexpr.tylet_input	.gvar
k	.alloc	_test.parse.tyexpr.tylet_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.parser	_test.parse.tyexpr.tylet_input	k
	.app	_test.parse.tyexpr.tylet_label	test
	.enter	test.property.label

_test.parse.tyexpr.tylet_k_c	.expr
gsdl.ags.typeitem.t	.tygvar
test.true	.gvar
ti	.larg	gsdl.ags.typeitem.t
	.enter	test.true

# §section §gs{qq{_ibio.mapM.prim_ty\\t.tyexpr\\nα\\t.tyforall\\t*\\n\\t.tyref\\tibio.prim.t\\tres.ty\\n} =~ expr.parser}

_test.parse.tyexpr.tyforall_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
_test.parse.tyexpr.tyforall_k_c	.subcode
test.property.label	.gvar
_test.parse.tyexpr.tyforall_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.parser	.gvar
_test.parse.tyexpr.tyforall_input	.gvar
k	.alloc	_test.parse.tyexpr.tyforall_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.parser	_test.parse.tyexpr.tyforall_input	k
	.app	_test.parse.tyexpr.tyforall_label	test
	.enter	test.property.label

_test.parse.tyexpr.tyforall_k_c	.expr
gsdl.ags.typeitem.t	.tygvar
test.true	.gvar
ki	.larg	gsdl.ags.typeitem.t
	.enter	test.true

# §section §gs{qq{rune.prim.rune\\t.tydefinedprim\\trune.prim\\trune\\t*\\n} =~ expr.parser}

_test.parse.tydefinedprim_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
_test.parse.tydefinedprim_k_c	.subcode
test.property.label	.gvar
_test.parse.tydefinedprim_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.parser	.gvar
_test.parse.tydefinedprim_input	.gvar
k	.alloc	_test.parse.tydefinedprim_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.parser	_test.parse.tydefinedprim_input	k
	.app	_test.parse.tydefinedprim_label	test
	.enter	test.property.label

_test.parse.tydefinedprim_k_c	.expr
gsdl.ags.typeitem.t	.tygvar
test.true	.gvar
ki	.larg	gsdl.ags.typeitem.t
	.enter	test.true

# §section §gs{qq{\\t.tyfun\\tibio.prim.iport\\tι\\n\\t.tyref\\tibio.prim.m\\n} =~ expr.parser}

_test.parse.tyexpr.tyfun_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
_test.parse.tyexpr.tyfun_k_c	.subcode
test.property.label	.gvar
_test.parse.tyexpr.tyfun_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.expr.parser	.gvar
_test.parse.tyexpr.tyfun_input	.gvar
k	.alloc	_test.parse.tyexpr.tyfun_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.expr.parser	_test.parse.tyexpr.tyfun_input	k
	.app	_test.parse.tyexpr.tyfun_label	test
	.enter	test.property.label

_test.parse.tyexpr.tyfun_k_c	.expr
gsdl.ags.typeitem.expr.t	.tygvar
test.true	.gvar
ki	.larg	gsdl.ags.typeitem.expr.t
	.enter	test.true

# §section §gs{qq{\\t.typroduct\\tatime\\ttime.t\\n} =~ expr.parser}

_test.parse.tyexpr.typroduct_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
_test.parse.tyexpr.typroduct_k_c	.subcode
test.property.label	.gvar
_test.parse.tyexpr.typroduct_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.expr.parser	.gvar
_test.parse.tyexpr.typroduct_input	.gvar
k	.alloc	_test.parse.tyexpr.typroduct_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.expr.parser	_test.parse.tyexpr.typroduct_input	k
	.app	_test.parse.tyexpr.typroduct_label	test
	.enter	test.property.label

_test.parse.tyexpr.typroduct_k_c	.expr
gsdl.ags.typeitem.expr.t	.tygvar
test.true	.gvar
ki	.larg	gsdl.ags.typeitem.expr.t
	.enter	test.true

# §section §gs{qq{\\t.tyubsum\\t0\\trecord.unboxed.empty\\n} =~ expr.parser}

_test.parse.tyexpr.tyubsum_c	.expr
rune.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
_test.parse.tyexpr.tyubsum_k_c	.subcode
test.property.label	.gvar
_test.parse.tyexpr.tyubsum_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.expr.parser	.gvar
_test.parse.tyexpr.tyubsum_input	.gvar
k	.alloc	_test.parse.tyexpr.tyubsum_k_c
test	.apply	parser.test.assert.passes	rune.t	gsdl.ags.typeitem.expr.t	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.expr.parser	_test.parse.tyexpr.tyubsum_input	k
	.app	_test.parse.tyexpr.tyubsum_label	test
	.enter	test.property.label

_test.parse.tyexpr.tyubsum_k_c	.expr
gsdl.ags.typeitem.expr.t	.tygvar
test.true	.gvar
ki	.larg	gsdl.ags.typeitem.expr.t
	.enter	test.true

