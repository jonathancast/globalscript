	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.parse_segment.empty

_test.parse_segment.empty	.closure	_test.parse_segment.empty_c
_test.parse_segment.empty_label	.string	qq{\\t.type\\n}\s=~\ssegment.parser
_test.parse_segment.empty_input	.string	\t.type\n

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §subsubsection §gs{qq{\\t.type\\n}=~ segment.parser}

_test.parse_segment.empty_c	.expr
rune.t	.tygvar
list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
typesegment_ty	.tylet	list.t	gsdl.ags.typeitem.t
_test.parse_segment.empty_k_c	.subcode
test.property.label	.gvar
_test.parse_segment.empty_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
gsdl.ags.typeitem.segment.parser	.gvar
_test.parse_segment.empty_input	.gvar
k	.alloc	_test.parse_segment.empty_k_c
test	.apply	parser.test.assert.passes	rune.t	typesegment_ty	|	parser.rune.advance	rune.print	gsdl.ags.typeitem.segment.parser	_test.parse_segment.empty_input	k
	.app	_test.parse_segment.empty_label	test
	.enter	test.property.label

_test.parse_segment.empty_k_c	.expr
list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
typesegment_ty	.tylet	list.t	gsdl.ags.typeitem.t
test.assert.eq	.gvar
list.≡	.gvar
gsdl.ags.typeitem.≡	.gvar
list.fmtgs.byDefault	.gvar
gsdl.ags.typeitem.fmtgs	.gvar
list.nil	.gvar
tys	.larg	list.t	gsdl.ags.typeitem.t
ts.≡	.apply	list.≡	gsdl.ags.typeitem.t	|	gsdl.ags.typeitem.≡
ts.fmtgs	.apply	list.fmtgs.byDefault	gsdl.ags.typeitem.t	|	gsdl.ags.typeitem.fmtgs
nil	.apply	list.nil	gsdl.ags.typeitem.t
	.app	ts.≡	ts.fmtgs	tys	nil
	.enter	test.assert.eq	typesegment_ty
