	.prefix

# Note: this library doesn't balance its binary trees;
# that will need to be fixed but I want to see what the performance looks like directly first.

	.data

ordered.set.tolist	.closure	_ordered.set.tolist_c	_ordered.set.tolist_ty

ordered.set.empty	.closure	_ordered.set.empty_c
ordered.set.singleton	.closure	_ordered.set.singleton_c
ordered.set.union	.closure	_ordered.set.union_c	_ordered.set.union_ty

ordered.set.prim.branch	.closure	_ordered.set.prim.branch_c

	.code

# §section §gs{ordered.set.tolist}

_ordered.set.tolist_c	.expr
order.total.t	.tygvar
ordered.set.t	.tygvar
α	.tyarg	*
_ordered.set.tolist_k	.subcode
ordered.set.t.out	.cogvar
cmp	.larg	order.total.t	α
s	.larg	ordered.set.t	α
	.force	_ordered.set.tolist_k	α
	.coerce	ordered.set.t.out	α
	.enter	s

_ordered.set.tolist_k	.forcecont
ordered.set.prim.u	.tygvar
ordered.set.t	.tygvar
list.t	.tygvar	# Temp
α	.tyfv	*
list.nil	.gvar
s0	.karg	ordered.set.prim.u	α
	.analyze	s0	branch	empty
		.case	branch
x		.fkarg	0	α
sl		.fkarg	1	ordered.set.t	α
sr		.fkarg	2	ordered.set.t	α
			.undef	list.t	α
		.case	empty
			.enter	list.nil	α
	# > :: list.t	α

# §section §gs{ordered.set.empty}

_ordered.set.empty_c	.expr
ordered.set.prim.u	.tygvar
α	.tyarg	*
res.u	.tylet	ordered.set.prim.u	α
ordered.set.t.in	.cogvar
c	.constr	res.u	empty
	.coerce	ordered.set.t.in	α
	.lift
	.yield	c

# §section §gs{ordered.set.singleton}

_ordered.set.singleton_c	.expr
order.total.t	.tygvar
ordered.set.t	.tygvar	# Temp
α	.tyarg	*
ordered.set.prim.branch	.gvar
ordered.set.empty	.gvar
cmp	.larg	order.total.t	α
x	.larg	α
empty	.apply	ordered.set.empty	α
	.app	x	empty	empty
	.yield	ordered.set.prim.branch	α

# §section §gs{ordered.set.union}

_ordered.set.union_c	.expr
order.total.t	.tygvar
ordered.set.t	.tygvar
α	.tyarg	*
cmp	.larg	order.total.t	α
s0	.larg	ordered.set.t	α
s1	.larg	ordered.set.t	α
	.undef	ordered.set.t	α

# §section §gs{tygvar}

_ordered.set.prim.branch_c	.expr
ordered.set.t	.tygvar
ordered.set.prim.u	.tygvar
α	.tyarg	*
res.u	.tylet	ordered.set.prim.u	α
ordered.set.t.in	.cogvar
x	.arg	α
l	.arg	ordered.set.t	α
r	.arg	ordered.set.t	α
c	.constr	res.u	branch	0	x	1	l	2	r
	.coerce	ordered.set.t.in	α
	.lift
	.yield	c

	.type

# §section §gs{ordered.set.t}

ordered.set.t	.tyabstract	**^
ordered.set.prim.u	.tygvar
α	.tylambda	*
	.tylift
	.tyref	ordered.set.prim.u	α

ordered.set.prim.u	.tyexpr
record.unboxed.empty	.tygvar
_ordered.set.prim.u_branch_ty	.tygvar
α	.tylambda	*
branch_ty	.tylet	_ordered.set.prim.u_branch_ty	α
	.tysum	branch	branch_ty	empty	record.unboxed.empty

_ordered.set.prim.u_branch_ty	.tyexpr
ordered.set.t	.tygvar
α	.tylambda	*
set.ty	.tylet	ordered.set.t	α
	.tyubproduct	0	α	1	set.ty	2	set.ty

# §section §gs{ordered.set.tolist}

_ordered.set.tolist_ty	.tyexpr
order.total.t	.tygvar
ordered.set.t	.tygvar
list.t	.tygvar
α	.tyforall	*
	.tylift
	.tyfun	order.total.t	α
	.tylift
	.tyfun	ordered.set.t	α
	.tyref	list.t	α

# §section §gs{ordered.set.union}

_ordered.set.union_ty	.tyexpr
order.total.t	.tygvar
ordered.set.t	.tygvar
α	.tyforall	*
	.tylift
	.tyfun	order.total.t	α
	.tylift
	.tyfun	ordered.set.t	α
	.tylift
	.tyfun	ordered.set.t	α
	.tyref	ordered.set.t	α

	.coercion

ordered.set.t.in	.tycoercion
ordered.set.t	.tygvar
α	.tylambda	*
	.tydefinition	ordered.set.t	α

ordered.set.t.out	.tycoercion
ordered.set.t	.tygvar
α	.tylambda	*
	.tyinvert
	.tydefinition	ordered.set.t	α
