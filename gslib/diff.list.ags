	.prefix

	.data

diff.list.nil	.closure	_diff.list.nil_c
diff.list.:	.closure	_diff.list.:_c
diff.list.<>	.closure	_diff.list.<>_c

diff.list.prepend	.closure	_diff.list.prepend_c

diff.list.fromlist	.closure	_diff.list.fromlist_c

	.code

# §section §gs{diff.list.nil}

_diff.list.nil_c	.expr
list.t	.tygvar
α	.tyarg	*
ys0	.larg	list.t	α
	.enter	ys0

# §section §gs{diff.list.:}

_diff.list.:_c	.expr
diff.list.t	.tygvar
list.t	.tygvar
α	.tyarg	*
list.:	.gvar
x	.larg	α
xn	.larg	diff.list.t	α
ys0	.larg	list.t	α
ys1	.apply	xn	|	ys0
	.app	x	ys1
	.enter	list.:	α

# §section §gs{diff.list.<>}

_diff.list.<>_c	.expr
diff.list.t	.tygvar
list.t	.tygvar
α	.tyarg	*
xn0	.larg	diff.list.t	α
xn1	.larg	diff.list.t	α
ys0	.larg	list.t	α
ys1	.apply	xn1	|	ys0
	.app	ys1
	.enter	xn0

# §section §gs{diff.list.prepend}

_diff.list.prepend_c	.expr
list.t	.tygvar
diff.list.t	.tygvar
α	.tyarg	*
list.<>	.gvar
xn0	.larg	list.t	α
xn1	.larg	diff.list.t	α
ys0	.larg	list.t	α
ys1	.apply	xn1	|	ys0
	.app	xn0	ys1
	.enter	list.<>	α

# §section §gs{diff.list.fromlist}

_diff.list.fromlist_c	.expr
list.t	.tygvar
α	.tyarg	*
list.<>	.gvar
xn0	.larg	list.t	α
ys0	.larg	list.t	α
	.app	xn0	ys0
	.enter	list.<>	α

	.type

diff.list.t	.tyexpr
list.t	.tygvar
α	.tylambda	*
	.tylift
	.tyfun	list.t	α
	.tyref	list.t	α
