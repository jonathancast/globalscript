	.prefix

	.data

graph.tsort	.closure	_graph.tsort_c	_graph.tsort_ty
_graph.tsort_list	.closure	_graph.tsort_list_c	_graph.tsort_list_ty

graph.scc.≡	.closure	_graph.scc.≡_c

graph.scc.fmtgs	.closure	_graph.scc.fmtgs_c

graph.scc.nonrecursive	.closure	_graph.scc.nonrecursive_c

	.code

_graph.tsort_c	.expr
order.total.t	.tygvar
graph.dependencies.t	.tygvar
graph.lookup.t	.tygvar
list.t	.tygvar
graph.scc.t	.tygvar	# Temp
_graph.tsort_list	.gvar
list.nil	.gvar
k	.tyarg	*
v	.tyarg	*
ord	.larg	order.total.t	k
deps	.larg	graph.dependencies.t	k	v
look	.larg	graph.lookup.t	k	v
ks	.larg	list.t	k
scc.ty	.tylet	graph.scc.t	v
k	.apply	list.nil	scc.ty
	.app	ks	k
	.enter	_graph.tsort_list	k	v

_graph.tsort_list_c	.expr
list.t	.tygvar
_graph.tsort_cont.t	.tygvar
_graph.tsort_list_k	.subcode
list.t.out	.cogvar
k	.tyarg	*
v	.tyarg	*
ks	.larg	list.t	k
k	.larg	_graph.tsort_cont.t	k	v
	.force	_graph.tsort_list_k
	.coerce	list.t.out	k
	.enter	ks

_graph.tsort_list_k	.forcecont
_graph.tsort_cont.t	.tygvar
list.prim.u	.tygvar
list.t	.tygvar	# Temp
graph.scc.t	.tygvar	# Temp
k	.tyfv	*
v	.tyfv	*	# Temp
k	.fv	_graph.tsort_cont.t	k	v
scc.ty	.tylet	graph.scc.t	v	# Temp
ks0	.karg	list.prim.u	k
	.analyze	ks0	:	nil
		.case	:
k0		.fkarg	0	k
ks1		.fkarg	1	list.t	k
			.undef	list.t	scc.ty
		.case	nil
			.enter	k

# §section §gs{graph.scc.≡}

_graph.scc.≡_c	.expr
graph.scc.t	.tygvar
bool.t	.tygvar
α	.tyarg	*
scc0	.larg	graph.scc.t	α
scc1	.larg	graph.scc.t	α
	.undef	bool.t

# §section §gs{graph.scc.fmtgs}

_graph.scc.fmtgs_c	.expr
graph.scc.t	.tygvar
fmtgs.printer.t	.tygvar	# Temp
α	.tyarg	*
scc	.larg	graph.scc.t	α
	.undef	fmtgs.printer.t

# §section §gs{graph.scc.t} constructors

_graph.scc.nonrecursive_c	.expr
graph.scc.prim.u	.tygvar
graph.scc.t.in	.cogvar
α	.tyarg	*
v	.larg	α
res.u	.tylet	graph.scc.prim.u	α
c	.constr	res.u	nonrecursive	0	v
	.coerce	graph.scc.t.in	α
	.lift
	.yield	c

	.type

# §section §gs{graph.scc.t}

graph.scc.t	.tyabstract	**^
graph.scc.prim.u	.tygvar
α	.tylambda	*
	.tylift
	.tyref	graph.scc.prim.u	α

graph.scc.prim.u	.tyexpr
_graph.scc.prim.u_nonrecursive_ty	.tygvar
α	.tylambda	*
nonrecursive_ty	.tylet	_graph.scc.prim.u_nonrecursive_ty	α
	.tysum	nonrecursive	nonrecursive_ty

_graph.scc.prim.u_nonrecursive_ty	.tyexpr
α	.tylambda	*
	.tyubproduct	0	α

# §section §gs{graph.dependencies.t}

graph.dependencies.t	.tyexpr
list.t	.tygvar
k	.tylambda	*
v	.tylambda	*
	.tylift
	.tyfun	v
	.tyref	list.t	k

# §section §gs{graph.lookup.t}

graph.lookup.t	.tyexpr
maybe.t	.tygvar
k	.tylambda	*
v	.tylambda	*
	.tylift
	.tyfun	k
	.tyref	maybe.t	v

# §section §gs{graph.tsort}

_graph.tsort_ty	.tyexpr
order.total.t	.tygvar
graph.dependencies.t	.tygvar
graph.lookup.t	.tygvar
list.t	.tygvar
graph.scc.t	.tygvar
k	.tyforall	*
v	.tyforall	*
scc.ty	.tylet	graph.scc.t	v
	.tylift
	.tyfun	order.total.t	k
	.tylift
	.tyfun	graph.dependencies.t	k	v
	.tylift
	.tyfun	graph.lookup.t	k	v
	.tylift
	.tyfun	list.t	k
	.tyref	list.t	scc.ty

_graph.tsort_list_ty	.tyexpr
list.t	.tygvar
_graph.tsort_cont.t	.tygvar
k	.tyforall	*
v	.tyforall	*
	.tylift
	.tyfun	list.t	k
	.tylift
	.tyfun	_graph.tsort_cont.t	k	v
	.tyref	_graph.tsort_cont.t	k	v

_graph.tsort_cont.t	.tyexpr
list.t	.tygvar
graph.scc.t	.tygvar
k	.tylambda	*
v	.tylambda	*
scc.ty	.tylet	graph.scc.t	v
	.tyref	list.t	scc.ty

	.coercion

graph.scc.t.in	.tycoercion
graph.scc.t	.tygvar
α	.tylambda	*
	.tydefinition	graph.scc.t	α
