	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.nil.eq.nil	_test.singleton.eq.singleton

_test.nil.eq.nil	.closure	_test.nil.eq.nil.c
_test.nil.eq.nil.label	.string	nil\s≡\snil
_test.nil.eq.nil.test	.closure	_test.nil.eq.nil.test.c
_test.nil.eq.nil.test.succ	.string	nil\s≡\snil
_test.nil.eq.nil.test.fail	.string	nil\s≠\snil

_test.singleton.eq.singleton	.closure	_test.singleton.eq.singleton.c
_test.singleton.eq.singleton.label	.string	[false]\s≡\s[false]
_test.singleton.eq.singleton.test	.closure	_test.singleton.eq.singleton.test.c
_test.singleton.eq.singleton.test.fail	.string	[false]\s≠\s[false]
_test.singleton.eq.singleton.test.succ	.string	[false]\s≡\s[false]

_fixture.nil	.closure	_fixture.nil.c
_fixture.singleton.false	.closure	_fixture.singleton.false.c

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section §gs{nil ≡ nil}

_test.nil.eq.nil.c	.expr
test.property.label	.gvar
_test.nil.eq.nil.label	.gvar
_test.nil.eq.nil.test	.gvar
	.app	_test.nil.eq.nil.label	_test.nil.eq.nil.test
	.enter	test.property.label

_test.nil.eq.nil.test.c	.expr
_test.nil.eq.nil.test.c_eq.c	.subcode
test.assert	.gvar
_test.nil.eq.nil.test.succ	.gvar
_test.nil.eq.nil.test.fail	.gvar
eq	.alloc	_test.nil.eq.nil.test.c_eq.c
	.app	_test.nil.eq.nil.test.fail	_test.nil.eq.nil.test.succ	eq
	.enter	test.assert

_test.nil.eq.nil.test.c_eq.c	.expr
bool.t	.tygvar
list.≡	.gvar
bool.≡	.gvar
_fixture.nil	.gvar
	.app	bool.≡ _fixture.nil	_fixture.nil
	.enter	list.≡ bool.t

# §section §gs{[false] ≡ [false]}

_test.singleton.eq.singleton.c	.expr
test.property.label	.gvar
_test.singleton.eq.singleton.label	.gvar
_test.singleton.eq.singleton.test	.gvar
	.app	_test.singleton.eq.singleton.label	_test.singleton.eq.singleton.test
	.enter	test.property.label

_test.singleton.eq.singleton.test.c	.expr
_test.singleton.eq.singleton.test_eq.c	.subcode
test.assert	.gvar
_test.singleton.eq.singleton.test.fail	.gvar
_test.singleton.eq.singleton.test.succ	.gvar
eq	.alloc	_test.singleton.eq.singleton.test_eq.c
	.app	_test.singleton.eq.singleton.test.fail	_test.singleton.eq.singleton.test.succ	eq
	.enter	test.assert

_test.singleton.eq.singleton.test_eq.c	.expr
bool.t	.tygvar
list.≡	.gvar
bool.≡	.gvar
_fixture.singleton.false	.gvar
	.app	bool.≡	_fixture.singleton.false	_fixture.singleton.false
	.enter	list.≡	bool.t

# §section Test fixtures

_fixture.nil.c	.expr
bool.t	.tygvar
list.nil	.gvar
	.enter	list.nil	bool.t

_fixture.singleton.false.c	.expr
bool.t	.tygvar
list.:	.gvar
bool.false	.gvar
_fixture.nil	.gvar
	.app	bool.false	_fixture.nil
	.enter	list.:	bool.t
