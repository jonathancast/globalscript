#calculus: gsdl.string-code 0.4

	.document

	.data

	.closure	_epcode

_tests	.list	test.property.t	_test.nil.eq.nil	_test.singleton.eq.singleton _test.singleton.eq.nil	_test.nil.eq.singleton	_test.compare.singleton.singleton	_test.fmtgs.nil	_test.map.nil	_test.map.:	_test.reverse.nil	_test.reverse.cons

_test.nil.eq.nil	.closure	_test.nil.eq.nil.c
_test.nil.eq.nil.label	.string	nil\s≡\snil
_test.nil.eq.nil.test.succ	.string	nil\s≡\snil
_test.nil.eq.nil.test.fail	.string	nil\s≠\snil

_test.singleton.eq.singleton	.closure	_test.singleton.eq.singleton.c
_test.singleton.eq.singleton.label	.string	[false]\s≡\s[false]
_test.singleton.eq.singleton.test.fail	.string	[false]\s≠\s[false]
_test.singleton.eq.singleton.test.succ	.string	[false]\s≡\s[false]

_test.singleton.eq.nil	.closure	_test.singleton.eq.nil_c
_test.singleton.eq.nil_label	.string	[false]\s≠\snil
_test.singleton.eq.nil_test_succ	.string	[false]\s≠\snil
_test.singleton.eq.nil_test_fail	.string	[false]\s≡\snil

_test.nil.eq.singleton	.closure	_test.nil.eq.singleton_c
_test.nil.eq.singleton_label	.string	nil\s≠\s[false]
_test.nil.eq.singleton_test_succ	.string	nil\s≠\s[false]
_test.nil.eq.singleton_test_fail	.string	nil\s≡\s[false]

_test.compare.singleton.singleton	.closure	_test.compare.singleton.singleton_c
_test.compare.singleton.singleton_label	.string	list.compare\s[false]\s[false]

_test.fmtgs.nil	.closure	_test.fmtgs.nil_c
_test.fmtgs.nil_label	.string	list.fmtgs\snil\s≡\sqq{[]}
_test.fmtgs.nil_test_expected	.string	[]
_test.fmtgs.nil_test_fail	.string	list.fmtgs\snil\s≠\sqq{[]}
_test.fmtgs.nil_test_succ	.string	list.fmtgs\snil\s≡\sqq{[]}

_test.map.nil	.closure	_test.map.nil_c
_test.map.nil_label	.string	map\sf\snil

_test.map.:	.closure	_test.map.:_c
_test.map.:_label	.string	map\sf\s(_:_)

_test.reverse.nil	.closure	_test.reverse.nil_c
_test.reverse.nil_label	.string	reverse\snil

_test.reverse.cons	.closure	_test.reverse.cons_c
_test.reverse.cons_label	.string	reverse\s:

_fixture.nil	.closure	_fixture.nil.c
_fixture.singleton.false	.closure	_fixture.singleton.false.c

_fixture.list.bool.≡	.closure	_fixture.list.bool.≡_c
_fixture.list.bool.fmtgs	.closure	_fixture.list.bool.fmtgs_c

	.code

_epcode	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

-- §section §gs{nil ≡ nil}

_test.nil.eq.nil.c	.expr
bool.t	.tygvar
test.property.label	.gvar
_test.nil.eq.nil.label	.gvar
test.assert	.gvar
_test.nil.eq.nil.test.fail	.gvar
_test.nil.eq.nil.test.succ	.gvar
list.≡	.gvar
bool.≡	.gvar
_fixture.nil	.gvar
eq	.apply	list.≡ bool.t	|	bool.≡ _fixture.nil	_fixture.nil
test	.apply	test.assert	|	_test.nil.eq.nil.test.fail	_test.nil.eq.nil.test.succ	eq
	.app	_test.nil.eq.nil.label	test
	.enter	test.property.label

-- §section §gs{[false] ≡ [false]}

_test.singleton.eq.singleton.c	.expr
bool.t	.tygvar
test.property.label	.gvar
_test.singleton.eq.singleton.label	.gvar
test.assert	.gvar
_test.singleton.eq.singleton.test.fail	.gvar
_test.singleton.eq.singleton.test.succ	.gvar
list.≡	.gvar
bool.≡	.gvar
_fixture.singleton.false	.gvar
eq	.apply	list.≡	bool.t	|	bool.≡	_fixture.singleton.false	_fixture.singleton.false
test	.apply	test.assert	|	_test.singleton.eq.singleton.test.fail	_test.singleton.eq.singleton.test.succ	eq
	.app	_test.singleton.eq.singleton.label	test
	.enter	test.property.label

-- §section §gs{[false] ≠ nil}

_test.singleton.eq.nil_c	.expr
bool.t	.tygvar
test.property.label	.gvar
_test.singleton.eq.nil_label	.gvar
test.deny	.gvar
_test.singleton.eq.nil_test_succ	.gvar
_test.singleton.eq.nil_test_fail	.gvar
list.≡	.gvar
bool.≡	.gvar
_fixture.singleton.false	.gvar
_fixture.nil	.gvar
eq	.apply	list.≡	bool.t	|	bool.≡	_fixture.singleton.false	_fixture.nil
test	.apply	test.deny	|	_test.singleton.eq.nil_test_succ	_test.singleton.eq.nil_test_fail	eq
	.app	_test.singleton.eq.nil_label	test
	.enter	test.property.label

-- §section §gs{nil ≠ [false]}

_test.nil.eq.singleton_c	.expr
bool.t	.tygvar
test.property.label	.gvar
_test.nil.eq.singleton_label	.gvar
test.deny	.gvar
_test.nil.eq.singleton_test_succ	.gvar
_test.nil.eq.singleton_test_fail	.gvar
list.≡	.gvar
bool.≡	.gvar
_fixture.nil	.gvar
_fixture.singleton.false	.gvar
eq	.apply	list.≡	bool.t	|	bool.≡	_fixture.nil	_fixture.singleton.false
test	.apply	test.deny	|	_test.nil.eq.singleton_test_succ	_test.nil.eq.singleton_test_fail	eq
	.app	_test.nil.eq.singleton_label	test
	.enter	test.property.label

-- §section §gs{list.compare [false] [false]}

_test.compare.singleton.singleton_c	.expr
order.total.ord.t	.tygvar
bool.t	.tygvar
test.property.label	.gvar
_test.compare.singleton.singleton_label	.gvar
test.assert.eq	.gvar
order.total.ord.≡	.gvar
order.total.ord.fmtgs	.gvar
list.compare	.gvar
bool.compare	.gvar
_fixture.singleton.false	.gvar
order.total.ord.eq	.gvar
actual	.apply	list.compare	bool.t	|	bool.compare	_fixture.singleton.false	_fixture.singleton.false
test	.apply	test.assert.eq	order.total.ord.t	|	order.total.ord.≡	order.total.ord.fmtgs	actual	order.total.ord.eq
	.app	_test.compare.singleton.singleton_label	test
	.enter	test.property.label

-- §section §gs{fmtgs nil}

_test.fmtgs.nil_c	.expr
bool.t	.tygvar
rune.t	.tygvar
list.t	.tygvar
test.property.label	.gvar
_test.fmtgs.nil_label	.gvar
test.assert	.gvar
_test.fmtgs.nil_test_fail	.gvar
_test.fmtgs.nil_test_succ	.gvar
list.fmtgs	.gvar
list.fmtgs.byDefault	.gvar
bool.fmtgs	.gvar
_fixture.nil	.gvar
fmtgs.prec.app	.gvar
list.nil	.gvar
list.≡	.gvar
rune.≡	.gvar
_test.fmtgs.nil_test_expected	.gvar
p0	.apply	list.fmtgs.byDefault	bool.t	|	bool.fmtgs
snil	.apply	list.nil	rune.t
s0	.apply	list.fmtgs	bool.t	|	p0	_fixture.nil	fmtgs.prec.app	snil
eq	.apply	list.≡	rune.t	|	rune.≡	s0	_test.fmtgs.nil_test_expected
test	.apply	test.assert	|	_test.fmtgs.nil_test_fail	_test.fmtgs.nil_test_succ	eq
	.app	_test.fmtgs.nil_label	test
	.enter	test.property.label

-- §section §gs{map f nil}

_test.map.nil_c	.expr
list.t	.tygvar
bool.t	.tygvar
test.property.label	.gvar
_test.map.nil_label	.gvar
test.assert.eq	.gvar
_fixture.list.bool.≡	.gvar
_fixture.list.bool.fmtgs	.gvar
_fixture.nil	.gvar
list.map	.gvar
bool.not	.gvar
list.ty	.tylet	list.t	bool.t
actual	.apply	list.map	bool.t	bool.t	|	bool.not	_fixture.nil
test	.apply	test.assert.eq	list.ty	|	_fixture.list.bool.≡	_fixture.list.bool.fmtgs	actual	_fixture.nil
	.app	_test.map.nil_label	test
	.enter	test.property.label

-- §section §gs{map f (_:_)}

_test.map.:_c	.expr
list.t	.tygvar
bool.t	.tygvar
test.property.label	.gvar
_test.map.:_label	.gvar
test.assert.eq	.gvar
_fixture.list.bool.≡	.gvar
_fixture.list.bool.fmtgs	.gvar
list.map	.gvar
bool.not	.gvar
_fixture.singleton.false	.gvar
list.:	.gvar
bool.true	.gvar
_fixture.nil	.gvar
list.ty	.tylet	list.t	bool.t
actual	.apply	list.map	bool.t	bool.t	|	bool.not	_fixture.singleton.false
expected	.apply	list.:	bool.t	|	bool.true	_fixture.nil
test	.apply	test.assert.eq	list.ty	|	_fixture.list.bool.≡	_fixture.list.bool.fmtgs	actual	expected
	.app	_test.map.:_label	test
	.enter	test.property.label

-- §section §gs{reverse nil}

_test.reverse.nil_c	.expr
list.t	.tygvar
bool.t	.tygvar
test.property.label	.gvar
_test.reverse.nil_label	.gvar
test.assert.eq	.gvar
_fixture.list.bool.≡	.gvar
_fixture.list.bool.fmtgs	.gvar
list.reverse	.gvar
_fixture.nil	.gvar
list.bool	.tylet	list.t	bool.t
actual	.apply	list.reverse	bool.t	|	_fixture.nil
test	.apply	test.assert.eq	list.bool	|	_fixture.list.bool.≡	_fixture.list.bool.fmtgs	actual	_fixture.nil
	.app	_test.reverse.nil_label	test
	.enter	test.property.label

-- §section §gs{reverse (false:true:nil)}

_test.reverse.cons_c	.expr
list.t	.tygvar
bool.t	.tygvar
test.property.label	.gvar
_test.reverse.cons_label	.gvar
test.assert.eq	.gvar
_fixture.list.bool.≡	.gvar
_fixture.list.bool.fmtgs	.gvar
list.reverse	.gvar
list.:	.gvar
bool.false	.gvar
bool.true	.gvar
list.nil	.gvar
list.bool	.tylet	list.t	bool.t
bs2	.apply	list.nil	bool.t
bs1	.apply	list.:	bool.t	|	bool.true	bs2
bs	.apply	list.:	bool.t	|	bool.false	bs1
actual	.apply	list.reverse	bool.t	|	bs
exp2	.apply	list.nil	bool.t
exp1	.apply	list.:	bool.t	|	bool.false	exp2
expected	.apply	list.:	bool.t	|	bool.true	exp1
test	.apply	test.assert.eq	list.bool	|	_fixture.list.bool.≡	_fixture.list.bool.fmtgs	actual	expected
	.app	_test.reverse.cons_label	test
	.enter	test.property.label

-- §section Test fixtures

_fixture.nil.c	.expr
bool.t	.tygvar
list.nil	.gvar
	.enter	list.nil	bool.t

_fixture.singleton.false.c	.expr
bool.t	.tygvar
list.:	.gvar
bool.false	.gvar
_fixture.nil	.gvar
	.app	bool.false	_fixture.nil
	.enter	list.:	bool.t

_fixture.list.bool.≡_c	.expr
bool.t	.tygvar
list.≡	.gvar
bool.≡	.gvar
	.app	bool.≡
	.enter	list.≡	bool.t

_fixture.list.bool.fmtgs_c	.expr
bool.t	.tygvar
list.fmtgs	.gvar
bool.fmtgs.list	.gvar
	.app	bool.fmtgs.list
	.enter	list.fmtgs	bool.t
