#calculus: gsdl.string-code 0.3

	.prefix

	.data

gsac.gskind.check	.closure	_gsac.gskind.check_c	_gsac.gskind.check_ty

gsac.gskind.check.simple	.closure	_gsac.gskind.check.simple_c

gsac.gskind.compile	.closure	_gsac.gskind.compile_c	_gsac.gskind.compile_ty

	.code

-- §section §gs{gsac.gskind.check}

_gsac.gskind.check_c	.expr
gsdl.cgs.gskind.t	.tygvar
_gsac.gskind.check_k0	.subcode
gsdl.cgs.gskind.t.out	.cogvar
ki0	.larg	gsdl.cgs.gskind.t
ki1	.larg	gsdl.cgs.gskind.t
	.force	_gsac.gskind.check_k0
	.coerce	gsdl.cgs.gskind.t.out
	.enter	ki0

_gsac.gskind.check_k0	.forcecont
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.gskind.prim.u	.tygvar
_gsac.gskind.check_k1	.subcode
gsdl.cgs.gskind.t.out	.cogvar
ki1	.fv	gsdl.cgs.gskind.t
ki0.0	.karg	gsdl.cgs.gskind.prim.u
	.force	_gsac.gskind.check_k1
	.coerce	gsdl.cgs.gskind.t.out
	.enter	ki1

_gsac.gskind.check_k1	.forcecont
gsdl.cgs.gskind.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	-- Temp
_gsac.gskind.check_exp_exp_k	.subcode
either.t.out	.cogvar
gsac.gskind.check	.gvar
either.right	.gvar
record.empty	.gvar
ki0.0	.fv	gsdl.cgs.gskind.prim.u
ki1.0	.karg	gsdl.cgs.gskind.prim.u
	.analyze	ki1.0	exp	lifted	unknown	unlifted
		.case	exp
ki0.b		.fkarg	0	gsdl.cgs.gskind.t
ki0.e		.fkarg	1	gsdl.cgs.gskind.t
			.danalyze	ki1.0	exp
				.default
					.undef	either.t	string.t	record.empty
				.case	exp
ki1.b				.fkarg	0	gsdl.cgs.gskind.t
ki1.e				.fkarg	1	gsdl.cgs.gskind.t
					.force	_gsac.gskind.check_exp_exp_k
					.coerce	either.t.out	string.t	record.empty
					.app	ki0.b	ki1.b
					.enter	gsac.gskind.check
		.case	lifted
			.danalyze	ki0.0	lifted
				.default
					.undef	either.t	string.t	record.empty
				.case	lifted
					.app	record.empty
					.enter	either.right	string.t	record.empty
		.case	unknown
			.analyze	ki0.0	exp	lifted	unknown	unlifted
				.case	exp
ki.b				.fkarg	0	gsdl.cgs.gskind.t
ki.e				.fkarg	1	gsdl.cgs.gskind.t
					.undef	either.t	string.t	record.empty
				.case	lifted
					.app	record.empty
					.enter	either.right	string.t	record.empty
				.case	unknown
					.app	record.empty
					.enter	either.right	string.t	record.empty
				.case	unlifted
					.app	record.empty
					.enter	either.right	string.t	record.empty
		.case	unlifted
			.danalyze	ki0.0	unlifted
				.default
					.undef	either.t	string.t	record.empty
				.case	unlifted
					.app	record.empty
					.enter	either.right	string.t	record.empty
	-- > :: either.t	string.t	record.empty

_gsac.gskind.check_exp_exp_k	.forcecont
gsdl.cgs.gskind.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	-- Temp
gsac.gskind.check	.gvar
ki0.e	.fv	gsdl.cgs.gskind.t
ki1.e	.fv	gsdl.cgs.gskind.t
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	record.empty
		.case	right
r0		.fkarg	0	record.empty
			.app	ki1.e	ki0.e
			.enter	gsac.gskind.check

-- §section §gs{gsac.gskind.check.simple}

_gsac.gskind.check.simple_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
_gsac.gskind.check.simple_k	.subcode
gsdl.cgs.gskind.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
ki	.larg	gsdl.cgs.gskind.t
	.force	_gsac.gskind.check.simple_k
	.coerce	gsdl.cgs.gskind.t.out
	.enter	ki

_gsac.gskind.check.simple_k	.forcecont
gsdl.cgs.gskind.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	-- Temp
either.right	.gvar
record.empty	.gvar
ki0	.karg	gsdl.cgs.gskind.prim.u
	.analyze	ki0	exp	lifted	unknown	unlifted
		.case	exp
kib		.fkarg	0	gsdl.cgs.gskind.t
kie		.fkarg	1	gsdl.cgs.gskind.t
			.undef	either.t	string.t	record.empty
		.case	lifted
			.app	record.empty
			.enter	either.right	string.t	record.empty
		.case	unknown
			.undef	either.t	string.t	record.empty
		.case	unlifted
			.app	record.empty
			.enter	either.right	string.t	record.empty
	-- > :: either.t	string.t	record.empty

-- §section §gs{gsac.gskind.compile}

_gsac.gskind.compile_c	.expr
gsdl.cgs.gskind.t	.tygvar
_gsac.gskind.compile_k	.subcode
gsdl.cgs.gskind.t.out	.cogvar
ki	.larg	gsdl.cgs.gskind.t
	.force	_gsac.gskind.compile_k
	.coerce	gsdl.cgs.gskind.t.out
	.enter	ki

_gsac.gskind.compile_k	.forcecont
gsdl.cgs.gskind.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.ags.typeitem.gskind.exp	.gvar
gsac.gskind.compile	.gvar
gsdl.ags.typeitem.gskind.lifted	.gvar
gsdl.ags.typeitem.gskind.unknown	.gvar
gsdl.ags.typeitem.gskind.unlifted	.gvar
ki0	.karg	gsdl.cgs.gskind.prim.u
	.analyze	ki0	exp	lifted	unknown	unlifted
		.case	exp
kib		.fkarg	0	gsdl.cgs.gskind.t
kie		.fkarg	1	gsdl.cgs.gskind.t
kib.ags			.apply	gsac.gskind.compile	|	kib
kie.ags			.apply	gsac.gskind.compile	|	kie
			.app	kib.ags	kie.ags
			.enter	gsdl.ags.typeitem.gskind.exp
		.case	lifted
			.enter	gsdl.ags.typeitem.gskind.lifted
		.case	unknown
			.enter	gsdl.ags.typeitem.gskind.unknown
		.case	unlifted
			.enter	gsdl.ags.typeitem.gskind.unlifted
	-- > :: gsdl.ags.typeitem.gskind.t

	.type

-- §section §gs{gsac.gskind.check}

_gsac.gskind.check_ty	.tyexpr
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gskind.t
	.tylift
	.tyfun	gsdl.cgs.gskind.t
	.tyref	either.t	string.t	record.empty

-- §section §gs{gsac.gskind.compile}

_gsac.gskind.compile_ty	.tyexpr
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gskind.t
	.tyref	gsdl.ags.typeitem.gskind.t
