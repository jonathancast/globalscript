	.document

	.data

	.closure	_ep_c

_tests	.list	test.property.t	_test_items_empty	_test_items_gsabstype.nm	_test_items_gsabstype.defn	_test_item	_test_item.name	_test_file.add	_test.typecheck_gsabstype.kind

_test_items_empty	.closure	_test_items_empty_c
_test_items_empty_label	.string	items\sempty

_test_items_gsabstype.nm	.closure	_test_items_gsabstype.nm_c
_test_items_gsabstype.nm_label	.string	items\s$\sgstypefnitem.gsabstype.insert\sempty
_test_items_gsabstype.nm_x.s	.string	x

_test_items_gsabstype.defn	.closure	_test_items_gsabstype.defn_c
_test_items_gsabstype.defn_label	.string	items\s$\sgstypeconstitem.gsabstype.insert\sempty
_test_items_gsabstype.defn_x.s	.string	x

_test_item	.closure	_test_item_c

_tests_item	.list	test.property.t	_test_item_eq_x.x	_test_item_eq_diff.nm	_test_item_eq_diff.kind

_test_item_eq_x.x	.closure	_test_item_eq_x.x_c
_test_item_eq_x.x_label	.string	item.gsabstype\snm\ski\s≡\sitem.gsabstype\snm\ski
_test_item_eq_x.x_false	.string	item.gsabstype\snm\ski\s≠sitem.gsabstype\snm\ski
_test_item_eq_x.x_true	.string	item.gsabstype\snm\ski\s≡\sitem.gsabstype\snm\ski
_test_item_eq_x.x_x.s	.string	x

_test_item_eq_diff.nm	.closure	_test_item_eq_diff.nm_c
_test_item_eq_diff.nm_label	.string	item.gsabstype\sx\ski\s≡\sitem.gsabstype\sy\ski
_test_item_eq_diff.nm_false	.string	item.gsabstype\sx\ski\s≠\sitem.gsabstype\sy\ski
_test_item_eq_diff.nm_true	.string	item.gsabstype\sx\ski\s≡\sitem.gsabstype\sy\ski
_test_item_eq_diff.nm_x.s	.string	x
_test_item_eq_diff.nm_y.s	.string	y

_test_item_eq_diff.kind	.closure	_test_item_eq_diff.kind_c
_test_item_eq_diff.kind_label	.string	item.gsabstype\snm\slifted\s≡\sitem.gsabstype\snm\sunlifted
_test_item_eq_diff.kind_false	.string	item.gsabstype\snm\slifted\s≠\sitem.gsabstype\snm\sunlifted
_test_item_eq_diff.kind_true	.string	item.gsabstype\snm\slifted\s≡\sitem.gsabstype\snm\sunlifted
_test_item_eq_diff.kind_x.s	.string	x

_test_item.name	.closure	_test_item.name_c
_test_item.name_label	.string	item.name

_tests_item.name	.list	test.property.t	_tests_item.name_gsabstypenm

_tests_item.name_gsabstypenm	.closure	_tests_item.name_gsabstypenm_c
_tests_item.name_gsabstypenm_label	.string	item.name\sgsabstypenm
_tests_item.name_gsabstypenm_x.s	.string	x

_test_file.add	.closure	_test_file.add_c
_test_file.add_label	.string	file.add

_tests_file.add	.list	test.property.t	_test_file.add_gsdocument	_test_file.add_gsabstype

_test_file.add_gsdocument	.closure	_test_file.add_gsdocument_c
_test_file.add_gsdocument_label	.string	file.add\signores\sdocuments

_test_file.add_gsabstype	.closure	_test_file.add_gsabstype_c
_test_file.add_gsabstype_label	.string	file.add\scan\sreturn\sa\sgsabstype
_test_file.add_gsabstype_x.s	.string	x

_test.typecheck_gsabstype.kind	.closure	_test.typecheck_gsabstype.kind_c
_test.typecheck_gsabstype.kind_label	.string	prefix.typecheck\scan\sreturn\skinds
_test.typecheck_gsabstype.kind_test_ty.s	.string	ty
_test.typecheck_gsabstype.kind_test_left_prefix.s	.string	prefix.typecheck\sfailed:\s
_test.typecheck_gsabstype.kind_test_right_nothing_failed.s	.string	gskind.get\sfailed

_fixtures.filenm	.closure	_fixtures.filenm_c
_fixtures.filenm_s	.string	./foo.cgs

	.code

_ep_c	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section §gs{items empty}

_test_items_empty_c	.expr
list.t	.tygvar
gsac.prefix.item.t	.tygvar
test.property.label	.gvar
_test_items_empty_label	.gvar
test.assert.eq	.gvar
list.≡	.gvar
gsac.prefix.item.≡	.gvar
list.fmtgs.byDefault	.gvar
gsac.prefix.item.fmtgs	.gvar
gsac.prefix.items	.gvar
gsac.prefix.empty	.gvar
list.nil	.gvar
list.item.ty	.tylet	list.t	gsac.prefix.item.t
list.item.≡	.apply	list.≡	gsac.prefix.item.t	|	gsac.prefix.item.≡
list.item.fmtgs	.apply	list.fmtgs.byDefault	gsac.prefix.item.t	|	gsac.prefix.item.fmtgs
actual	.apply	gsac.prefix.items	|	gsac.prefix.empty
expected	.apply	list.nil	gsac.prefix.item.t
test	.apply	test.assert.eq	list.item.ty	|	list.item.≡	list.item.fmtgs	actual	expected
	.app	_test_items_empty_label	test
	.enter	test.property.label

# §section §gs{items $ gstypefnitem.gsabstype.insert $ empty}

_test_items_gsabstype.nm_c	.expr
list.t	.tygvar
gsac.prefix.item.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
test.property.label	.gvar
_test_items_gsabstype.nm_label	.gvar
test.assert.eq	.gvar
gsac.prefix.item.≡	.gvar
list.≡	.gvar
list.fmtgs.byDefault	.gvar
gsac.prefix.item.fmtgs	.gvar
gsac.prefix.items	.gvar
gsac.prefix.typefnitem.gsabstype.insert	.gvar
natural.1	.gvar
_fixtures.filenm	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test_items_gsabstype.nm_x.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
gsac.prefix.empty	.gvar
gsac.prefix.item.typefnitem	.gvar
gsac.prefix.typefnitem.gsabstypenm	.gvar
list.item.ty	.tylet	list.t	gsac.prefix.item.t
list.item.≡	.apply	list.≡	gsac.prefix.item.t	|	gsac.prefix.item.≡
list.item.fmtgs	.apply	list.fmtgs.byDefault	gsac.prefix.item.t	|	gsac.prefix.item.fmtgs
pos	.lrecord	0.col	natural.1	0.line	natural.1	file	_fixtures.filenm	|	gsdl.sourcepos.t
v.c0	.apply	gsdl.var.component.alphanum	|	_test_items_gsabstype.nm_x.s
v.cs	.apply	list.singleton	gsdl.var.component.t	|	v.c0
v	.apply	gsdl.var.basevar	|	v.cs
pr	.apply	gsac.prefix.typefnitem.gsabstype.insert	|	pos	v	gsdl.cgs.gskind.lifted	gsac.prefix.empty
actual	.apply	gsac.prefix.items	|	pr
absty.ti	.apply	gsac.prefix.typefnitem.gsabstypenm	|	pos	v	gsdl.cgs.gskind.lifted
absty	.apply	gsac.prefix.item.typefnitem	|	absty.ti
expected	.apply	list.singleton	gsac.prefix.item.t | 	absty
test	.apply	test.assert.eq	list.item.ty	|	list.item.≡	list.item.fmtgs	actual	expected
	.app	_test_items_gsabstype.nm_label	test
	.enter	test.property.label

# §section §gs{items $ gstypeconstitem.gsabstype.insert $ empty}

_test_items_gsabstype.defn_c	.expr
list.t	.tygvar
gsac.prefix.item.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
gsdl.ags.typeitem.decls.t	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
test.property.label	.gvar
_test_items_gsabstype.defn_label	.gvar
test.assert.eq	.gvar
gsac.prefix.item.≡	.gvar
list.≡	.gvar
list.fmtgs.byDefault	.gvar
gsac.prefix.item.fmtgs	.gvar
gsac.prefix.items	.gvar
gsac.prefix.typeconstitem.gsabstype.insert	.gvar
natural.1	.gvar
_fixtures.filenm	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test_items_gsabstype.defn_x.s	.gvar
gsdl.ags.typeitem.gskind.lifted	.gvar
list.nil	.gvar
gsdl.ags.typeitem.expr.lift	.gvar
gsdl.ags.typeitem.expr.product	.gvar
gsac.prefix.empty	.gvar
gsac.prefix.item.typeconstitem	.gvar
gsac.prefix.typeconstitem.gsabstypedefn	.gvar
list.item.ty	.tylet	list.t	gsac.prefix.item.t
list.item.≡	.apply	list.≡	gsac.prefix.item.t	|	gsac.prefix.item.≡
list.item.fmtgs	.apply	list.fmtgs.byDefault	gsac.prefix.item.t	|	gsac.prefix.item.fmtgs
pos	.lrecord	0.col	natural.1	0.line	natural.1	file	_fixtures.filenm	|	gsdl.sourcepos.t
v.c0	.apply	gsdl.var.component.alphanum	|	_test_items_gsabstype.defn_x.s
v.cs	.apply	list.singleton	gsdl.var.component.t	|	v.c0
v	.apply	gsdl.var.basevar	|	v.cs
decls.tygvs	.apply	list.nil	gsdl.ags.typeitem.decls.tygvar.t
decls	.lrecord	tygvars	decls.tygvs	|	gsdl.ags.typeitem.decls.t
expr.fields	.apply	list.nil	gsdl.ags.typeitem.field.t
expr1	.apply	gsdl.ags.typeitem.expr.product	|	expr.fields
expr	.apply	gsdl.ags.typeitem.expr.lift	|	expr1
pr	.apply	gsac.prefix.typeconstitem.gsabstype.insert	|	pos	v	gsdl.ags.typeitem.gskind.lifted	decls	expr	gsac.prefix.empty
actual	.apply	gsac.prefix.items	|	pr
absty.ti	.apply	gsac.prefix.typeconstitem.gsabstypedefn	|	pos	v	gsdl.ags.typeitem.gskind.lifted	decls	expr
absty	.apply	gsac.prefix.item.typeconstitem	|	absty.ti
expected	.apply	list.singleton	gsac.prefix.item.t | 	absty
test	.apply	test.assert.eq	list.item.ty	|	list.item.≡	list.item.fmtgs	actual	expected
	.app	_test_items_gsabstype.defn_label	test
	.enter	test.property.label

# §section §gs{item.≡}

_test_item_c	.expr
test.all	.gvar
_tests_item	.gvar
	.app	_tests_item
	.enter	test.all

# §subsection §gs{item.gsabstype nm ki ≡ item.gsabstype nm ki}

_test_item_eq_x.x_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
test.property.label	.gvar
_test_item_eq_x.x_label	.gvar
test.assert	.gvar
_test_item_eq_x.x_false	.gvar
_test_item_eq_x.x_true	.gvar
gsac.prefix.typefnitem.≡	.gvar
gsac.prefix.typefnitem.gsabstypenm	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test_item_eq_x.x_x.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
pos	.undefined	gsdl.sourcepos.t
v.c0	.apply	gsdl.var.component.alphanum	|	_test_item_eq_x.x_x.s
v.cs	.apply	list.singleton	gsdl.var.component.t	|	v.c0
v	.apply	gsdl.var.basevar	|	v.cs
absty	.apply	gsac.prefix.typefnitem.gsabstypenm	|	pos	v	gsdl.cgs.gskind.lifted
eq	.apply	gsac.prefix.typefnitem.≡	|	absty	absty
test	.apply	test.assert	|	_test_item_eq_x.x_false	_test_item_eq_x.x_true	eq
	.app	_test_item_eq_x.x_label	test
	.enter	test.property.label

# §subsection §gs{item.gsabstype x ki ≡ item.gsabstype y ki}

_test_item_eq_diff.nm_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
test.property.label	.gvar
_test_item_eq_diff.nm_label	.gvar
test.deny	.gvar
_test_item_eq_diff.nm_false	.gvar
_test_item_eq_diff.nm_true	.gvar
gsac.prefix.typefnitem.≡	.gvar
gsac.prefix.typefnitem.gsabstypenm	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test_item_eq_diff.nm_x.s	.gvar
_test_item_eq_diff.nm_y.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
pos	.undefined	gsdl.sourcepos.t
x.c0	.apply	gsdl.var.component.alphanum	|	_test_item_eq_diff.nm_x.s
x.cs	.apply	list.singleton	gsdl.var.component.t	|	x.c0
x.v	.apply	gsdl.var.basevar	|	x.cs
absty.x	.apply	gsac.prefix.typefnitem.gsabstypenm	|	pos	x.v	gsdl.cgs.gskind.lifted
y.c0	.apply	gsdl.var.component.alphanum	|	_test_item_eq_diff.nm_y.s
y.cs	.apply	list.singleton	gsdl.var.component.t	|	y.c0
y.v	.apply	gsdl.var.basevar	|	y.cs
absty.y	.apply	gsac.prefix.typefnitem.gsabstypenm	|	pos	y.v	gsdl.cgs.gskind.lifted
eq	.apply	gsac.prefix.typefnitem.≡	|	absty.x	absty.y
test	.apply	test.deny	|	_test_item_eq_diff.nm_false	_test_item_eq_diff.nm_true	eq
	.app	_test_item_eq_diff.nm_label	test
	.enter	test.property.label

# §subsection §gs{item.gsabstype nm lifted ≡ item.gsabstype nm unlifted}

_test_item_eq_diff.kind_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
test.property.label	.gvar
_test_item_eq_diff.kind_label	.gvar
test.deny	.gvar
_test_item_eq_diff.kind_false	.gvar
_test_item_eq_diff.kind_true	.gvar
gsac.prefix.typefnitem.≡	.gvar
gsac.prefix.typefnitem.gsabstypenm	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test_item_eq_diff.kind_x.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
gsdl.cgs.gskind.unlifted	.gvar
pos	.undefined	gsdl.sourcepos.t
c0	.apply	gsdl.var.component.alphanum	|	_test_item_eq_diff.kind_x.s
cs	.apply	list.singleton	gsdl.var.component.t	|	c0
v	.apply	gsdl.var.basevar	|	cs
absty.l	.apply	gsac.prefix.typefnitem.gsabstypenm	|	pos	v	gsdl.cgs.gskind.lifted
absty.u	.apply	gsac.prefix.typefnitem.gsabstypenm	|	pos	v	gsdl.cgs.gskind.unlifted
eq	.apply	gsac.prefix.typefnitem.≡	|	absty.l	absty.u
test	.apply	test.deny	|	_test_item_eq_diff.kind_false	_test_item_eq_diff.kind_true	eq
	.app	_test_item_eq_diff.kind_label	test
	.enter	test.property.label

# §section §gs{item.name}

_test_item.name_c	.expr
test.property.label	.gvar
_test_item.name_label	.gvar
test.all	.gvar
_tests_item.name	.gvar
test	.apply	test.all	|	_tests_item.name
	.app	_test_item.name_label	test
	.enter	test.property.label

# §subsection §gs{item.name (gsabstypenm _ _ _)}

_tests_item.name_gsabstypenm_c	.expr
gsdl.cgs.symbol.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
test.property.label	.gvar
_tests_item.name_gsabstypenm_label	.gvar
test.assert.eq	.gvar
gsdl.cgs.symbol.≡	.gvar
gsdl.cgs.symbol.fmtgs	.gvar
gsac.prefix.item.name	.gvar
gsac.prefix.item.typefnitem	.gvar
gsac.prefix.typefnitem.gsabstypenm	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_tests_item.name_gsabstypenm_x.s	.gvar
gsdl.cgs.symbol.tyvar	.gvar
pos	.undefined	gsdl.sourcepos.t
v.c0	.apply	gsdl.var.component.alphanum	|	_tests_item.name_gsabstypenm_x.s
v.cs	.apply	list.singleton	gsdl.var.component.t	|	v.c0
v	.apply	gsdl.var.basevar	|	v.cs
ki	.undefined	gsdl.cgs.gskind.t
ti	.apply	gsac.prefix.typefnitem.gsabstypenm	|	pos	v	ki
it	.apply	gsac.prefix.item.typefnitem	|	ti
actual	.apply	gsac.prefix.item.name	|	it
expected	.apply	gsdl.cgs.symbol.tyvar	|	v
test	.apply	test.assert.eq	gsdl.cgs.symbol.t	|	gsdl.cgs.symbol.≡	gsdl.cgs.symbol.fmtgs	actual	expected
	.app	_tests_item.name_gsabstypenm_label	test
	.enter	test.property.label

# §section §gs{prefix.add.file} Tests

_test_file.add_c	.expr
test.property.label	.gvar
_test_file.add_label	.gvar
test.all	.gvar
_tests_file.add	.gvar
test	.apply	test.all	|	_tests_file.add
	.app	_test_file.add_label	test
	.enter	test.property.label

# §subsection §gs{prefix.add.file} ignores documents

_test_file.add_gsdocument_c	.expr
list.t	.tygvar
gsac.prefix.item.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.coercionitem.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.file.t	.tygvar
test.property.label	.gvar
_test_file.add_gsdocument_label	.gvar
test.assert.eq	.gvar
gsac.prefix.item.≡	.gvar
list.≡	.gvar
list.fmtgs.byDefault	.gvar
gsac.prefix.item.fmtgs	.gvar
gsac.prefix.items	.gvar
gsac.prefix.file.add	.gvar
list.nil	.gvar
gsdl.ags.file.filetype.gsdocument	.gvar
gsac.prefix.empty	.gvar
list.item.ty	.tylet	list.t	gsac.prefix.item.t
list.item.≡	.apply	list.≡	gsac.prefix.item.t	|	gsac.prefix.item.≡
list.item.fmtgs	.apply	list.fmtgs.byDefault	gsac.prefix.item.t	|	gsac.prefix.item.fmtgs
cs	.undefined	list.t	gsdl.ags.codeitem.t
cos	.undefined	list.t	gsdl.ags.coercionitem.t
ds	.undefined	list.t	gsdl.ags.dataitem.t
tys	.undefined	list.t	gsdl.ags.typeitem.t
inprfx	.lrecord	codesection	cs	coercionsection	cos	datasection	ds	filetype	gsdl.ags.file.filetype.gsdocument	typesection	tys	|	gsdl.ags.file.t
pr	.apply	gsac.prefix.file.add	|	inprfx	gsac.prefix.empty
actual	.apply	gsac.prefix.items	|	pr
expected	.apply	list.nil	gsac.prefix.item.t
test	.apply	test.assert.eq	list.item.ty	|	list.item.≡	list.item.fmtgs	actual	expected
	.app	_test_file.add_gsdocument_label	test
	.enter	test.property.label

# §subsection §gs{prefix.add.file gsabstype}

_test_file.add_gsabstype_c	.expr
list.t	.tygvar
gsac.prefix.item.t	.tygvar
gsdl.ags.codeitem.t	.tygvar
gsdl.ags.coercionitem.t	.tygvar
gsdl.ags.dataitem.t	.tygvar
gsdl.ags.typeitem.t	.tygvar	# Temp

gsdl.ags.file.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
gsdl.ags.typeitem.decls.t	.tygvar	# Temp
gsdl.ags.typeitem.expr.t	.tygvar	# Temp
test.property.label	.gvar
_test_file.add_gsabstype_label	.gvar
test.assert.eq	.gvar
gsac.prefix.item.≡	.gvar
list.≡	.gvar
list.fmtgs.byDefault	.gvar
gsac.prefix.item.fmtgs	.gvar
gsac.prefix.items	.gvar
gsac.prefix.file.add	.gvar
list.nil	.gvar
gsdl.ags.typeitem.tyabstract	.gvar
gsdl.ags.typeitem.gskind.lifted	.gvar
gsdl.ags.file.filetype.gsprefix	.gvar
natural.1	.gvar
_fixtures.filenm	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test_file.add_gsabstype_x.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
gsac.prefix.empty	.gvar
gsac.prefix.item.typefnitem	.gvar
gsac.prefix.typefnitem.gsabstypenm	.gvar
list.item.ty	.tylet	list.t	gsac.prefix.item.t
list.item.≡	.apply	list.≡	gsac.prefix.item.t	|	gsac.prefix.item.≡
list.item.fmtgs	.apply	list.fmtgs.byDefault	gsac.prefix.item.t	|	gsac.prefix.item.fmtgs
pos	.lrecord	0.col	natural.1	0.line	natural.1	file	_fixtures.filenm	|	gsdl.sourcepos.t
v.c0	.apply	gsdl.var.component.alphanum	|	_test_file.add_gsabstype_x.s
v.cs	.apply	list.singleton	gsdl.var.component.t	|	v.c0
v	.apply	gsdl.var.basevar	|	v.cs
cs	.apply	list.nil	gsdl.ags.codeitem.t
cos	.apply	list.nil	gsdl.ags.coercionitem.t
ds	.apply	list.nil	gsdl.ags.dataitem.t
decls	.undefined	gsdl.ags.typeitem.decls.t
tye	.undefined	gsdl.ags.typeitem.expr.t
ti	.apply	gsdl.ags.typeitem.tyabstract	|	pos	v	gsdl.ags.typeitem.gskind.lifted	decls	tye
tys	.apply	list.singleton	gsdl.ags.typeitem.t	|	ti
inprfx	.lrecord	codesection	cs	coercionsection	cos	datasection	ds	filetype	gsdl.ags.file.filetype.gsprefix	typesection	tys	|	gsdl.ags.file.t
pr	.apply	gsac.prefix.file.add	|	inprfx	gsac.prefix.empty
actual	.apply	gsac.prefix.items	|	pr
absty.ti	.apply	gsac.prefix.typefnitem.gsabstypenm	|	pos	v	gsdl.cgs.gskind.lifted
absty	.apply	gsac.prefix.item.typefnitem	|	absty.ti
expected	.apply	list.singleton	gsac.prefix.item.t | 	absty
test	.apply	test.assert.eq	list.item.ty	|	list.item.≡	list.item.fmtgs	actual	expected
	.app	_test_file.add_gsabstype_label	test
	.enter	test.property.label

# §section §gs{prefix.typecheck} can return the kind of an abstract type

_test.typecheck_gsabstype.kind_c	.expr
_test.typecheck_gsabstype.kind_test_c	.subcode
test.property.label	.gvar
_test.typecheck_gsabstype.kind_label	.gvar
test	.alloc	_test.typecheck_gsabstype.kind_test_c
	.app	_test.typecheck_gsabstype.kind_label	test
	.enter	test.property.label

_test.typecheck_gsabstype.kind_test_c	.expr
string.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.component.t	.tygvar
_test.typecheck_gsabstype.kind_test_k	.subcode
either.t.out	.cogvar
gsac.prefix.typecheck	.gvar
gsdl.cgs.typeenv.empty	.gvar
gsac.prefix.typefnitem.gsabstype.insert	.gvar
natural.1	.gvar
_fixtures.filenm	.gvar
gsdl.var.basevar	.gvar
list.singleton	.gvar
gsdl.var.component.alphanum	.gvar
_test.typecheck_gsabstype.kind_test_ty.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
gsac.prefix.empty	.gvar
pos	.lrecord	0.col	natural.1	0.line	natural.1	file	_fixtures.filenm	|	gsdl.sourcepos.t
v.c0	.apply	gsdl.var.component.alphanum	|	_test.typecheck_gsabstype.kind_test_ty.s
v.cs	.apply	list.singleton	gsdl.var.component.t	|	v.c0
v	.apply	gsdl.var.basevar	|	v.cs
pr	.apply	gsac.prefix.typefnitem.gsabstype.insert	|	pos	v	gsdl.cgs.gskind.lifted	gsac.prefix.empty
	.force	_test.typecheck_gsabstype.kind_test_k
	.coerce	either.t.out	string.t	gsdl.cgs.typeenv.t
	.app	gsdl.cgs.typeenv.empty	pr
	.enter	gsac.prefix.typecheck

_test.typecheck_gsabstype.kind_test_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
rune.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
_test.typecheck_gsabstype.kind_test_right_k	.subcode
maybe.t.out	.cogvar
test.property.false	.gvar
list.<>	.gvar
_test.typecheck_gsabstype.kind_test_left_prefix.s	.gvar
gsdl.cgs.typeenv.gskind.get	.gvar
v	.fv	gsdl.var.t
eenv0	.karg	either.prim.u	string.t	gsdl.cgs.typeenv.t
	.analyze	eenv0	left	right
		.case	left
err		.fkarg	0	string.t
msg			.apply	list.<>	rune.t	|	_test.typecheck_gsabstype.kind_test_left_prefix.s	err
			.app	msg
			.enter	test.property.false
		.case	right
env		.fkarg	0	gsdl.cgs.typeenv.t
			.force	_test.typecheck_gsabstype.kind_test_right_k
			.coerce	maybe.t.out	gsdl.cgs.gskind.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.gskind.get

_test.typecheck_gsabstype.kind_test_right_k	.forcecont
maybe.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
test.true	.gvar
test.property.false	.gvar
_test.typecheck_gsabstype.kind_test_right_nothing_failed.s	.gvar
mb0	.karg	maybe.prim.u	gsdl.cgs.gskind.t
	.analyze	mb0	just	nothing
		.case	just
ki		.fkarg	0	gsdl.cgs.gskind.t
			.enter	test.true
		.case	nothing
			.app	_test.typecheck_gsabstype.kind_test_right_nothing_failed.s
			.enter	test.property.false

# §section Test Fixtures

_fixtures.filenm_c	.expr
ibio.file.name.in	.gvar
_fixtures.filenm_s	.gvar
	.app	_fixtures.filenm_s
	.enter	ibio.file.name.in
