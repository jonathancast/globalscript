	.document

	.data

	.closure	_ep_c

_tests	.list	test.property.t	_test_items_empty	_test_items_gsabstype	_test_item

_test_items_empty	.closure	_test_items_empty_c
_test_items_empty_label	.string	items\sempty

_test_items_gsabstype	.closure	_test_items_gsabstype_c
_test_items_gsabstype_label	.string	items\s$\sgsabstype.insert\sempty
_test_items_gsabstype_x.s	.string	x

_test_item	.closure	_test_item_c

_tests_item	.list	test.property.t	_test_item_eq_x.x	_test_item_eq_diff.nm	_test_item_eq_diff.kind

_test_item_eq_x.x	.closure	_test_item_eq_x.x_c
_test_item_eq_x.x_label	.string	item.gsabstype\snm\ski\s≡\sitem.gsabstype\snm\ski
_test_item_eq_x.x_false	.string	item.gsabstype\snm\ski\s≠sitem.gsabstype\snm\ski
_test_item_eq_x.x_true	.string	item.gsabstype\snm\ski\s≡\sitem.gsabstype\snm\ski
_test_item_eq_x.x_x.s	.string	x

_test_item_eq_diff.nm	.closure	_test_item_eq_diff.nm_c
_test_item_eq_diff.nm_label	.string	item.gsabstype\sx\ski\s≡\sitem.gsabstype\sy\ski
_test_item_eq_diff.nm_false	.string	item.gsabstype\sx\ski\s≠\sitem.gsabstype\sy\ski
_test_item_eq_diff.nm_true	.string	item.gsabstype\sx\ski\s≡\sitem.gsabstype\sy\ski
_test_item_eq_diff.nm_x.s	.string	x
_test_item_eq_diff.nm_y.s	.string	y

_test_item_eq_diff.kind	.closure	_test_item_eq_diff.kind_c
_test_item_eq_diff.kind_label	.string	item.gsabstype\snm\slifted\s≡\sitem.gsabstype\snm\sunlifted
_test_item_eq_diff.kind_false	.string	item.gsabstype\snm\slifted\s≠\sitem.gsabstype\snm\sunlifted
_test_item_eq_diff.kind_true	.string	item.gsabstype\snm\slifted\s≡\sitem.gsabstype\snm\sunlifted
_test_item_eq_diff.kind_x.s	.string	x

_fixtures.filenm	.closure	_fixtures.filenm_c
_fixtures.filenm_s	.string	./foo.cgs

	.code

_ep_c	.expr
test.all	.gvar
_tests	.gvar
	.app	_tests
	.enter	test.all

# §section §gs{items empty}

_test_items_empty_c	.expr
list.t	.tygvar
gsac.prefix.item.t	.tygvar
test.property.label	.gvar
_test_items_empty_label	.gvar
test.assert.eq	.gvar
list.≡	.gvar
gsac.prefix.item.≡	.gvar
list.fmtgs.byDefault	.gvar
gsac.prefix.item.fmtgs	.gvar
gsac.prefix.items	.gvar
gsac.prefix.empty	.gvar
list.nil	.gvar
list.item.ty	.tylet	list.t	gsac.prefix.item.t
list.item.≡	.apply	list.≡	gsac.prefix.item.t	|	gsac.prefix.item.≡
list.item.fmtgs	.apply	list.fmtgs.byDefault	gsac.prefix.item.t	|	gsac.prefix.item.fmtgs
actual	.apply	gsac.prefix.items	|	gsac.prefix.empty
expected	.apply	list.nil	gsac.prefix.item.t
test	.apply	test.assert.eq	list.item.ty	|	list.item.≡	list.item.fmtgs	actual	expected
	.app	_test_items_empty_label	test
	.enter	test.property.label

# §section §gs{items $ gsabstype.insert $ empty}

_test_items_gsabstype_c	.expr
list.t	.tygvar
gsac.prefix.item.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
test.property.label	.gvar
_test_items_gsabstype_label	.gvar
test.assert.eq	.gvar
gsac.prefix.item.≡	.gvar
list.≡	.gvar
list.fmtgs.byDefault	.gvar
gsac.prefix.item.fmtgs	.gvar
gsac.prefix.items	.gvar
gsac.prefix.typeitem.gsabstype.insert	.gvar
natural.1	.gvar
_fixtures.filenm	.gvar
list.singleton	.gvar
gsdl.cgs.syntax.var.component.alphanum	.gvar
_test_items_gsabstype_x.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
gsac.prefix.empty	.gvar
gsac.prefix.item.typeitem	.gvar
gsac.prefix.typeitem.gsabstype	.gvar
list.item.ty	.tylet	list.t	gsac.prefix.item.t
list.item.≡	.apply	list.≡	gsac.prefix.item.t	|	gsac.prefix.item.≡
list.item.fmtgs	.apply	list.fmtgs.byDefault	gsac.prefix.item.t	|	gsac.prefix.item.fmtgs
pos	.lrecord	0.col	natural.1	0.line	natural.1	file	_fixtures.filenm	|	gsdl.sourcepos.t
c0	.apply	gsdl.cgs.syntax.var.component.alphanum	|	_test_items_gsabstype_x.s
v	.apply	list.singleton	gsdl.cgs.syntax.var.component.t	|	c0
pr	.apply	gsac.prefix.typeitem.gsabstype.insert	|	pos	v	gsdl.cgs.gskind.lifted	gsac.prefix.empty
actual	.apply	gsac.prefix.items	|	pr
absty.ti	.apply	gsac.prefix.typeitem.gsabstype	|	pos	v	gsdl.cgs.gskind.lifted
absty	.apply	gsac.prefix.item.typeitem	|	absty.ti
expected	.apply	list.singleton	gsac.prefix.item.t | 	absty
test	.apply	test.assert.eq	list.item.ty	|	list.item.≡	list.item.fmtgs	actual	expected
	.app	_test_items_gsabstype_label	test
	.enter	test.property.label

# §section §gs{item.≡}

_test_item_c	.expr
test.all	.gvar
_tests_item	.gvar
	.app	_tests_item
	.enter	test.all

# §subsection §gs{item.gsabstype nm ki ≡ item.gsabstype nm ki}

_test_item_eq_x.x_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
test.property.label	.gvar
_test_item_eq_x.x_label	.gvar
test.assert	.gvar
_test_item_eq_x.x_false	.gvar
_test_item_eq_x.x_true	.gvar
gsac.prefix.typeitem.≡	.gvar
gsac.prefix.typeitem.gsabstype	.gvar
list.singleton	.gvar
gsdl.cgs.syntax.var.component.alphanum	.gvar
_test_item_eq_x.x_x.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
pos	.undefined	gsdl.sourcepos.t
c0	.apply	gsdl.cgs.syntax.var.component.alphanum	|	_test_item_eq_x.x_x.s
v	.apply	list.singleton	gsdl.cgs.syntax.var.component.t	|	c0
absty	.apply	gsac.prefix.typeitem.gsabstype	|	pos	v	gsdl.cgs.gskind.lifted
eq	.apply	gsac.prefix.typeitem.≡	|	absty	absty
test	.apply	test.assert	|	_test_item_eq_x.x_false	_test_item_eq_x.x_true	eq
	.app	_test_item_eq_x.x_label	test
	.enter	test.property.label

# §subsection §gs{item.gsabstype x ki ≡ item.gsabstype y ki}

_test_item_eq_diff.nm_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
test.property.label	.gvar
_test_item_eq_diff.nm_label	.gvar
test.deny	.gvar
_test_item_eq_diff.nm_false	.gvar
_test_item_eq_diff.nm_true	.gvar
gsac.prefix.typeitem.≡	.gvar
gsac.prefix.typeitem.gsabstype	.gvar
list.singleton	.gvar
gsdl.cgs.syntax.var.component.alphanum	.gvar
_test_item_eq_diff.nm_x.s	.gvar
_test_item_eq_diff.nm_y.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
pos	.undefined	gsdl.sourcepos.t
c0.x	.apply	gsdl.cgs.syntax.var.component.alphanum	|	_test_item_eq_diff.nm_x.s
v.x	.apply	list.singleton	gsdl.cgs.syntax.var.component.t	|	c0.x
absty.x	.apply	gsac.prefix.typeitem.gsabstype	|	pos	v.x	gsdl.cgs.gskind.lifted
c0.y	.apply	gsdl.cgs.syntax.var.component.alphanum	|	_test_item_eq_diff.nm_y.s
v.y	.apply	list.singleton	gsdl.cgs.syntax.var.component.t	|	c0.y
absty.y	.apply	gsac.prefix.typeitem.gsabstype	|	pos	v.y	gsdl.cgs.gskind.lifted
eq	.apply	gsac.prefix.typeitem.≡	|	absty.x	absty.y
test	.apply	test.deny	|	_test_item_eq_diff.nm_false	_test_item_eq_diff.nm_true	eq
	.app	_test_item_eq_diff.nm_label	test
	.enter	test.property.label

# §subsection §gs{item.gsabstype nm lifted ≡ item.gsabstype nm unlifted}

_test_item_eq_diff.kind_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.syntax.var.component.t	.tygvar
test.property.label	.gvar
_test_item_eq_diff.kind_label	.gvar
test.deny	.gvar
_test_item_eq_diff.kind_false	.gvar
_test_item_eq_diff.kind_true	.gvar
gsac.prefix.typeitem.≡	.gvar
gsac.prefix.typeitem.gsabstype	.gvar
list.singleton	.gvar
gsdl.cgs.syntax.var.component.alphanum	.gvar
_test_item_eq_diff.kind_x.s	.gvar
gsdl.cgs.gskind.lifted	.gvar
gsdl.cgs.gskind.unlifted	.gvar
pos	.undefined	gsdl.sourcepos.t
c0	.apply	gsdl.cgs.syntax.var.component.alphanum	|	_test_item_eq_diff.kind_x.s
v	.apply	list.singleton	gsdl.cgs.syntax.var.component.t	|	c0
absty.l	.apply	gsac.prefix.typeitem.gsabstype	|	pos	v	gsdl.cgs.gskind.lifted
absty.u	.apply	gsac.prefix.typeitem.gsabstype	|	pos	v	gsdl.cgs.gskind.unlifted
eq	.apply	gsac.prefix.typeitem.≡	|	absty.l	absty.u
test	.apply	test.deny	|	_test_item_eq_diff.kind_false	_test_item_eq_diff.kind_true	eq
	.app	_test_item_eq_diff.kind_label	test
	.enter	test.property.label

# §section Test Fixtures

_fixtures.filenm_c	.expr
ibio.file.name.in	.gvar
_fixtures.filenm_s	.gvar
	.app	_fixtures.filenm_s
	.enter	ibio.file.name.in
