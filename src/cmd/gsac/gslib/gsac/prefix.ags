	.prefix

	.data

# Important planny-type stuff:
#
# Abstract type items need to be split into two pieces:
# §begin{itemize}
#     §item §anchor{tydefn} One that declares the abstract type §emph{per se}, especially the definition.
#     §item §anchor{tyvar} One that declares the name of the abs type as a synomym for the abs typy expression.
# §end{itemize}
# References to the abstract type name in other type expressions depend on §ref{tyvar}.
# Nothing depends on §ref{tydefn}, but it depends on things.§footnote{
#     Not strictly true; coercions depend on §ref{tydefn}.
#     But only Core coercions do!
# }
# To manage this, we have two kinds of symbols:
# §begin{itemize}
#     §item §label{§gs{tyvar}} Type symbols, which are always type §emph{synonyms}.
#     §item §label{§gs{abstyvar}} Abstract types, which map onto definitions.
# §end{itemize}
#
# We also have three kinds of items:
# §begin{itemize}
#     §item §label{§gs{gstyexpr}} Type synonym items, labeled by §gs{tyvar}s.
#     §item §label{§gs{gsabstypenm}} Abstract type (names), labeled by §gs{tyvar}s.
#     §item §label{§gs{gsabstypedefn}} Abstract type (definitions), labeled by §gs{abstyvar}s.
# §end{itemize}
#
# Both §ags{.tyabstract} items and §ags{.tyextabstract} items translate into §emph{two} kinds of ‘items’ on our system.

gsac.prefix.empty	.closure	_gsac.prefix.empty_c

gsac.prefix.file.add	.closure	_gsac.prefix.file.add_c

gsac.prefix.typecheck	.closure	_gsac.prefix.typecheck_c
_gsac.prefix.typecheck_sccs.typecheck_w	.closure	_gsac.prefix.typecheck_sccs.typecheck_w_c	_gsac.prefix.typecheck_sccs.typecheck_w_ty

gsac.prefix.items	.closure	_gsac.prefix.items_c

gsac.prefix.typeitem.gsabstype.insert	.closure	_gsac.prefix.typeitem.gsabstype.insert_c

gsac.prefix.get	.closure	_gsac.prefix.get_c

gsac.prefix.gskind.upconvert	.closure	_gsac.prefix.gskind.upconvert_c	_gsac.prefix.gskind.upconvert_ty

gsac.prefix.item.name	.closure	_gsac.prefix.item.name_c

gsac.prefix.item.deps	.closure	_gsac.prefix.item.deps_c

gsac.prefix.item.typecheck	.closure	_gsac.prefix.item.typecheck_c

gsac.prefix.item.≡	.closure	_gsac.prefix.item.≡_c

gsac.prefix.item.fmtgs	.closure	_gsac.prefix.item.fmtgs_c
_gsac.prefix.item.fmtgs_typeitem_typeitem.s	.string	typeitem

gsac.prefix.typeitem.≡	.closure	_gsac.prefix.typeitem.≡_c

gsac.prefix.typeitem.fmtgs	.closure	_gsac.prefix.typeitem.fmtgs_c
_gsac.prefix.typeitem.fmtgs_gsabstype_gsabstype.s	.string	gsabstype

gsac.prefix.item.typeitem	.closure	_gsac.prefix.item.typeitem_c

gsac.prefix.typeitem.gsabstypenm	.closure	_gsac.prefix.typeitem.gsabstypenm_c

	.code

# §section §gs{gsac.prefix.empty}

_gsac.prefix.empty_c	.expr
gsdl.var.t	.tygvar
gsac.prefix.typeitem.t	.tygvar
gsac.prefix.prim.u	.tygvar
ordered.map.empty	.gvar
ts	.apply	ordered.map.empty	gsdl.var.t	gsac.prefix.typeitem.t
r	.record	typesection	ts	|	gsac.prefix.prim.u
	.lift
	.yield	r

# §section §gs{gsac.prefix.file.add}

_gsac.prefix.file.add_c	.expr
gsdl.ags.file.t	.tygvar
gsac.prefix.t	.tygvar
_gsac.prefix.file.add_k	.subcode
file	.larg	gsdl.ags.file.t
pr	.larg	gsac.prefix.t
	.force	_gsac.prefix.file.add_k
	.enter	file

_gsac.prefix.file.add_k	.forcecont
gsac.prefix.t	.tygvar
gsdl.ags.file.prim.u	.tygvar
_gsac.prefix.file.add_k1	.subcode
gsdl.ags.file.filetype.t.out	.cogvar
pr	.fv	gsac.prefix.t
file0	.karg	gsdl.ags.file.prim.u
f	.field	filetype	file0
	.force	_gsac.prefix.file.add_k1
	.coerce	gsdl.ags.file.filetype.t.out
	.enter	f

_gsac.prefix.file.add_k1	.forcecont
gsac.prefix.t	.tygvar
gsdl.ags.file.prim.u	.tygvar
gsdl.ags.file.filetype.prim.u	.tygvar
gsdl.ags.typeitem.t	.tygvar
ordered.map.t	.tygvar
gsdl.var.t	.tygvar
gsac.prefix.typeitem.t	.tygvar
gsac.prefix.prim.u	.tygvar
_gsac.prefix.file.add_ts.add_c	.subcode
list.foldr	.gvar
typesection.ty	.tylet	ordered.map.t	gsdl.var.t	gsac.prefix.typeitem.t
pr	.fv	gsac.prefix.t
file0	.fv	gsdl.ags.file.prim.u
ft0	.karg	gsdl.ags.file.filetype.prim.u
	.analyze	ft0	gsdocument	gsprefix
		.case	gsdocument
			.enter	pr
		.case	gsprefix
ts.add			.alloc	_gsac.prefix.file.add_ts.add_c
pr.typesection			.lfield	typesection	pr
file.typesection			.field	typesection	file0
ts			.apply	list.foldr	gsdl.ags.typeitem.t	typesection.ty	|	ts.add	pr.typesection	file.typesection
r			.record	typesection	ts	|	gsac.prefix.prim.u
			.lift
			.yield	r

_gsac.prefix.file.add_ts.add_c	.expr
gsdl.ags.typeitem.t	.tygvar
ordered.map.t	.tygvar
gsdl.var.t	.tygvar
gsac.prefix.typeitem.t	.tygvar
_gsac.prefix.file.add_ts.add_k	.subcode
gsdl.ags.typeitem.t.out	.cogvar
ti	.larg	gsdl.ags.typeitem.t
ts0	.larg	ordered.map.t	gsdl.var.t	gsac.prefix.typeitem.t
	.force	_gsac.prefix.file.add_ts.add_k
	.coerce	gsdl.ags.typeitem.t.out
	.enter	ti

_gsac.prefix.file.add_ts.add_k	.forcecont
ordered.map.t	.tygvar
gsdl.var.t	.tygvar
gsac.prefix.typeitem.t	.tygvar
gsdl.ags.typeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.ags.typeitem.decls.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
maybe.t	.tygvar
ordered.map.t	.tygvar	# Temp
gsac.prefix.typeitem.t	.tygvar	# Temp
gsdl.cgs.gskind.t	.tygvar	# Temp
ordered.map.insert	.gvar
gsdl.var.compare	.gvar
gsac.prefix.typeitem.gsabstypenm	.gvar
gsac.prefix.gskind.upconvert	.gvar
ts0	.fv	ordered.map.t	gsdl.var.t	gsac.prefix.typeitem.t
ti0	.karg	gsdl.ags.typeitem.prim.u
	.analyze	ti0	tyabstract	tydefinedprim	tyexpr
		.case	tyabstract
pos		.fkarg	0	gsdl.sourcepos.t
v		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.ags.typeitem.gskind.t
ds		.fkarg	3	gsdl.ags.typeitem.decls.t
dfn		.fkarg	4	gsdl.ags.typeitem.expr.t
cgs.ki			.apply	gsac.prefix.gskind.upconvert	|	ki
prfx.ti			.apply	gsac.prefix.typeitem.gsabstypenm	|	pos	v	cgs.ki
			.app	gsdl.var.compare	v	prfx.ti	ts0
			.enter	ordered.map.insert	gsdl.var.t	gsac.prefix.typeitem.t
		.case	tydefinedprim
pos		.fkarg	0	gsdl.sourcepos.t
v		.fkarg	1	gsdl.var.t
prims		.fkarg	2	gsdl.var.t
primnm		.fkarg	3	gsdl.var.t
ki		.fkarg	4	gsdl.ags.typeitem.gskind.t
			.enter	ts0	# TODO
		.case	tyexpr
pos		.fkarg	0	gsdl.sourcepos.t
nm		.fkarg	1	gsdl.var.t
mbki		.fkarg	2	maybe.t	gsdl.ags.typeitem.gskind.t
ds		.fkarg	3	gsdl.ags.typeitem.decls.t
dfn		.fkarg	4	gsdl.ags.typeitem.expr.t
			.enter	ts0	# TODO
	# > :: ordered.map.t	gsdl.var.t	gsac.prefix.typeitem.t

# §section §gs{gsac.prefix.typecheck}

# Takes a type environment §gs{env} and a prefix §{pr} and returns the type environment §gs{env'} s.t. §gs{env ⊢ pr ⊳ env'}
_gsac.prefix.typecheck_c	.expr
gsdl.cgs.typeenv.t	.tygvar
gsac.prefix.t	.tygvar
gsdl.cgs.symbol.t	.tygvar
graph.scc.t	.tygvar
gsac.prefix.item.t	.tygvar
_gsac.prefix.typecheck_get_c	.subcode
_gsac.prefix.typecheck_k	.subcode
list.t.out	.cogvar
graph.tsort	.gvar
gsdl.cgs.symbol.compare	.gvar
gsac.prefix.item.deps	.gvar
list.map	.gvar
gsac.prefix.item.name	.gvar
gsac.prefix.items	.gvar
scc.item.ty	.tylet	graph.scc.t	gsac.prefix.item.t
env	.larg	gsdl.cgs.typeenv.t
pr	.larg	gsac.prefix.t
get	.alloc	_gsac.prefix.typecheck_get_c
pr.items	.apply	gsac.prefix.items	|	pr
items	.apply	list.map	gsac.prefix.item.t	gsdl.cgs.symbol.t	|	gsac.prefix.item.name	pr.items
	.force	_gsac.prefix.typecheck_k
	.coerce	list.t.out	scc.item.ty
	.app	gsdl.cgs.symbol.compare	gsac.prefix.item.deps	get	items
	.enter	graph.tsort	gsdl.cgs.symbol.t	gsac.prefix.item.t

_gsac.prefix.typecheck_get_c	.expr
gsac.prefix.t	.tygvar
gsdl.cgs.symbol.t	.tygvar
gsac.prefix.get	.gvar
pr	.fv	gsac.prefix.t
sym	.larg	gsdl.cgs.symbol.t
	.app	sym	pr
	.enter	gsac.prefix.get

_gsac.prefix.typecheck_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
list.prim.u	.tygvar
graph.scc.t	.tygvar
gsac.prefix.item.t	.tygvar
list.t	.tygvar
_gsac.prefix.typecheck_sccs.typecheck_w	.gvar
gsdl.cgs.typeenv.empty	.gvar
scc.item.ty	.tylet	graph.scc.t	gsac.prefix.item.t
env	.fv	gsdl.cgs.typeenv.t
sccs0	.karg	list.prim.u	scc.item.ty
	.app	env	gsdl.cgs.typeenv.empty	sccs0
	.yield	_gsac.prefix.typecheck_sccs.typecheck_w

_gsac.prefix.typecheck_sccs.typecheck_w_c	.expr
gsdl.cgs.typeenv.t	.tygvar
list.prim.u	.tygvar
graph.scc.t	.tygvar
gsac.prefix.item.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsac.prefix.typecheck_sccs.typecheck_w_:_k	.subcode
graph.scc.t.out	.cogvar
either.right	.gvar
scc.item.ty	.tylet	graph.scc.t	gsac.prefix.item.t
env	.arg	gsdl.cgs.typeenv.t
enva	.arg	gsdl.cgs.typeenv.t
sccs0	.arg	list.prim.u	scc.item.ty
	.analyze	sccs0	:	nil
		.case	:
scc0		.fkarg	0	graph.scc.t	gsac.prefix.item.t
sccs1		.fkarg	1	list.t	scc.item.ty
			.force	_gsac.prefix.typecheck_sccs.typecheck_w_:_k
			.coerce	graph.scc.t.out	gsac.prefix.item.t
			.enter	scc0
		.case	nil
			.app	enva
			.enter	either.right	string.t	gsdl.cgs.typeenv.t

_gsac.prefix.typecheck_sccs.typecheck_w_:_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
list.t	.tygvar
graph.scc.t	.tygvar
gsac.prefix.item.t	.tygvar
graph.scc.prim.u	.tygvar
gsac.prefix.item.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
_gsac.prefix.typecheck_sccs.typecheck_w_:_nonrecursive_k	.subcode
either.t.out	.cogvar
gsac.prefix.item.typecheck	.gvar
scc.item.ty	.tylet	graph.scc.t	gsac.prefix.item.t
env	.fv	gsdl.cgs.typeenv.t
enva	.fv	gsdl.cgs.typeenv.t
sccs1	.fv	list.t	scc.item.ty
scc0.0	.karg	graph.scc.prim.u	gsac.prefix.item.t
	.analyze	scc0.0	nonrecursive
		.case	nonrecursive
it		.fkarg	0	gsac.prefix.item.t
			.force	_gsac.prefix.typecheck_sccs.typecheck_w_:_nonrecursive_k
			.coerce	either.t.out	string.t	gsdl.cgs.typeenv.t
			.app	env	it
			.enter	gsac.prefix.item.typecheck
	# > :: either.t	string.t	gsdl.cgs.typeenv.t

_gsac.prefix.typecheck_sccs.typecheck_w_:_nonrecursive_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
list.t	.tygvar
graph.scc.t	.tygvar
gsac.prefix.item.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
either.t	.tygvar	# Temp
_gsac.prefix.typecheck_sccs.typecheck_w_:_nonrecursive_right_k	.subcode
list.t.out	.cogvar
scc.item.ty	.tylet	graph.scc.t	gsac.prefix.item.t
env	.fv	gsdl.cgs.typeenv.t
enva	.fv	gsdl.cgs.typeenv.t
sccs1	.fv	list.t	scc.item.ty
e0	.karg	either.prim.u	string.t	gsdl.cgs.typeenv.t	# Type environment induced by §gs{it}
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.typeenv.t
		.case	right
env0		.fkarg	0	gsdl.cgs.typeenv.t
			.force	_gsac.prefix.typecheck_sccs.typecheck_w_:_nonrecursive_right_k
			.coerce	list.t.out	scc.item.ty
			.enter	sccs1

_gsac.prefix.typecheck_sccs.typecheck_w_:_nonrecursive_right_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
list.prim.u	.tygvar
graph.scc.t	.tygvar
gsac.prefix.item.t	.tygvar
_gsac.prefix.typecheck_sccs.typecheck_w	.gvar
gsdl.cgs.typeenv.overlay	.gvar
scc.item.ty	.tylet	graph.scc.t	gsac.prefix.item.t
env	.fv	gsdl.cgs.typeenv.t
enva	.fv	gsdl.cgs.typeenv.t
env0	.fv	gsdl.cgs.typeenv.t
sccs1.0	.karg	list.prim.u	scc.item.ty
env1	.apply	gsdl.cgs.typeenv.overlay	|	env0	env
enva1	.apply	gsdl.cgs.typeenv.overlay	|	env0	enva
	.app	env1	enva1	sccs1.0
	.yield	_gsac.prefix.typecheck_sccs.typecheck_w

# §section §gs{gsac.prefix.items}

_gsac.prefix.items_c	.expr
gsac.prefix.t	.tygvar
_gsac.prefix.items_k	.subcode
pr	.larg	gsac.prefix.t
	.force	_gsac.prefix.items_k
	.enter	pr

_gsac.prefix.items_k	.forcecont
gsac.prefix.prim.u	.tygvar
gsac.prefix.typeitem.t	.tygvar
gsac.prefix.item.t	.tygvar
gsdl.var.t	.tygvar
list.map	.gvar
gsac.prefix.item.typeitem	.gvar
ordered.map.values	.gvar
pr0	.karg	gsac.prefix.prim.u
tys0	.field	typesection	pr0
tys	.apply	ordered.map.values	gsdl.var.t	gsac.prefix.typeitem.t	|	tys0
	.app	gsac.prefix.item.typeitem	tys
	.enter	list.map	gsac.prefix.typeitem.t	gsac.prefix.item.t

# §section §gs{gsac.prefix.typeitem.gsabstype.insert}

_gsac.prefix.typeitem.gsabstype.insert_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsac.prefix.t	.tygvar
_gsac.prefix.typeitem.gsabstype.insert_k	.subcode
pos	.larg	gsdl.sourcepos.t
v	.larg	gsdl.var.t
ki	.larg	gsdl.cgs.gskind.t
pr	.larg	gsac.prefix.t
	.force	_gsac.prefix.typeitem.gsabstype.insert_k
	.enter	pr

_gsac.prefix.typeitem.gsabstype.insert_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsac.prefix.prim.u	.tygvar
gsac.prefix.typeitem.t	.tygvar
ordered.map.insert	.gvar
gsdl.var.compare	.gvar
gsac.prefix.typeitem.gsabstypenm	.gvar
pos	.fv	gsdl.sourcepos.t
v	.fv	gsdl.var.t
ki	.fv	gsdl.cgs.gskind.t
pr0	.karg	gsac.prefix.prim.u
ti	.apply	gsac.prefix.typeitem.gsabstypenm	|	pos	v	ki
ts0	.field	typesection	pr0
ts1	.apply	ordered.map.insert	gsdl.var.t	gsac.prefix.typeitem.t	|	gsdl.var.compare	v	ti	ts0
r	.record	typesection	ts1	|	gsac.prefix.prim.u
	.lift
	.yield	r

# §section §gs{gsac.prefix.get}

_gsac.prefix.get_c	.expr
gsdl.cgs.symbol.t	.tygvar
gsac.prefix.t	.tygvar
maybe.t	.tygvar	# Temp
gsac.prefix.item.t	.tygvar	# Temp
_gsac.prefix.get_k0	.subcode
gsdl.cgs.symbol.t.out	.cogvar
sym	.larg	gsdl.cgs.symbol.t
pr	.larg	gsac.prefix.t
	.force	_gsac.prefix.get_k0
	.coerce	gsdl.cgs.symbol.t.out
	.enter	sym

_gsac.prefix.get_k0	.forcecont
gsac.prefix.t	.tygvar
gsdl.cgs.symbol.prim.u	.tygvar
_gsac.prefix.get_k1	.subcode
pr	.fv	gsac.prefix.t
sym0	.karg	gsdl.cgs.symbol.prim.u
	.force	_gsac.prefix.get_k1
	.enter	pr

_gsac.prefix.get_k1	.forcecont
gsdl.cgs.symbol.prim.u	.tygvar
gsac.prefix.prim.u	.tygvar
gsdl.var.t	.tygvar
gsac.prefix.typeitem.t	.tygvar
maybe.t	.tygvar	# Temp
gsac.prefix.item.t	.tygvar	# Temp
_gsac.prefix.get_tyvar_k	.subcode
maybe.t.out	.cogvar
ordered.map.get	.gvar
gsdl.var.compare	.gvar
sym0	.fv	gsdl.cgs.symbol.prim.u
pr0	.karg	gsac.prefix.prim.u
	.analyze	sym0	tyvar
		.case	tyvar
v		.fkarg	0	gsdl.var.t
ts			.field	typesection	pr0
			.force	_gsac.prefix.get_tyvar_k
			.coerce	maybe.t.out	gsac.prefix.typeitem.t
			.app	gsdl.var.compare	v	ts
			.enter	ordered.map.get	gsdl.var.t	gsac.prefix.typeitem.t
	# > :: maybe.t	gsac.prefix.item.t

_gsac.prefix.get_tyvar_k	.forcecont
maybe.prim.u	.tygvar
gsac.prefix.typeitem.t	.tygvar
gsac.prefix.item.t	.tygvar
maybe.t	.tygvar	# Temp
maybe.just	.gvar
gsac.prefix.item.typeitem	.gvar
mb0	.karg	maybe.prim.u	gsac.prefix.typeitem.t
	.analyze	mb0	just	nothing
		.case	just
ti		.fkarg	0	gsac.prefix.typeitem.t
it			.apply	gsac.prefix.item.typeitem	|	ti
			.app	it
			.yield	maybe.just	gsac.prefix.item.t
		.case	nothing
			.undef	maybe.t	gsac.prefix.item.t

# §section §gs{gsac.prefix.gskind.upconvert}

_gsac.prefix.gskind.upconvert_c	.expr
gsdl.ags.typeitem.gskind.t	.tygvar
_gsac.prefix.gskind.upconvert_k	.subcode
gsdl.ags.typeitem.gskind.t.out	.cogvar
ki	.larg	gsdl.ags.typeitem.gskind.t
	.force	_gsac.prefix.gskind.upconvert_k
	.coerce	gsdl.ags.typeitem.gskind.t.out
	.enter	ki

_gsac.prefix.gskind.upconvert_k	.forcecont
gsdl.ags.typeitem.gskind.prim.u	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.cgs.gskind.t	.tygvar	# Temp
gsdl.cgs.gskind.exp	.gvar
gsac.prefix.gskind.upconvert	.gvar
gsdl.cgs.gskind.lifted	.gvar
ki0	.karg	gsdl.ags.typeitem.gskind.prim.u
	.analyze	ki0	exp	lifted
		.case	exp
ki.b		.fkarg	0	gsdl.ags.typeitem.gskind.t
ki.e		.fkarg	1	gsdl.ags.typeitem.gskind.t
ki.b.cgs			.apply	gsac.prefix.gskind.upconvert	|	ki.b
ki.e.cgs			.apply	gsac.prefix.gskind.upconvert	|	ki.e
			.app	ki.b.cgs	ki.e.cgs
			.enter	gsdl.cgs.gskind.exp
		.case	lifted
			.enter	gsdl.cgs.gskind.lifted
	# > :: gsdl.cgs.gskind.t

# §section §gs{gsac.prefix.item.name}

_gsac.prefix.item.name_c	.expr
gsac.prefix.item.t	.tygvar
_gsac.prefix.item.name_k	.subcode
gsac.prefix.item.t.out	.cogvar
it	.larg	gsac.prefix.item.t
	.force	_gsac.prefix.item.name_k
	.coerce	gsac.prefix.item.t.out
	.enter	it

_gsac.prefix.item.name_k	.forcecont
gsac.prefix.item.prim.u	.tygvar
gsac.prefix.typeitem.t	.tygvar
gsdl.cgs.symbol.t	.tygvar	# Temp
_gsac.prefix.item.name_typeitem_k	.subcode
gsac.prefix.typeitem.t.out	.cogvar
it0	.karg	gsac.prefix.item.prim.u
	.analyze	it0	typeitem
		.case	typeitem
ti		.fkarg	0	gsac.prefix.typeitem.t
			.force	_gsac.prefix.item.name_typeitem_k
			.coerce	gsac.prefix.typeitem.t.out
			.enter	ti
	# > :: gsdl.cgs.symbol.t

_gsac.prefix.item.name_typeitem_k	.forcecont
gsac.prefix.typeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.symbol.t	.tygvar	# Temp
gsdl.cgs.symbol.tyvar	.gvar
ti0	.karg	gsac.prefix.typeitem.prim.u
	.analyze	ti0	gsabstypenm
		.case	gsabstypenm
pos		.fkarg	0	gsdl.sourcepos.t
v		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.app	v
			.yield	gsdl.cgs.symbol.tyvar
	# > :: gsdl.cgs.symbol.t

# §section §gs{gsac.prefix.item.deps}

_gsac.prefix.item.deps_c	.expr
gsac.prefix.item.t	.tygvar
_gsac.prefix.item.deps_k	.subcode
gsac.prefix.item.t.out	.cogvar
it	.larg	gsac.prefix.item.t
	.force	_gsac.prefix.item.deps_k
	.coerce	gsac.prefix.item.t.out
	.enter	it

_gsac.prefix.item.deps_k	.forcecont
gsac.prefix.item.prim.u	.tygvar
gsac.prefix.typeitem.t	.tygvar
list.t	.tygvar	# Temp
gsdl.cgs.symbol.t	.tygvar	# Temp
_gsac.prefix.item.deps_typeitem_k	.subcode
gsac.prefix.typeitem.t.out	.cogvar
it0	.karg	gsac.prefix.item.prim.u
	.analyze	it0	typeitem
		.case	typeitem
ti		.fkarg	0	gsac.prefix.typeitem.t
			.force	_gsac.prefix.item.deps_typeitem_k
			.coerce	gsac.prefix.typeitem.t.out
			.enter	ti
	# > :: list.t	gsdl.cgs.symbol.t

_gsac.prefix.item.deps_typeitem_k	.forcecont
gsac.prefix.typeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.symbol.t	.tygvar
list.t	.tygvar	# Temp
list.nil	.gvar
ti0	.karg	gsac.prefix.typeitem.prim.u
	.analyze	ti0	gsabstypenm
		.case	gsabstypenm
pos		.fkarg	0	gsdl.sourcepos.t
v		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.enter	list.nil	gsdl.cgs.symbol.t
	# > :: list.t	gsdl.cgs.symbol.t

# §section §gs{gsac.prefix.item.typecheck}

# Checks whether §gs{env ⊢ it ⊳ env'} and if so returns the §gs{env'}
_gsac.prefix.item.typecheck_c	.expr
gsdl.cgs.typeenv.t	.tygvar
gsac.prefix.item.t	.tygvar
_gsac.prefix.item.typecheck_k	.subcode
gsac.prefix.item.t.out	.cogvar
env	.larg	gsdl.cgs.typeenv.t
it	.larg	gsac.prefix.item.t
	.force	_gsac.prefix.item.typecheck_k
	.coerce	gsac.prefix.item.t.out
	.enter	it

_gsac.prefix.item.typecheck_k	.forcecont
gsac.prefix.item.prim.u	.tygvar
gsac.prefix.typeitem.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
gsdl.cgs.typeenv.t	.tygvar	# Temp
_gsac.prefix.item.typecheck_typeitem_k	.subcode
gsac.prefix.typeitem.t.out	.cogvar
it0	.karg	gsac.prefix.item.prim.u
	.analyze	it0	typeitem
		.case	typeitem
ti		.fkarg	0	gsac.prefix.typeitem.t
			.force	_gsac.prefix.item.typecheck_typeitem_k
			.coerce	gsac.prefix.typeitem.t.out
			.enter	ti
	# > :: either.t	string.t	gsdl.cgs.typeenv.t

_gsac.prefix.item.typecheck_typeitem_k	.forcecont
gsac.prefix.typeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.cgs.typeenv.gsabstypenm.insert	.gvar
gsdl.cgs.typeenv.empty	.gvar
ti0	.karg	gsac.prefix.typeitem.prim.u
	.analyze	ti0	gsabstypenm
		.case	gsabstypenm
pos		.fkarg	0	gsdl.sourcepos.t
v		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
env			.apply	gsdl.cgs.typeenv.gsabstypenm.insert	|	v	ki	gsdl.cgs.typeenv.empty
			.app	env
			.enter	either.right	string.t	gsdl.cgs.typeenv.t
	# > :: either.t	string.t	gsdl.cgs.typeenv.t

# §section §gs{gsac.prefix.item.≡}

_gsac.prefix.item.≡_c	.expr
gsac.prefix.item.t	.tygvar
_gsac.prefix.item.≡_k0	.subcode
gsac.prefix.item.t.out	.cogvar
it0	.larg	gsac.prefix.item.t
it1	.larg	gsac.prefix.item.t
	.force	_gsac.prefix.item.≡_k0
	.coerce	gsac.prefix.item.t.out
	.enter	it0

_gsac.prefix.item.≡_k0	.forcecont
gsac.prefix.item.t	.tygvar
gsac.prefix.item.prim.u	.tygvar
_gsac.prefix.item.≡_k1	.subcode
gsac.prefix.item.t.out	.cogvar
it1	.fv	gsac.prefix.item.t
it0.0	.karg	gsac.prefix.item.prim.u
	.force	_gsac.prefix.item.≡_k1
	.coerce	gsac.prefix.item.t.out
	.enter	it1

_gsac.prefix.item.≡_k1	.forcecont
gsac.prefix.item.prim.u	.tygvar
gsac.prefix.typeitem.t	.tygvar
bool.t	.tygvar	# Temp
gsac.prefix.typeitem.≡	.gvar
it0.0	.fv	gsac.prefix.item.prim.u
it1.0	.karg	gsac.prefix.item.prim.u
	.analyze	it0.0	typeitem
		.case	typeitem
ti0		.fkarg	0	gsac.prefix.typeitem.t
			.analyze	it1.0	typeitem
				.case	typeitem
ti1				.fkarg	0	gsac.prefix.typeitem.t
					.app	ti0	ti1
					.enter	gsac.prefix.typeitem.≡
	# > :: bool.t

# §section §gs{gsac.prefix.item.fmtgs}

_gsac.prefix.item.fmtgs_c	.expr
gsac.prefix.item.t	.tygvar
_gsac.prefix.item.fmtgs_k	.subcode
gsac.prefix.item.t.out	.cogvar
it	.larg	gsac.prefix.item.t
	.force	_gsac.prefix.item.fmtgs_k
	.coerce	gsac.prefix.item.t.out
	.enter	it

_gsac.prefix.item.fmtgs_k	.forcecont
gsac.prefix.item.prim.u	.tygvar
gsac.prefix.typeitem.t	.tygvar
fmtgs.printer.t	.tygvar	# Temp
fmtgs.app	.gvar
fmtgs.var	.gvar
_gsac.prefix.item.fmtgs_typeitem_typeitem.s	.gvar
gsac.prefix.typeitem.fmtgs	.gvar
it0	.karg	gsac.prefix.item.prim.u
	.analyze	it0	typeitem
		.case	typeitem
ti		.fkarg	0	gsac.prefix.typeitem.t
f.pr			.apply	fmtgs.var	|	_gsac.prefix.item.fmtgs_typeitem_typeitem.s
ti.pr			.apply	gsac.prefix.typeitem.fmtgs	|	ti
			.app	f.pr	ti.pr
			.enter	fmtgs.app
	# > :: fmtgs.printer.t

# §section §gs{gsac.prefix.typeitem.≡}

_gsac.prefix.typeitem.≡_c	.expr
gsac.prefix.typeitem.t	.tygvar
_gsac.prefix.typeitem.≡_k0	.subcode
gsac.prefix.typeitem.t.out	.cogvar
ti0	.larg	gsac.prefix.typeitem.t
ti1	.larg	gsac.prefix.typeitem.t
	.force	_gsac.prefix.typeitem.≡_k0
	.coerce	gsac.prefix.typeitem.t.out
	.enter	ti0

_gsac.prefix.typeitem.≡_k0	.forcecont
gsac.prefix.typeitem.t	.tygvar
gsac.prefix.typeitem.prim.u	.tygvar
_gsac.prefix.typeitem.≡_k1	.subcode
gsac.prefix.typeitem.t.out	.cogvar
ti1	.fv	gsac.prefix.typeitem.t
ti0.0	.karg	gsac.prefix.typeitem.prim.u
	.force	_gsac.prefix.typeitem.≡_k1
	.coerce	gsac.prefix.typeitem.t.out
	.enter	ti1

_gsac.prefix.typeitem.≡_k1	.forcecont
gsac.prefix.typeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
_gsac.prefix.typeitem.≡_gsabstype_gsabstype_k	.subcode
bool.t.out	.cogvar
gsdl.var.≡	.gvar
ti0.0	.fv	gsac.prefix.typeitem.prim.u
ti1.0	.karg	gsac.prefix.typeitem.prim.u
	.analyze	ti0.0	gsabstypenm
		.case	gsabstypenm
pos0		.fkarg	0	gsdl.sourcepos.t
v0		.fkarg	1	gsdl.var.t
ki0		.fkarg	2	gsdl.cgs.gskind.t
			.analyze	ti1.0	gsabstypenm
				.case	gsabstypenm
pos1				.fkarg	0	gsdl.sourcepos.t
v1				.fkarg	1	gsdl.var.t
ki1				.fkarg	2	gsdl.cgs.gskind.t
					.force	_gsac.prefix.typeitem.≡_gsabstype_gsabstype_k
					.coerce	bool.t.out
					.app	v0	v1
					.enter	gsdl.var.≡
	# > :: bool.t

_gsac.prefix.typeitem.≡_gsabstype_gsabstype_k	.forcecont
gsdl.cgs.gskind.t	.tygvar
bool.prim.u	.tygvar
bool.t.in	.cogvar
gsdl.cgs.gskind.≡	.gvar
ki0	.fv	gsdl.cgs.gskind.t
ki1	.fv	gsdl.cgs.gskind.t
b0	.karg	bool.prim.u
	.analyze	b0	false	true
		.case	false
			.coerce	bool.t.in
			.lift
			.yield	b0
		.case	true
			.app	ki0	ki1
			.enter	gsdl.cgs.gskind.≡

# §section §gs{gsac.prefix.typeitem.fmtgs}

_gsac.prefix.typeitem.fmtgs_c	.expr
gsac.prefix.typeitem.t	.tygvar
_gsac.prefix.typeitem.fmtgs_k	.subcode
gsac.prefix.typeitem.t.out	.cogvar
ti	.larg	gsac.prefix.typeitem.t
	.force	_gsac.prefix.typeitem.fmtgs_k
	.coerce	gsac.prefix.typeitem.t.out
	.enter	ti

_gsac.prefix.typeitem.fmtgs_k	.forcecont
gsac.prefix.typeitem.prim.u	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
fmtgs.app	.gvar
fmtgs.var	.gvar
_gsac.prefix.typeitem.fmtgs_gsabstype_gsabstype.s	.gvar
gsdl.sourcepos.fmtgs	.gvar
gsdl.var.fmtgs	.gvar
gsdl.cgs.gskind.fmtgs	.gvar
ti0	.karg	gsac.prefix.typeitem.prim.u
	.analyze	ti0	gsabstypenm
		.case	gsabstypenm
pos		.fkarg	0	gsdl.sourcepos.t
v		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
pr2			.apply	fmtgs.var	|	_gsac.prefix.typeitem.fmtgs_gsabstype_gsabstype.s
pos.pr			.apply	gsdl.sourcepos.fmtgs	|	pos
pr1			.apply	fmtgs.app	|	pr2	pos.pr
v.pr			.apply	gsdl.var.fmtgs	|	v
pr0			.apply	fmtgs.app	|	pr1	v.pr
ki.pr			.apply	gsdl.cgs.gskind.fmtgs	|	ki
			.app	pr0	ki.pr
			.enter	fmtgs.app
	# > :: fmtgs.printer.t

# §section §gs{gsac.prefix.item.t} constructors

_gsac.prefix.item.typeitem_c	.expr
gsac.prefix.typeitem.t	.tygvar
gsac.prefix.item.prim.u	.tygvar
gsac.prefix.item.t.in	.cogvar
ti	.larg	gsac.prefix.typeitem.t
c	.constr	gsac.prefix.item.prim.u	typeitem	0	ti
	.coerce	gsac.prefix.item.t.in
	.lift
	.yield	c

# §section §gs{gsac.prefix.typeitem.t} constructors

_gsac.prefix.typeitem.gsabstypenm_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsac.prefix.typeitem.prim.u	.tygvar
gsac.prefix.typeitem.t.in	.cogvar
pos	.larg	gsdl.sourcepos.t
v	.larg	gsdl.var.t
ki	.larg	gsdl.cgs.gskind.t
c	.constr	gsac.prefix.typeitem.prim.u	gsabstypenm	0	pos	1	v	2	ki
	.coerce	gsac.prefix.typeitem.t.in
	.lift
	.yield	c

	.type

# §section §gs{gsac.prefix.t}

gsac.prefix.t	.tyexpr
gsac.prefix.prim.u	.tygvar
	.tylift
	.tyref	gsac.prefix.prim.u

gsac.prefix.prim.u	.tyexpr
ordered.map.t	.tygvar
gsdl.var.t	.tygvar
gsac.prefix.typeitem.t	.tygvar
_typesection_ty	.tylet	ordered.map.t	gsdl.var.t	gsac.prefix.typeitem.t
	.typroduct	typesection	_typesection_ty

# §section §gs{gsac.prefix.item.t}

gsac.prefix.item.t	.tyabstract	*
gsac.prefix.item.prim.u	.tygvar
	.tylift
	.tyref	gsac.prefix.item.prim.u

gsac.prefix.item.prim.u	.tyexpr
_gsac.prefix.item.prim.u_ty	.tygvar
	.tysum	typeitem	_gsac.prefix.item.prim.u_ty

_gsac.prefix.item.prim.u_ty	.tyexpr
gsac.prefix.typeitem.t	.tygvar
	.tyubproduct	0	gsac.prefix.typeitem.t

# §section §gs{gsac.prefix.typeitem.t}

gsac.prefix.typeitem.t	.tyabstract	*
gsac.prefix.typeitem.prim.u	.tygvar
	.tylift
	.tyref	gsac.prefix.typeitem.prim.u

gsac.prefix.typeitem.prim.u	.tyexpr
_gsac.prefix.typeitem.prim.u_gsabstypenm_ty	.tygvar
	.tysum	gsabstypenm	_gsac.prefix.typeitem.prim.u_gsabstypenm_ty

_gsac.prefix.typeitem.prim.u_gsabstypenm_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
	.tyubproduct	0	gsdl.sourcepos.t	1	gsdl.var.t	2	gsdl.cgs.gskind.t

# §section §gs{gsac.prefix.typecheck}

_gsac.prefix.typecheck_sccs.typecheck_w_ty	.tyexpr
gsdl.cgs.typeenv.t	.tygvar
list.prim.u	.tygvar
graph.scc.t	.tygvar
gsac.prefix.item.t	.tygvar
either.t	.tygvar
string.t	.tygvar
scc.ty	.tylet	graph.scc.t	gsac.prefix.item.t
	.tyfun	gsdl.cgs.typeenv.t	# Type environment to work in
	.tyfun	gsdl.cgs.typeenv.t	# Accumulator
	.tyfun	list.prim.u	scc.ty
	.tyref	either.t	string.t	gsdl.cgs.typeenv.t

# §section §gs{gsac.prefix.gskind.upconvert}

_gsac.prefix.gskind.upconvert_ty	.tyexpr
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
	.tylift
	.tyfun	gsdl.ags.typeitem.gskind.t
	.tyref	gsdl.cgs.gskind.t

	.coercion

gsac.prefix.item.t.in	.tycoercion
gsac.prefix.item.t	.tygvar
	.tydefinition	gsac.prefix.item.t

gsac.prefix.item.t.out	.tycoercion
gsac.prefix.item.t	.tygvar
	.tyinvert
	.tydefinition	gsac.prefix.item.t

gsac.prefix.typeitem.t.in	.tycoercion
gsac.prefix.typeitem.t	.tygvar
	.tydefinition	gsac.prefix.typeitem.t

gsac.prefix.typeitem.t.out	.tycoercion
gsac.prefix.typeitem.t	.tygvar
	.tyinvert
	.tydefinition	gsac.prefix.typeitem.t
