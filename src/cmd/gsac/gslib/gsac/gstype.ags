	.prefix

	.data

gsac.gstype.annotate	.closure	_gsac.gstype.annotate_c	_gsac.gstype.annotate_ty
_gsac.gstype.annotate_var_nothing_prefix.s	.string	Unknown\stype\svariable\s'
_gsac.gstype.annotate_var_nothing_suffix.s	.string	'

gsac.gstype.fun.annotate	.closure	_gsac.gstype.fun.annotate_c	_gsac.gstype.fun.annotate_ty

gsac.gstype.fields.annotate	.closure	_gsac.gstype.fields.annotate_c	_gsac.gstype.fields.annotate_ty

gsac.gstype.check	.closure	_gsac.gstype.check_c	_gsac.gstype.check_ty

gsac.gstype.compile	.closure	_gsac.gstype.compile_c	_gsac.gstype.compile_ty
_gsac.gstype.compile_w	.closure	_gsac.gstype.compile_w_c	_gsac.gstype.compile_w_ty
gsac.gstype.compileToGlobalVar	.closure	_gsac.gstype.compileToGlobalVar_c	_gsac.gstype.compileToGlobalVar_ty
gsac.gstype.compileToApp	.closure	_gsac.gstype.compileToApp_c	_gsac.gstype.compileToApp_ty
_gsac.gstype.compileToApp_app	.closure	_gsac.gstype.compileToApp_app_c	_gsac.gstype.compileToApp_app_ty
_gsac.gstype.compileToApp_args	.closure	_gsac.gstype.compileToApp_args_c	_gsac.gstype.compileToApp_args_ty
gsac.gstype.compileToVar	.closure	_gsac.gstype.compileToVar_c	_gsac.gstype.compileToVar_ty
_gsac.gstype.compileToVar_gsabstype	.closure	_gsac.gstype.compileToVar_gsabstype_c

gsac.gstype.fields.compile	.closure	_gsac.gstype.fields.compile_c	_gsac.gstype.fields.compile_ty

gsac.gstype.gskind.compile	.closure	_gsac.gstype.gskind.compile_c	_gsac.gstype.gskind.compile_ty

	.code

# §section §gs{gsac.gstype.annotate}

_gsac.gstype.annotate_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.annotate_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.annotate_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.annotate_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
_gsac.gstype.fun.annotate_res.ty	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
gsdl.cgs.gstype.constr.t	.tygvar
record.empty	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.annotate_app_k	.subcode
_gsac.gstype.annotate_lift_k	.subcode
_gsac.gstype.annotate_product_k	.subcode
_gsac.gstype.annotate_var_k	.subcode
either.t.out	.cogvar
maybe.t.out	.cogvar
gsac.gstype.fun.annotate	.gvar
gsac.gstype.annotate	.gvar
gsac.gstype.fields.annotate	.gvar
gsdl.cgs.typeenv.gskind.get	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	.analyze	ty0	abstype	app	lift	product	sum	var
		.case	abstype
tyc		.fkarg	0	gsdl.var.t
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
		.case	app
tyf		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
			.force	_gsac.gstype.annotate_app_k
			.coerce	either.t.out	string.t	_gsac.gstype.fun.annotate_res.ty
			.app	pos	env	tyf
			.enter	gsac.gstype.fun.annotate
		.case	lift
ty1		.fkarg	0	gsdl.cgs.gstype.t
			.force	_gsac.gstype.annotate_lift_k
			.coerce	either.t.out	string.t	_gsac.gstype.annotate_res.ty
			.app	pos	env	ty1
			.enter	gsac.gstype.annotate
		.case	product
fs		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
			.force	_gsac.gstype.annotate_product_k
			.coerce	either.t.out	string.t	record.empty
			.app	fs
			.enter	gsac.gstype.fields.annotate
		.case	sum
cs		.fkarg	0	list.t	gsdl.cgs.gstype.constr.t
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
		.case	var
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.annotate_var_k
			.coerce	maybe.t.out	gsdl.cgs.gskind.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.gskind.get
	# > :: either.t	string.t	gsdl.cgs.gskind.t

_gsac.gstype.annotate_app_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
_gsac.gstype.fun.annotate_res.ty	.tygvar
_gsac.gstype.annotate_app_right_k	.subcode
gsdl.cgs.gskind.t.out	.cogvar
either.left	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyx	.fv	gsdl.cgs.gstype.t
efki0	.karg	either.prim.u	string.t	_gsac.gstype.fun.annotate_res.ty
	.analyze	efki0	left	right
		.case	left
err		.fkarg	0	string.t
			.app	err
			.enter	either.left	string.t	_gsac.gstype.annotate_res.ty
		.case	right
f.r		.fkarg	0	_gsac.gstype.fun.annotate_res.ty
fki			.lfield	gskind	f.r
f.r.tye			.lfield	gstype	f.r
			.force	_gsac.gstype.annotate_app_right_k
			.coerce	gsdl.cgs.gskind.t.out
			.enter	fki

_gsac.gstype.annotate_app_right_k	.forcecont
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.cgs.gskind.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
string.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.annotate_app_right_exp_k	.subcode
either.t.out	.cogvar
gsac.gstype.annotate	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyx	.fv	gsdl.cgs.gstype.t
f.r.tye	.fv	gsdl.cgs.typeenv.typeexpansion.t
ki0	.karg	gsdl.cgs.gskind.prim.u	# Kind of type function
	.analyze	ki0	exp	lifted	unlifted
		.case	exp
ki.b		.fkarg	0	gsdl.cgs.gskind.t
ki.e		.fkarg	1	gsdl.cgs.gskind.t
			.force	_gsac.gstype.annotate_app_right_exp_k
			.coerce	either.t.out	string.t	_gsac.gstype.annotate_res.ty
			.app	pos	env	tyx
			.enter	gsac.gstype.annotate
		.case	lifted
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
		.case	unlifted
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
	# > :: either.t	string.t	gsdl.cgs.gskind.t

_gsac.gstype.annotate_app_right_exp_k	.forcecont
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.annotate_app_right_exp_right_k	.subcode
either.t.out	.cogvar
either.left	.gvar
gsac.gskind.check	.gvar
f.r.tye	.fv	gsdl.cgs.typeenv.typeexpansion.t
ki.b	.fv	gsdl.cgs.gskind.t
ki.e	.fv	gsdl.cgs.gskind.t
ex.r	.karg	either.prim.u	string.t	_gsac.gstype.annotate_res.ty
	.analyze	ex.r	left	right
		.case	left
err		.fkarg	0	string.t
			.app	err
			.enter	either.left	string.t	_gsac.gstype.annotate_res.ty
		.case	right
x.r		.fkarg	0	_gsac.gstype.annotate_res.ty
kix			.lfield	gskind	x.r
x.r.ty			.lfield	gstype	x.r
			.force	_gsac.gstype.annotate_app_right_exp_right_k
			.coerce	either.t.out	string.t	record.empty
			.app	kix	ki.e
			.enter	gsac.gskind.check

_gsac.gstype.annotate_app_right_exp_right_k	.forcecont
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.annotate_res.ty	.tygvar	# Temp
_gsac.gstype.annotate_app_right_exp_right_right_k	.subcode
either.t.out	.cogvar
gsdl.cgs.typeenv.typeexpansion.togstype	.gvar
gsdl.cgs.typeenv.typeexpansion.app	.gvar
f.r.tye	.fv	gsdl.cgs.typeenv.typeexpansion.t
ki.b	.fv	gsdl.cgs.gskind.t
x.r.ty	.fv	gsdl.cgs.gstype.t
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
		.case	right
x		.fkarg	0	record.empty
app.tye			.apply	gsdl.cgs.typeenv.typeexpansion.app	|	f.r.tye	x.r.ty
			.force	_gsac.gstype.annotate_app_right_exp_right_right_k
			.coerce	either.t.out	string.t	gsdl.cgs.gstype.t
			.app	app.tye
			.enter	gsdl.cgs.typeenv.typeexpansion.togstype

_gsac.gstype.annotate_app_right_exp_right_right_k	.forcecont
gsdl.cgs.gskind.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.annotate_res.ty	.tygvar	# Temp
either.right	.gvar
ki.b	.fv	gsdl.cgs.gskind.t
e0	.karg	either.prim.u	string.t	gsdl.cgs.gstype.t
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
		.case	right
res.ty		.fkarg	0	gsdl.cgs.gstype.t
res			.lrecord	gskind	ki.b	gstype	res.ty	|	_gsac.gstype.annotate_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.annotate_res.ty

_gsac.gstype.annotate_lift_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.annotate_lift_right_k	.subcode
either.t.out	.cogvar
gsac.gskind.check	.gvar
gsdl.cgs.gskind.unlifted	.gvar
e0	.karg	either.prim.u	string.t	_gsac.gstype.annotate_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
		.case	right
r		.fkarg	0	_gsac.gstype.annotate_res.ty
ki			.lfield	gskind	r
			.force	_gsac.gstype.annotate_lift_right_k
			.coerce	either.t.out	string.t	record.empty
			.app	ki	gsdl.cgs.gskind.unlifted
			.enter	gsac.gskind.check

_gsac.gstype.annotate_lift_right_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
either.t	.tygvar	# Temp
gsdl.cgs.gstype.t	.tygvar	# Temp
either.right	.gvar
gsdl.cgs.gskind.lifted	.gvar
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
		.case	right
r		.fkarg	0	record.empty
res.ty			.undefined	gsdl.cgs.gstype.t
res			.lrecord	gskind	gsdl.cgs.gskind.lifted	gstype	res.ty	|	_gsac.gstype.annotate_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.annotate_res.ty

_gsac.gstype.annotate_product_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
either.t	.tygvar	# Temp
gsdl.cgs.gstype.t	.tygvar	# Temp
either.right	.gvar
gsdl.cgs.gskind.unlifted	.gvar
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.annotate_res.ty
		.case	right
r		.fkarg	0	record.empty
res.ty			.undefined	gsdl.cgs.gstype.t
res			.lrecord	gskind	gsdl.cgs.gskind.unlifted	gstype	res.ty	|	_gsac.gstype.annotate_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.annotate_res.ty

_gsac.gstype.annotate_var_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
maybe.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
rune.t	.tygvar
gsdl.cgs.gstype.t	.tygvar	# Temp
either.right	.gvar
either.left	.gvar
list.<>	.gvar
gsdl.sourcepos.print	.gvar
list.:	.gvar
rune.colon	.gvar
rune.space	.gvar
_gsac.gstype.annotate_var_nothing_prefix.s	.gvar
gsdl.cgs.syntax.var.print	.gvar
_gsac.gstype.annotate_var_nothing_suffix.s	.gvar
pos	.fv	gsdl.sourcepos.t
v	.fv	gsdl.var.t
mb0	.karg	maybe.prim.u	gsdl.cgs.gskind.t
	.analyze	mb0	just	nothing
		.case	just
ki		.fkarg	0	gsdl.cgs.gskind.t
res.ty			.undefined	gsdl.cgs.gstype.t
res			.lrecord	gskind	ki	gstype	res.ty	|	_gsac.gstype.annotate_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.annotate_res.ty
		.case	nothing
pos.s			.apply	gsdl.sourcepos.print	|	pos
var.s			.apply	gsdl.cgs.syntax.var.print	|	v
msg.4			.apply	list.<>	rune.t	|	var.s	_gsac.gstype.annotate_var_nothing_suffix.s
msg.3			.apply	list.<>	rune.t	|	_gsac.gstype.annotate_var_nothing_prefix.s	msg.4
msg.2			.apply	list.:	rune.t	|	rune.space	msg.3
msg.1			.apply	list.:	rune.t	|	rune.colon	msg.2
msg			.apply	list.<>	rune.t	|	pos.s	msg.1
			.app	msg
			.enter	either.left	string.t	_gsac.gstype.annotate_res.ty

# §section §gs{gsac.gstype.fun.annotate}

_gsac.gstype.fun.annotate_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.fun.annotate_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.fun.annotate_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.fun.annotate_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
_gsac.gstype.fun.annotate_res.ty	.tygvar	# Temp
_gsac.gstype.fun.annotate_app_k	.subcode
_gsac.gstype.fun.annotate_var_k	.subcode
either.t.out	.cogvar
maybe.t.out	.cogvar
gsac.gstype.fun.annotate	.gvar
gsdl.cgs.typeenv.gskind.get	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	.danalyze	ty0	app	var
		.default
			.undef	either.t	string.t	_gsac.gstype.fun.annotate_res.ty
		.case	app
tyf		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
			.force	_gsac.gstype.fun.annotate_app_k
			.coerce	either.t.out	string.t	_gsac.gstype.fun.annotate_res.ty
			.app	pos	env	tyf
			.enter	gsac.gstype.fun.annotate
		.case	var
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.fun.annotate_var_k
			.coerce	maybe.t.out	gsdl.cgs.gskind.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.gskind.get
	# > :: either.t	string.t	_gsac.gstype.fun.annotate_res.ty

_gsac.gstype.fun.annotate_app_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.fun.annotate_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.fun.annotate_app_right_k	.subcode
gsdl.cgs.gskind.t.out	.cogvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyx	.fv	gsdl.cgs.gstype.t
e0	.karg	either.prim.u	string.t	_gsac.gstype.fun.annotate_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.fun.annotate_res.ty
		.case	right
tyf.r		.fkarg	0	_gsac.gstype.fun.annotate_res.ty
tyf.ki			.lfield	gskind	tyf.r
tyf.ty			.lfield	gstype	tyf.r
			.force	_gsac.gstype.fun.annotate_app_right_k
			.coerce	gsdl.cgs.gskind.t.out
			.enter	tyf.ki

_gsac.gstype.fun.annotate_app_right_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
gsdl.cgs.gskind.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.fun.annotate_res.ty	.tygvar	# Temp
_gsac.gstype.fun.annotate_app_right_exp_k	.subcode
either.t.out	.cogvar
gsac.gstype.annotate	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyx	.fv	gsdl.cgs.gstype.t
tyf.ty	.fv	gsdl.cgs.typeenv.typeexpansion.t
tyf.ki0	.karg	gsdl.cgs.gskind.prim.u
	.danalyze	tyf.ki0	exp
		.default
			.undef	either.t	string.t	_gsac.gstype.fun.annotate_res.ty
		.case	exp
kib		.fkarg	0	gsdl.cgs.gskind.t
kie		.fkarg	1	gsdl.cgs.gskind.t
			.force	_gsac.gstype.fun.annotate_app_right_exp_k
			.coerce	either.t.out	string.t	_gsac.gstype.annotate_res.ty
			.app	pos	env	tyx
			.enter	gsac.gstype.annotate

_gsac.gstype.fun.annotate_app_right_exp_k	.forcecont
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.fun.annotate_res.ty	.tygvar	# Temp
_gsac.gstype.fun.annotate_app_right_exp_right_k	.subcode
either.t.out	.cogvar
gsac.gskind.check	.gvar
tyf.ty	.fv	gsdl.cgs.typeenv.typeexpansion.t
kib	.fv	gsdl.cgs.gskind.t
kie	.fv	gsdl.cgs.gskind.t
e0	.karg	either.prim.u	string.t	_gsac.gstype.annotate_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.fun.annotate_res.ty
		.case	right
tyx.r		.fkarg	0	_gsac.gstype.annotate_res.ty
tyx.ki			.lfield	gskind	tyx.r
tyx.ty			.lfield	gstype	tyx.r
			.force	_gsac.gstype.fun.annotate_app_right_exp_right_k
			.coerce	either.t.out	string.t	record.empty
			.app	tyx.ki	kie
			.enter	gsac.gskind.check

_gsac.gstype.fun.annotate_app_right_exp_right_k	.forcecont
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
_gsac.gstype.fun.annotate_res.ty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.cgs.typeenv.typeexpansion.app	.gvar
tyf.ty	.fv	gsdl.cgs.typeenv.typeexpansion.t
kib	.fv	gsdl.cgs.gskind.t
tyx.ty	.fv	gsdl.cgs.gstype.t
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.fun.annotate_res.ty
		.case	right
r		.fkarg	0	record.empty
tye			.apply	gsdl.cgs.typeenv.typeexpansion.app	|	tyf.ty	tyx.ty
res			.lrecord	gskind	kib	gstype	tye	|	_gsac.gstype.fun.annotate_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.fun.annotate_res.ty

_gsac.gstype.fun.annotate_var_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
maybe.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
_gsac.gstype.fun.annotate_res.ty	.tygvar	# Temp
_gsac.gstype.fun.annotate_var_just_k	.subcode
maybe.t.out	.cogvar
gsdl.cgs.typeenv.typeexpansion.get	.gvar
env	.fv	gsdl.cgs.typeenv.t
v	.fv	gsdl.var.t
mb0	.karg	maybe.prim.u	gsdl.cgs.gskind.t
	.analyze	mb0	just	nothing
		.case	just
ki		.fkarg	0	gsdl.cgs.gskind.t
			.force	_gsac.gstype.fun.annotate_var_just_k
			.coerce	maybe.t.out	gsdl.cgs.typeenv.typeexpansion.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.typeexpansion.get
		.case	nothing
			.undef	either.t	string.t	_gsac.gstype.fun.annotate_res.ty

_gsac.gstype.fun.annotate_var_just_k	.forcecont
gsdl.cgs.gskind.t	.tygvar
maybe.prim.u	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
string.t	.tygvar
_gsac.gstype.fun.annotate_res.ty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
ki	.fv	gsdl.cgs.gskind.t
e0	.karg	maybe.prim.u	gsdl.cgs.typeenv.typeexpansion.t
	.analyze	e0	just	nothing
		.case	just
tye		.fkarg	0	gsdl.cgs.typeenv.typeexpansion.t
res			.lrecord	gskind	ki	gstype	tye	|	_gsac.gstype.fun.annotate_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.fun.annotate_res.ty
		.case	nothing
			.undef	either.t	string.t	_gsac.gstype.fun.annotate_res.ty

# §section §gs{gsac.gstype.fields.annotate}

_gsac.gstype.fields.annotate_c	.expr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
_gsac.gstype.fields.annotate_k	.subcode
list.t.out	.cogvar
fs	.larg	list.t	gsdl.cgs.gstype.field.t
	.force	_gsac.gstype.fields.annotate_k
	.coerce	list.t.out	gsdl.cgs.gstype.field.t
	.enter	fs

_gsac.gstype.fields.annotate_k	.forcecont
list.prim.u	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
list.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
record.empty	.gvar
fs0	.karg	list.prim.u	gsdl.cgs.gstype.field.t
	.analyze	fs0	:	nil
		.case	:
f0		.fkarg	0	gsdl.cgs.gstype.field.t
fs1		.fkarg	1	list.t	gsdl.cgs.gstype.field.t
			.undef	either.t	string.t	record.empty
		.case	nil
			.app	record.empty
			.enter	either.right	string.t	record.empty

# §section §gs{gsac.gstype.check}

_gsac.gstype.check_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.check_ka	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
tya	.larg	gsdl.cgs.gstype.t
tye	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.check_ka
	.coerce	gsdl.cgs.gstype.t.out
	.enter	tya

_gsac.gstype.check_ka	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.check_ke	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tye	.fv	gsdl.cgs.gstype.t
tya0	.karg	gsdl.cgs.gstype.prim.u
	.force	_gsac.gstype.check_ke
	.coerce	gsdl.cgs.gstype.t.out
	.enter	tye

_gsac.gstype.check_ke	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
gsdl.cgs.gstype.constr.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
record.empty	.tygvar	# Temp
_gsac.gstype.check_abstype_abstype_k	.subcode
_gsac.gstype.check_app_app_k	.subcode
bool.t.out	.cogvar
maybe.t.out	.cogvar
either.t.out	.cogvar
gsdl.var.≡	.gvar
gsac.gstype.check	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tya0	.fv	gsdl.cgs.gstype.prim.u
tye0	.karg	gsdl.cgs.gstype.prim.u
	.analyze	tye0	abstype	app	lift	product	sum	var
		.case	abstype
tyce		.fkarg	0	gsdl.var.t
			.danalyze	tya0	abstype	var
				.default
					.undef	either.t	string.t	record.empty
				.case	abstype
tyca				.fkarg	0	gsdl.var.t
					.force	_gsac.gstype.check_abstype_abstype_k
					.coerce	bool.t.out
					.app	tyca	tyce
					.enter	gsdl.var.≡
				.case	var
va				.fkarg	0	gsdl.var.t
					.undef	either.t	string.t	record.empty
		.case	app
tyfe		.fkarg	0	gsdl.cgs.gstype.t
tyxe		.fkarg	1	gsdl.cgs.gstype.t
			.danalyze	tya0	app
				.default
					.undef	either.t	string.t	record.empty
				.case	app
tyfa				.fkarg	0	gsdl.cgs.gstype.t
tyxa				.fkarg	1	gsdl.cgs.gstype.t
					.force	_gsac.gstype.check_app_app_k
					.coerce	either.t.out	string.t	record.empty
					.app	pos	env	tyfa	tyfe
					.enter	gsac.gstype.check
		.case	lift
tye1		.fkarg	0	gsdl.cgs.gstype.t
			.undef	either.t	string.t	record.empty
		.case	product
fse		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
			.undef	either.t	string.t	record.empty
		.case	sum
cse		.fkarg	0	list.t	gsdl.cgs.gstype.constr.t
			.undef	either.t	string.t	record.empty
		.case	var
ve		.fkarg	0	gsdl.var.t
			.undef	either.t	string.t	record.empty
	# > :: either.t	string.t	record.empty

_gsac.gstype.check_abstype_abstype_k	.forcecont
bool.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
record.empty	.gvar
b0	.karg	bool.prim.u	# §gs{tyca ≡ tyce}
	.analyze	b0	false	true
		.case	false
			.undef	either.t	string.t	record.empty
		.case	true
			.app	record.empty
			.enter	either.right	string.t	record.empty

_gsac.gstype.check_app_app_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
e0	.karg	either.prim.u	string.t	record.empty
	.undef	either.t	string.t	record.empty

# §section §gs{gsac.gstype.compile}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.compile_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.compile_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.compile_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.compile_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
_gsac.gstype.compile_w	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	.app	pos	env	ty0
	.enter	_gsac.gstype.compile_w

_gsac.gstype.compile_w_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
gsdl.cgs.gstype.constr.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compile_w_app_k	.subcode
_gsac.gstype.compile_w_lift_k	.subcode
_gsac.gstype.compile_w_product_k	.subcode
_gsac.gstype.compile_w_var_k	.subcode
either.t.out	.cogvar
maybe.t.out	.cogvar
_gsac.gstype.compileToApp_app	.gvar
list.singleton	.gvar
gsac.gstype.compile	.gvar
gsac.gstype.fields.compile	.gvar
gsdl.cgs.typeenv.typeexpansion.get	.gvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
ty0	.larg	gsdl.cgs.gstype.prim.u
em	.larg	ordered.set.t	gsdl.var.t
gvs	.larg	list.t	gsdl.var.t
	.analyze	ty0	abstype	app	lift	product	sum	var
		.case	abstype
tyc		.fkarg	0	gsdl.var.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	app
tyf		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
tyas			.apply	list.singleton	gsdl.cgs.gstype.t	|	tyx
			.force	_gsac.gstype.compile_w_app_k
			.coerce	either.t.out	string.t	_gsac.gstype.compileToApp_res.ty
			.app	pos	env	tyf	tyas	em	gvs
			.yield	_gsac.gstype.compileToApp_app
		.case	lift
ty1		.fkarg	0	gsdl.cgs.gstype.t
			.force	_gsac.gstype.compile_w_lift_k
			.coerce	either.t.out	string.t	_gsac.gstype.compile_res.ty
			.app	pos	env	ty1	em	gvs
			.enter	gsac.gstype.compile
		.case	product
fs		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
			.force	_gsac.gstype.compile_w_product_k
			.coerce	either.t.out	string.t	_gsac.gstype.fields.compile_res.ty
			.app	fs	em
			.enter	gsac.gstype.fields.compile
		.case	sum
cs		.fkarg	0	list.t	gsdl.cgs.gstype.constr.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	var
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.compile_w_var_k
			.coerce	maybe.t.out	gsdl.cgs.typeenv.typeexpansion.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.typeexpansion.get
	# > :: either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_app_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compile_res.ty	.tygvar	# Temp
_gsac.gstype.compile_w_app_right_k	.subcode
e0	.karg	either.prim.u	string.t	_gsac.gstype.compileToApp_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	right
r		.fkarg	0	_gsac.gstype.compileToApp_res.ty
			.force	_gsac.gstype.compile_w_app_right_k
			.enter	r

_gsac.gstype.compile_w_app_right_k	.forcecont
_gsac.gstype.compileToApp_res.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
either.right	.gvar
gsdl.ags.typeitem.expr.tyref	.gvar
r0	.karg	_gsac.gstype.compileToApp_res.u
em	.field	emitted	r0
tyf	.field	tyfun	r0
tyas	.field	typeargs	r0
tye	.apply	gsdl.ags.typeitem.expr.tyref	|	tyf	tyas
tyes	.field	tyexprs	r0
tyfvs	.field	tyfvs	r0
tygvs	.field	tygvars	r0
res	.lrecord	emitted	em	res	tye	tyexprs	tyes	tyfvs	tyfvs	tygvars	tygvs	|	_gsac.gstype.compile_res.ty
	.app	res
	.enter	either.right	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_lift_k	.forcecont
gsdl.sourcepos.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.ags.typeitem.expr.lift	.gvar
pos	.fv	gsdl.sourcepos.t
e0	.karg	either.prim.u	string.t	_gsac.gstype.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	right
res1		.fkarg	0	_gsac.gstype.compile_res.ty
em0			.lfield	emitted	res1
res0.1			.lfield	res	res1
res0			.apply	gsdl.ags.typeitem.expr.lift	|	pos	res0.1
es0			.lfield	tyexprs	res1
tyfvs0			.lfield	tyfvs	res1
tygvs0			.lfield	tygvars	res1
res			.lrecord	emitted	em0	res	res0	tyexprs	es0	tyfvs	tyfvs0	tygvars	tygvs0
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_product_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.ags.typeitem.expr.product	.gvar
diff.list.tolist	.gvar
e0	.karg	either.prim.u	string.t	_gsac.gstype.fields.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	right
fs.res		.fkarg	0	_gsac.gstype.fields.compile_res.ty
em0			.lfield	emitted	fs.res
res0.fs.d			.lfield	fields	fs.res
res0.fs			.apply	diff.list.tolist	gsdl.ags.typeitem.field.t	|	res0.fs.d
res0			.apply	gsdl.ags.typeitem.expr.product	|	res0.fs
tyes			.lfield	tyexprs	fs.res
tyfvs			.lfield	tyfvs	fs.res
tygvs			.lfield	tygvars	fs.res
res			.lrecord	emitted	em0	res	res0	tyexprs	tyes	tyfvs	tyfvs	tygvars	tygvs
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_var_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
maybe.prim.u	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
_gsac.gstype.compile_res.ty	.tygvar	# Temp
_gsac.gstype.compile_w_var_just_k	.subcode
gsdl.cgs.typeenv.typeexpansion.t.out	.cogvar
env	.fv	gsdl.cgs.typeenv.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
mb0	.karg	maybe.prim.u	gsdl.cgs.typeenv.typeexpansion.t
	.analyze	mb0	just	nothing
		.case	just
exp		.fkarg	0	gsdl.cgs.typeenv.typeexpansion.t
			.force	_gsac.gstype.compile_w_var_just_k
			.coerce	gsdl.cgs.typeenv.typeexpansion.t.out
			.enter	exp
		.case	nothing
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_var_just_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.tylambda.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compile_res.ty	.tygvar	# Temp
_gsac.gstype.compile_w_var_just_gsabstype_k	.subcode
either.t.out	.cogvar
_gsac.gstype.compileToVar_gsabstype	.gvar
env	.fv	gsdl.cgs.typeenv.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
e0	.karg	gsdl.cgs.typeenv.typeexpansion.prim.u
	.analyze	e0	definedprim	elimprim	expr	gsabstype	impprim	var
		.case	definedprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	elimprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	expr
tyls		.fkarg	0	list.t	gsdl.cgs.typeenv.typeexpansion.tylambda.t
e		.fkarg	1	gsdl.cgs.gstype.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	gsabstype
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.compile_w_var_just_gsabstype_k
			.coerce	either.t.out	string.t	_gsac.gstype.compileToVar_res.ty
			.app	env	v	em	gvs
			.yield	_gsac.gstype.compileToVar_gsabstype
		.case	impprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	var
v		.fkarg	0	gsdl.var.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
	# > :: either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_var_just_gsabstype_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
gsdl.var.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.ags.typeitem.expr.tyref	.gvar
list.nil	.gvar
e0	.karg	either.prim.u	string.t	_gsac.gstype.compileToVar_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	right
vr		.fkarg	0	_gsac.gstype.compileToVar_res.ty
vr.em			.lfield	emitted	vr
vr.tyes			.lfield	tyexprs	vr
vr.tyfvs			.lfield	tyfvs	vr
vr.tygvs			.lfield	tygvars	vr
v1			.lfield	var	vr
e.as			.apply	list.nil	gsdl.var.t
e			.apply	gsdl.ags.typeitem.expr.tyref	|	v1	e.as
res			.lrecord	emitted	vr.em	res	e	tyexprs	vr.tyes	tyfvs	vr.tyfvs	tygvars	vr.tygvs	|	_gsac.gstype.compile_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compile_res.ty

# §section §gs{gsac.gstype.compileToGlobalVar}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.compileToGlobalVar_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.compileToGlobalVar_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
nm0	.larg	gsdl.var.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.compileToGlobalVar_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.compileToGlobalVar_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
list.t	.tygvar	# Temp
_gsac.gstype.compileToGlobalVar_k1	.subcode
either.t.out	.cogvar
_gsac.gstype.compile_w	.gvar
ordered.set.empty	.gvar
gsdl.var.subvars	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
nm0	.fv	gsdl.var.t
ty0	.karg	gsdl.cgs.gstype.prim.u
em	.apply	ordered.set.empty	gsdl.var.t
gvs	.apply	gsdl.var.subvars	|	nm0
	.force	_gsac.gstype.compileToGlobalVar_k1
	.coerce	either.t.out	string.t	_gsac.gstype.compile_res.ty
	.app	pos	env	ty0	em	gvs
	.enter	_gsac.gstype.compile_w

_gsac.gstype.compileToGlobalVar_k1	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
_gsac.gstype.compileToGlobalVar_res.ty	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
gsdl.ags.typeitem.decls.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
diff.list.t	.tygvar
either.t	.tygvar	# Temp
list.t	.tygvar	# Temp
gsdl.ags.typeitem.decls.tyarg.t	.tygvar	# Temp
either.right	.gvar
diff.list.:	.gvar
gsdl.ags.typeitem.tyexpr	.gvar
maybe.nothing	.gvar
diff.list.tolist	.gvar
pos	.fv	gsdl.sourcepos.t
nm0	.fv	gsdl.var.t
e0	.karg	either.prim.u	string.t	_gsac.gstype.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compileToGlobalVar_res.ty
		.case	right
res1		.fkarg	0	_gsac.gstype.compile_res.ty
nothing			.apply	maybe.nothing	gsdl.ags.typeitem.gskind.t
tyas			.undefined	list.t	gsdl.ags.typeitem.decls.tyarg.t	# Calculate from §gs{#fvs res1}
tygvs.d			.lfield	tygvars	res1
tygvs			.apply	diff.list.tolist	gsdl.ags.typeitem.decls.tygvar.t	|	tygvs.d
ds			.lrecord	tyargs	tyas	tygvars	tygvs	|	gsdl.ags.typeitem.decls.t
tye0.0			.lfield	res	res1
tye0			.apply	gsdl.ags.typeitem.tyexpr	|	pos	nm0	nothing	ds	tye0.0
tyes1			.lfield	tyexprs	res1
tyes			.apply	diff.list.:	gsdl.ags.typeitem.t	|	tye0	tyes1
res			.lrecord	nm	nm0	tyexprs	tyes
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compileToGlobalVar_res.ty

# §section §gs{gsac.gstype.compileToApp}

_gsac.gstype.compileToApp_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
_gsac.gstype.compileToApp_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
ty	.larg	gsdl.cgs.gstype.t
em	.larg	ordered.set.t	gsdl.var.t
gvs	.larg	list.t	gsdl.var.t
	.force	_gsac.gstype.compileToApp_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.compileToApp_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
_gsac.gstype.compileToApp_default_k	.subcode
_gsac.gstype.compileToApp_var_k	.subcode
list.t.out	.cogvar
maybe.t.out	.cogvar
_gsac.gstype.compileToApp_app	.gvar
list.singleton	.gvar
gsdl.cgs.typeenv.typeexpansion.get	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	.danalyze	ty0	app	var
		.default	# Call §gs{compile} and emit the result as a type expression
			.force	_gsac.gstype.compileToApp_default_k
			.coerce	list.t.out	gsdl.var.t
			.enter	gvs
		.case	app	# Special case, like below
tyf		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
tyas			.apply	list.singleton	gsdl.cgs.gstype.t	|	tyx
			.app	pos	env	tyf	tyas	em	gvs
			.yield	_gsac.gstype.compileToApp_app
		.case	var	# Special case, like below
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.compileToApp_var_k
			.coerce	maybe.t.out	gsdl.cgs.typeenv.typeexpansion.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.typeexpansion.get

_gsac.gstype.compileToApp_default_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
list.prim.u	.tygvar
list.t	.tygvar
gsdl.var.t	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_default_:_k	.subcode
gsdl.cgs.gstype.t.in	.cogvar
either.t.out	.cogvar
gsac.gstype.compile	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
ty0	.fv	gsdl.cgs.gstype.prim.u
gvs0	.karg	list.prim.u	gsdl.var.t
	.analyze	gvs0	:	nil
		.case	:
v		.fkarg	0	gsdl.var.t
gvs1		.fkarg	1	list.t	gsdl.var.t
ty0.l			.lifted	ty0
ty0.cl			.cast	ty0.l	gsdl.cgs.gstype.t.in
			.force	_gsac.gstype.compileToApp_default_:_k
			.coerce	either.t.out	string.t	_gsac.gstype.compile_res.ty
			.app	pos	env	ty0.cl	em	gvs
			.enter	gsac.gstype.compile
		.case	nil
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_default_:_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.ags.typeitem.decls.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
gsdl.ags.typeitem.decls.tyarg.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
either.t	.tygvar	# Temp
ordered.set.t	.tygvar	# Temp
diff.list.t	.tygvar	# Temp
list.t	.tygvar	# Temp
either.right	.gvar
diff.list.snoc	.gvar
gsdl.ags.typeitem.tyexpr	.gvar
maybe.nothing	.gvar
diff.list.tolist	.gvar
diff.list.singleton	.gvar
gsdl.ags.typeitem.decls.tygvar.tygvar	.gvar
pos	.fv	gsdl.sourcepos.t
v	.fv	gsdl.var.t
e0	.karg	either.prim.u	string.t	_gsac.gstype.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	right
res		.fkarg	0	_gsac.gstype.compile_res.ty
em			.undefined	ordered.set.t	gsdl.var.t
gvs			.undefined	list.t	gsdl.var.t
res.tyfvs			.lfield	tyfvs	res
tye0.tyas			.undefined	list.t	gsdl.ags.typeitem.decls.tyarg.t	# Calculate from res.tyfvs
res.tyes			.lfield	tyexprs	res
tye0.ki			.apply	maybe.nothing	gsdl.ags.typeitem.gskind.t
res.tygvs			.lfield	tygvars	res
tye0.tygvs			.apply	diff.list.tolist	gsdl.ags.typeitem.decls.tygvar.t	|	res.tygvs
tye0.ds			.lrecord	tyargs	tye0.tyas	tygvars	tye0.tygvs	|	gsdl.ags.typeitem.decls.t
ref.e			.lfield	res	res
tye0			.apply	gsdl.ags.typeitem.tyexpr	|	pos	v	tye0.ki	tye0.ds	ref.e
tyes			.apply	diff.list.snoc	gsdl.ags.typeitem.t	|	res.tyes	tye0
tyfvs			.undefined	diff.list.t	gsdl.var.t
tygv0			.apply	gsdl.ags.typeitem.decls.tygvar.tygvar	|	v
tygvs			.apply	diff.list.singleton	gsdl.ags.typeitem.decls.tygvar.t	|	tygv0
tyas			.apply	diff.list.tolist	gsdl.var.t	|	res.tyfvs
r			.lrecord	emitted	em	global.subvars	gvs	tyexprs	tyes	tyfun	v	tyfvs	tyfvs	tygvars	tygvs	typeargs	tyas	|	_gsac.gstype.compileToApp_res.ty
			.app	r
			.enter	either.right	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_var_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
maybe.prim.u	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_var_just_k	.subcode
gsdl.cgs.typeenv.typeexpansion.t.out	.cogvar
env	.fv	gsdl.cgs.typeenv.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
mb0	.karg	maybe.prim.u	gsdl.cgs.typeenv.typeexpansion.t
	.analyze	mb0	just	nothing
		.case	just
exp		.fkarg	0	gsdl.cgs.typeenv.typeexpansion.t
			.force	_gsac.gstype.compileToApp_var_just_k
			.coerce	gsdl.cgs.typeenv.typeexpansion.t.out
			.enter	exp
		.case	nothing
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_var_just_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.tylambda.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_var_just_gsabstype_k	.subcode
either.t.out	.cogvar
_gsac.gstype.compileToVar_gsabstype	.gvar
env	.fv	gsdl.cgs.typeenv.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
e0	.karg	gsdl.cgs.typeenv.typeexpansion.prim.u
	.analyze	e0	definedprim	elimprim	expr	gsabstype	impprim	var
		.case	definedprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	elimprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	expr
tyls		.fkarg	0	list.t	gsdl.cgs.typeenv.typeexpansion.tylambda.t
e		.fkarg	1	gsdl.cgs.gstype.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	gsabstype
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.compileToApp_var_just_gsabstype_k
			.coerce	either.t.out	string.t	_gsac.gstype.compileToVar_res.ty
			.app	env	v	em	gvs
			.yield	_gsac.gstype.compileToVar_gsabstype
		.case	impprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	var
v		.fkarg	0	gsdl.var.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
	# > :: either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_var_just_gsabstype_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_var_just_gsabstype_right_k	.subcode
e0	.karg	either.prim.u	string.t	_gsac.gstype.compileToVar_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	right
r		.fkarg	0	_gsac.gstype.compileToVar_res.ty
			.force	_gsac.gstype.compileToApp_var_just_gsabstype_right_k
			.enter	r

_gsac.gstype.compileToApp_var_just_gsabstype_right_k	.forcecont
_gsac.gstype.compileToVar_res.u	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
gsdl.var.t	.tygvar
either.right	.gvar
list.nil	.gvar
r0	.karg	_gsac.gstype.compileToVar_res.u
r.em	.field	emitted	r0
r.gvs	.field	global.subvars	r0
tyas	.apply	list.nil	gsdl.var.t
r.tyes	.field	tyexprs	r0
r.v	.field	var	r0
r.tyfvs	.field	tyfvs	r0
r.tygvs	.field	tygvars	r0
res	.lrecord	emitted	r.em	global.subvars	r.gvs	tyexprs	r.tyes	tyfun	r.v	tyfvs	r.tyfvs	tygvars	r.tygvs	typeargs	tyas	|	_gsac.gstype.compileToApp_res.ty
	.app	res
	.enter	either.right	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_app_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
list.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
_gsac.gstype.compileToApp_app_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.arg	gsdl.sourcepos.t
env	.arg	gsdl.cgs.typeenv.t
tyf	.arg	gsdl.cgs.gstype.t
tyas	.arg	list.t	gsdl.cgs.gstype.t
em	.arg	ordered.set.t	gsdl.var.t
gvs	.arg	list.t	gsdl.var.t
	.force	_gsac.gstype.compileToApp_app_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	tyf

_gsac.gstype.compileToApp_app_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_app_var_k	.subcode
maybe.t.out	.cogvar
_gsac.gstype.compileToApp_app	.gvar
list.:	.gvar
gsdl.cgs.typeenv.typeexpansion.get	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyas	.fv	list.t	gsdl.cgs.gstype.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
tyf0	.karg	gsdl.cgs.gstype.prim.u
	.danalyze	tyf0	app	var	# I believe these are the only legal cases
		.default	# error; illicit function in application
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	app	# recur
tyf1		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
tyas1			.apply	list.:	gsdl.cgs.gstype.t	|	tyx	tyas
			.app	pos	env	tyf1	tyas1	em	gvs
			.yield	_gsac.gstype.compileToApp_app
		.case	var	# look up expansion & proceed from there
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.compileToApp_app_var_k
			.coerce	maybe.t.out	gsdl.cgs.typeenv.typeexpansion.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.typeexpansion.get
	# > :: either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_app_var_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
maybe.prim.u	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_app_var_just_k	.subcode
gsdl.cgs.typeenv.typeexpansion.t.out	.cogvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyas	.fv	list.t	gsdl.cgs.gstype.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
mb0	.karg	maybe.prim.u	gsdl.cgs.typeenv.typeexpansion.t
	.analyze	mb0	just	nothing
		.case	just
exp		.fkarg	0	gsdl.cgs.typeenv.typeexpansion.t
			.force	_gsac.gstype.compileToApp_app_var_just_k
			.coerce	gsdl.cgs.typeenv.typeexpansion.t.out
			.enter	exp
		.case	nothing
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_app_var_just_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.tylambda.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_app_var_just_gsabstype_k	.subcode
either.t.out	.cogvar
_gsac.gstype.compileToVar_gsabstype	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyas	.fv	list.t	gsdl.cgs.gstype.t
em	.fv	ordered.set.t	gsdl.var.t
gvs	.fv	list.t	gsdl.var.t
e0	.karg	gsdl.cgs.typeenv.typeexpansion.prim.u
	.analyze	e0	definedprim	elimprim	expr	gsabstype	impprim	var
		.case	definedprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	elimprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	expr
tys		.fkarg	0	list.t	gsdl.cgs.typeenv.typeexpansion.tylambda.t
e		.fkarg	1	gsdl.cgs.gstype.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	gsabstype
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.compileToApp_app_var_just_gsabstype_k
			.coerce	either.t.out	string.t	_gsac.gstype.compileToVar_res.ty
			.app	env	v	em	gvs
			.yield	_gsac.gstype.compileToVar_gsabstype
		.case	impprim
ps		.fkarg	0	gsdl.var.t
pn		.fkarg	1	gsdl.var.t
ki		.fkarg	2	gsdl.cgs.gskind.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	var
v		.fkarg	0	gsdl.var.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
	# > :: either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_app_var_just_gsabstype_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.var.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_app_var_just_gsabstype_right_k	.subcode
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyas	.fv	list.t	gsdl.cgs.gstype.t
e0	.karg	either.prim.u	string.t	_gsac.gstype.compileToVar_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	right
r		.fkarg	0	_gsac.gstype.compileToVar_res.ty
			.force	_gsac.gstype.compileToApp_app_var_just_gsabstype_right_k
			.enter	r

_gsac.gstype.compileToApp_app_var_just_gsabstype_right_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.var.t	.tygvar
_gsac.gstype.compileToVar_res.u	.tygvar
_gsac.gstype.compileToApp_args	.gvar
diff.list.nil	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyas	.fv	list.t	gsdl.cgs.gstype.t
r0	.karg	_gsac.gstype.compileToVar_res.u
nil	.apply	diff.list.nil	gsdl.var.t
	.app	pos	env	r0	tyas	nil
	.yield	_gsac.gstype.compileToApp_args

_gsac.gstype.compileToApp_args_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
_gsac.gstype.compileToVar_res.u	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
diff.list.t	.tygvar
gsdl.var.t	.tygvar
_gsac.gstype.compileToApp_args_k	.subcode
list.t.out	.cogvar
pos	.arg	gsdl.sourcepos.t
env	.arg	gsdl.cgs.typeenv.t
r	.arg	_gsac.gstype.compileToVar_res.u
as	.arg	list.t	gsdl.cgs.gstype.t
das	.arg	diff.list.t	gsdl.var.t
	.force	_gsac.gstype.compileToApp_args_k
	.coerce	list.t.out	gsdl.cgs.gstype.t
	.enter	as

_gsac.gstype.compileToApp_args_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
_gsac.gstype.compileToVar_res.u	.tygvar
diff.list.t	.tygvar
gsdl.var.t	.tygvar
list.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
_gsac.gstype.compileToApp_args_:_k	.subcode
either.t.out	.cogvar
gsac.gstype.compileToVar	.gvar
either.right	.gvar
diff.list.tolist	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
r	.fv	_gsac.gstype.compileToVar_res.u
das	.fv	diff.list.t	gsdl.var.t
as0	.karg	list.prim.u	gsdl.cgs.gstype.t
em	.field	emitted	r
gvs	.field	global.subvars	r
	.analyze	as0	:	nil
		.case	:
a0		.fkarg	0	gsdl.cgs.gstype.t
as1		.fkarg	1	list.t	gsdl.cgs.gstype.t
a0.gvs			.field	global.subvars	r
			.force	_gsac.gstype.compileToApp_args_:_k
			.coerce	either.t.out	string.t	_gsac.gstype.compileToVar_res.ty
			.app	pos	env	a0	em	gvs
			.enter	gsac.gstype.compileToVar
		.case	nil
tyes			.field	tyexprs	r
v			.field	var	r
tyfvs			.field	tyfvs	r
tygvs			.field	tygvars	r
tyas			.apply	diff.list.tolist	gsdl.var.t	|	das
res			.lrecord	emitted	em	global.subvars	gvs	tyexprs	tyes	tyfun	v	tyfvs	tyfvs	tygvars	tygvs	typeargs	tyas	|	_gsac.gstype.compileToApp_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_args_:_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
_gsac.gstype.compileToVar_res.u	.tygvar
diff.list.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_args_:_right_k	.subcode
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
r	.fv	_gsac.gstype.compileToVar_res.u
das	.fv	diff.list.t	gsdl.var.t
as1	.fv	list.t	gsdl.cgs.gstype.t
a0.er	.karg	either.prim.u	string.t	_gsac.gstype.compileToVar_res.ty
	.analyze	a0.er	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty
		.case	right
a0.r		.fkarg	0	_gsac.gstype.compileToVar_res.ty
			.force	_gsac.gstype.compileToApp_args_:_right_k
			.enter	a0.r

_gsac.gstype.compileToApp_args_:_right_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
_gsac.gstype.compileToVar_res.u	.tygvar
diff.list.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_gsac.gstype.compileToApp_args	.gvar
diff.list.<>	.gvar
diff.list.snoc	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
r	.fv	_gsac.gstype.compileToVar_res.u
das	.fv	diff.list.t	gsdl.var.t
as1	.fv	list.t	gsdl.cgs.gstype.t
a0.r0	.karg	_gsac.gstype.compileToVar_res.u
	# Recur on §gs{as1}
	# The §gs{r} argument is a bit tricky, as we really want to track two bits of information:
	# §begin{itemize}
	#     §item The variable the function was compiled to (§gs{#var r})
	#     §item The various bits of ‘output’ information: §ags{.tygvar}s, §ags{.tylet}s, etc.
	# §end{itemize}
	# To track the second bit correctly, construct a §emph{new} §gs{r} argument for the recursive call,
	# which combines the output from §gs{r} and the outpuf from §gs{a0.r}.
a0.r.em	.field	emitted	a0.r0
a0.r.gvs	.field	global.subvars	a0.r0
r.tyes	.field	tyexprs	r
a0.r.tyes	.field	tyexprs	a0.r0
tyes	.apply	diff.list.<>	gsdl.ags.typeitem.t	|	r.tyes	a0.r.tyes
r.tyfvs	.field	tyfvs	r
a0.r.tyfvs	.field	tyfvs	a0.r0
tyfvs	.apply	diff.list.<>	gsdl.var.t	|	r.tyfvs	a0.r.tyfvs
r.tygvs	.field	tygvars	r
a0.r.tygvs	.field	tygvars	a0.r0
tygvs	.apply	diff.list.<>	gsdl.ags.typeitem.decls.tygvar.t	|	r.tygvs	a0.r.tygvs
v	.field	var	r
r1	.record	emitted	a0.r.em	global.subvars	a0.r.gvs	tyexprs	tyes	tyfvs	tyfvs	tygvars	tygvs	var	v	|	_gsac.gstype.compileToVar_res.u
a0.v	.field	var	a0.r0
das1	.apply	diff.list.snoc	gsdl.var.t	|	das	a0.v
	.app	pos	env	r1	as1	das1
	.yield	_gsac.gstype.compileToApp_args

# §section §gs{gsac.gstype.compileToVar}

_gsac.gstype.compileToVar_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
_gsac.gstype.compileToVar_k	.subcode
either.t.out	.cogvar
gsac.gstype.compileToApp	.gvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
ty	.larg	gsdl.cgs.gstype.t
em	.larg	ordered.set.t	gsdl.var.t
gvs	.larg	list.t	gsdl.var.t
	.force	_gsac.gstype.compileToVar_k
	.coerce	either.t.out	string.t	_gsac.gstype.compileToApp_res.ty
	.app	pos	env	ty	em	gvs
	.enter	gsac.gstype.compileToApp

_gsac.gstype.compileToVar_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToVar_res.ty	.tygvar	# Temp
_gsac.gstype.compileToVar_right_k	.subcode
e0	.karg	either.prim.u	string.t	_gsac.gstype.compileToApp_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compileToVar_res.ty
		.case	right
r		.fkarg	0	_gsac.gstype.compileToApp_res.ty	# §gs{compileToApp} result
			.force	_gsac.gstype.compileToVar_right_k
			.enter	r

_gsac.gstype.compileToVar_right_k	.forcecont
_gsac.gstype.compileToApp_res.u	.tygvar
gsdl.var.t	.tygvar
_gsac.gstype.compileToVar_right_k1	.subcode
list.t.out	.cogvar
r0	.karg	_gsac.gstype.compileToApp_res.u
tyas	.field	typeargs	r0
	.force	_gsac.gstype.compileToVar_right_k1
	.coerce	list.t.out	gsdl.var.t
	.enter	tyas

_gsac.gstype.compileToVar_right_k1	.forcecont
_gsac.gstype.compileToApp_res.u	.tygvar
list.prim.u	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
r0	.fv	_gsac.gstype.compileToApp_res.u
tyas0	.karg	list.prim.u	gsdl.var.t
	.analyze	tyas0	:	nil
		.case	:
a0		.fkarg	0	gsdl.var.t
as1		.fkarg	1	list.t	gsdl.var.t
			# If §gs{compileToApp} does return arguments, we need to emit an extra §ags{.tylet} and return the label on that
			.undef	either.t	string.t	_gsac.gstype.compileToVar_res.ty
		.case	nil
			# If §gs{compileToApp} does not return arguments, just return its ‘function’ inline
r.em			.field	emitted	r0
r.gvs			.field	global.subvars	r0
r.tyes			.field	tyexprs	r0
r.tyfvs			.field	tyfvs	r0
r.tygvs			.field	tygvars	r0
r.tyf			.field	tyfun	r0
res			.lrecord	emitted	r.em	global.subvars	r.gvs	tyexprs	r.tyes	tyfvs	r.tyfvs	tygvars	r.tygvs	var	r.tyf	|	_gsac.gstype.compileToVar_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compileToVar_res.ty

# ↓ Not really a case of §gs{compileToVar}, but just a utility function used in a couple of places
_gsac.gstype.compileToVar_gsabstype_c	.expr
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
ordered.set.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
gsdl.ags.typeitem.t	.tygvar
_gsac.gstype.compileToVar_gsabstype_tygvs_c	.subcode
either.right	.gvar
ordered.set.insert	.gvar
gsdl.var.compare	.gvar
diff.list.nil	.gvar
env	.arg	gsdl.cgs.typeenv.t
v	.arg	gsdl.var.t
em	.arg	ordered.set.t	gsdl.var.t
gvs	.arg	list.t	gsdl.var.t
em1	.apply	ordered.set.insert	gsdl.var.t	|	gsdl.var.compare	v	em
tyes	.apply	diff.list.nil	gsdl.ags.typeitem.t
tyfvs	.apply	diff.list.nil	gsdl.var.t
tygvs	.alloc	_gsac.gstype.compileToVar_gsabstype_tygvs_c
res	.lrecord	emitted	em1	global.subvars	gvs	tyexprs	tyes	tyfvs	tyfvs	tygvars	tygvs	var	v	|	_gsac.gstype.compileToVar_res.ty
	.app	res
	.enter	either.right	string.t	_gsac.gstype.compileToVar_res.ty

_gsac.gstype.compileToVar_gsabstype_tygvs_c	.expr
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
ordered.set.t	.tygvar
_gsac.gstype.compileToVar_gsabstype_tygvs_k	.subcode
bool.t.out	.cogvar
ordered.set.elem	.gvar
gsdl.var.compare	.gvar
env	.fv	gsdl.cgs.typeenv.t
v	.fv	gsdl.var.t
em	.fv	ordered.set.t	gsdl.var.t
	.force	_gsac.gstype.compileToVar_gsabstype_tygvs_k
	.coerce	bool.t.out
	.app	gsdl.var.compare	v	em
	.enter	ordered.set.elem	gsdl.var.t

_gsac.gstype.compileToVar_gsabstype_tygvs_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
bool.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
diff.list.t	.tygvar	# Temp
gsdl.ags.typeitem.decls.tygvar.t	.tygvar	# Temp
_gsac.gstype.compileToVar_gsabstype_tygvs_false_k	.subcode
maybe.t.out	.cogvar
gsdl.cgs.typeenv.gskind.get	.gvar
diff.list.nil	.gvar
env	.fv	gsdl.cgs.typeenv.t
v	.fv	gsdl.var.t
b0	.karg	bool.prim.u	# Have we emitted this global variable yet?
	.analyze	b0	false	true
		.case	false
			.force	_gsac.gstype.compileToVar_gsabstype_tygvs_false_k
			.coerce	maybe.t.out	gsdl.cgs.gskind.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.gskind.get
		.case	true
			.enter	diff.list.nil	gsdl.ags.typeitem.decls.tygvar.t

_gsac.gstype.compileToVar_gsabstype_tygvs_false_k	.forcecont
gsdl.var.t	.tygvar
maybe.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
diff.list.t	.tygvar	# Temp
gsdl.ags.typeitem.decls.tygvar.t	.tygvar	# Temp
_gsac.gstype.compileToVar_gsabstype_tygvs_false_just_k	.subcode
either.t.out	.cogvar
gsac.gstype.gskind.compile	.gvar
v	.fv	gsdl.var.t
mbki0	.karg	maybe.prim.u	gsdl.cgs.gskind.t
	.analyze	mbki0	just	nothing
		.case	just
ki		.fkarg	0	gsdl.cgs.gskind.t
			.force	_gsac.gstype.compileToVar_gsabstype_tygvs_false_just_k
			.coerce	either.t.out	string.t	gsdl.ags.typeitem.gskind.t
			.app	ki
			.enter	gsac.gstype.gskind.compile
		.case	nothing
			.undef	diff.list.t	gsdl.ags.typeitem.decls.tygvar.t

_gsac.gstype.compileToVar_gsabstype_tygvs_false_just_k	.forcecont
gsdl.var.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
diff.list.t	.tygvar	# Temp
diff.list.singleton	.gvar
gsdl.ags.typeitem.decls.tygvar.tyextabstype	.gvar
v	.fv	gsdl.var.t
e0	.karg	either.prim.u	string.t	gsdl.ags.typeitem.gskind.t
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	diff.list.t	gsdl.ags.typeitem.decls.tygvar.t
		.case	right
ki.ags		.fkarg	0	gsdl.ags.typeitem.gskind.t
tygv			.apply	gsdl.ags.typeitem.decls.tygvar.tyextabstype	|	v	ki.ags
			.app	tygv
			.enter	diff.list.singleton	gsdl.ags.typeitem.decls.tygvar.t

# §section §gs{gsac.gstype.fields.compile}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.fields.compile_c	.expr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
_gsac.gstype.fields.compile_k	.subcode
list.t.out	.cogvar
fs	.larg	list.t	gsdl.cgs.gstype.field.t
em	.larg	ordered.set.t	gsdl.var.t
	.force	_gsac.gstype.fields.compile_k
	.coerce	list.t.out	gsdl.cgs.gstype.field.t
	.enter	fs

_gsac.gstype.fields.compile_k	.forcecont
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.prim.u	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
gsdl.var.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
ordered.set.empty	.gvar
diff.list.nil	.gvar
em	.fv	ordered.set.t	gsdl.var.t
fs0	.karg	list.prim.u	gsdl.cgs.gstype.field.t
	.analyze	fs0	:	nil
		.case	:
f0		.fkarg	0	gsdl.cgs.gstype.field.t
fs1		.fkarg	1	list.t	gsdl.cgs.gstype.field.t
			.undef	either.t	string.t	_gsac.gstype.fields.compile_res.ty
		.case	nil
tyes			.apply	diff.list.nil	gsdl.ags.typeitem.t
fs			.apply	diff.list.nil	gsdl.ags.typeitem.field.t
tyfvs			.apply	diff.list.nil	gsdl.var.t
tygvs			.apply	diff.list.nil	gsdl.ags.typeitem.decls.tygvar.t
res			.lrecord	emitted	em	fields	fs	tyexprs	tyes	tyfvs	tyfvs	tygvars	tygvs	|	_gsac.gstype.fields.compile_res.ty
			.app	res
			.enter	either.right	string.t	_gsac.gstype.fields.compile_res.ty

# §section §gs{gsac.gstype.gskind.compile}

# > either.t string.t
_gsac.gstype.gskind.compile_c	.expr
gsdl.cgs.gskind.t	.tygvar
_gsac.gstype.gskind.compile_k	.subcode
gsdl.cgs.gskind.t.out	.cogvar
ki	.larg	gsdl.cgs.gskind.t
	.force	_gsac.gstype.gskind.compile_k
	.coerce	gsdl.cgs.gskind.t.out
	.enter	ki

_gsac.gstype.gskind.compile_k	.forcecont
gsdl.cgs.gskind.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.gskind.compile_exp_k	.subcode
either.t.out	.cogvar
gsac.gstype.gskind.compile	.gvar
either.right	.gvar
gsdl.ags.typeitem.gskind.lifted	.gvar
ki0	.karg	gsdl.cgs.gskind.prim.u
	.analyze	ki0	exp	lifted	unlifted
		.case	exp
kib		.fkarg	0	gsdl.cgs.gskind.t
kie		.fkarg	1	gsdl.cgs.gskind.t
			.force	_gsac.gstype.gskind.compile_exp_k
			.coerce	either.t.out	string.t	gsdl.ags.typeitem.gskind.t
			.app	kib
			.enter	gsac.gstype.gskind.compile
		.case	lifted
			.app	gsdl.ags.typeitem.gskind.lifted
			.enter	either.right	string.t	gsdl.ags.typeitem.gskind.t
		.case	unlifted
			.undef	either.t	string.t	gsdl.ags.typeitem.gskind.t
	# > :: either.t	string.t	gsdl.ags.typeitem.gskind.t

_gsac.gstype.gskind.compile_exp_k	.forcecont
gsdl.cgs.gskind.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.gskind.compile_exp_right_k	.subcode
either.t.out	.cogvar
gsac.gstype.gskind.compile	.gvar
kie	.fv	gsdl.cgs.gskind.t
ekib0	.karg	either.prim.u	string.t	gsdl.ags.typeitem.gskind.t
	.analyze	ekib0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.ags.typeitem.gskind.t
		.case	right
kib.ags		.fkarg	0	gsdl.ags.typeitem.gskind.t
			.force	_gsac.gstype.gskind.compile_exp_right_k
			.coerce	either.t.out	string.t	gsdl.ags.typeitem.gskind.t
			.app	kie
			.enter	gsac.gstype.gskind.compile

_gsac.gstype.gskind.compile_exp_right_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.ags.typeitem.gskind.exp	.gvar
kib.ags	.fv	gsdl.ags.typeitem.gskind.t
ekie0	.karg	either.prim.u	string.t	gsdl.ags.typeitem.gskind.t
	.analyze	ekie0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.ags.typeitem.gskind.t
		.case	right
kie.ags		.fkarg	0	gsdl.ags.typeitem.gskind.t
ki.ags			.apply	gsdl.ags.typeitem.gskind.exp	|	kib.ags	kie.ags
			.app	ki.ags
			.enter	either.right	string.t	gsdl.ags.typeitem.gskind.t

	.type

# §section §gs{gsac.gstype.annotate}

_gsac.gstype.annotate_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.annotate_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	_gsac.gstype.annotate_res.ty

_gsac.gstype.annotate_res.ty	.tyexpr
_gsac.gstype.annotate_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.annotate_res.u

_gsac.gstype.annotate_res.u	.tyexpr
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
	.typroduct	gskind	gsdl.cgs.gskind.t	gstype	gsdl.cgs.gstype.t

# §section §gs{gsac.gstype.fun.annotate}

_gsac.gstype.fun.annotate_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.fun.annotate_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	_gsac.gstype.fun.annotate_res.ty

_gsac.gstype.fun.annotate_res.ty	.tyexpr
_gsac.gstype.fun.annotate_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.fun.annotate_res.u

_gsac.gstype.fun.annotate_res.u	.tyexpr
gsdl.cgs.gskind.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
	.typroduct	gskind	gsdl.cgs.gskind.t	gstype	gsdl.cgs.typeenv.typeexpansion.t

# §section §gs{gsac.gstype.fields.annotate}

_gsac.gstype.fields.annotate_ty	.tyexpr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
either.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
	.tylift
	.tyfun	list.t	gsdl.cgs.gstype.field.t
	.tyref	either.t	string.t	record.empty

# §section §gs{gsac.gstype.check}

_gsac.gstype.check_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	record.empty

# §section §gs{gsac.gstype.compile}

_gsac.gstype.compile_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tylift
	.tyfun	ordered.set.t	gsdl.var.t
	.tylift
	.tyfun	list.t	gsdl.var.t
	.tyref	either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.prim.u
	.tylift
	.tyfun	ordered.set.t	gsdl.var.t
	.tylift
	.tyfun	list.t	gsdl.var.t
	.tyref	either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_res.ty	.tyexpr
_gsac.gstype.compile_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compile_res.u

_gsac.gstype.compile_res.u	.tyexpr
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_emitted_ty	.tylet	ordered.set.t	gsdl.var.t
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
_tyfvs_ty	.tylet	diff.list.t	gsdl.var.t
_tygvars_ty	.tylet	diff.list.t	gsdl.ags.typeitem.decls.tygvar.t
	.typroduct	emitted	_emitted_ty	res	gsdl.ags.typeitem.expr.t	tyexprs	tyexprs_ty	tyfvs	_tyfvs_ty	tygvars	_tygvars_ty

# §section §gs{gsac.gstype.compileToGlobalVar}

_gsac.gstype.compileToGlobalVar_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToGlobalVar_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.var.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	_gsac.gstype.compileToGlobalVar_res.ty

_gsac.gstype.compileToGlobalVar_res.ty	.tyexpr
_gsac.gstype.compileToGlobalVar_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compileToGlobalVar_res.u

_gsac.gstype.compileToGlobalVar_res.u	.tyexpr
gsdl.var.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
	.typroduct	nm	gsdl.var.t	tyexprs	tyexprs_ty

# §section §gs{gsac.gstype.compileToApp}

_gsac.gstype.compileToApp_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tylift
	.tyfun	ordered.set.t	gsdl.var.t
	.tylift
	.tyfun	list.t	gsdl.var.t
	.tyref	either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_res.ty	.tyexpr
_gsac.gstype.compileToApp_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compileToApp_res.u

_gsac.gstype.compileToApp_res.u	.tyexpr
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_emitted_ty	.tylet	ordered.set.t	gsdl.var.t
_global.subvars_ty	.tylet	list.t	gsdl.var.t
_typeargs_ty	.tylet	list.t	gsdl.var.t
_tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
_tyfvs_ty	.tylet	diff.list.t	gsdl.var.t
_tygvars_ty	.tylet	diff.list.t	gsdl.ags.typeitem.decls.tygvar.t
	.typroduct	emitted	_emitted_ty	global.subvars	_global.subvars_ty	tyexprs	_tyexprs_ty	tyfun	gsdl.var.t	tyfvs	_tyfvs_ty	tygvars	_tygvars_ty	typeargs	_typeargs_ty

_gsac.gstype.compileToApp_app_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
list.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
	.tyfun	gsdl.sourcepos.t
	.tyfun	gsdl.cgs.typeenv.t
	.tyfun	gsdl.cgs.gstype.t
	.tyfun	list.t	gsdl.cgs.gstype.t
	.tyfun	ordered.set.t	gsdl.var.t
	.tyfun	list.t	gsdl.var.t
	.tyref	either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_args_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
_gsac.gstype.compileToVar_res.u	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
diff.list.t	.tygvar
gsdl.var.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
	.tyfun	gsdl.sourcepos.t
	.tyfun	gsdl.cgs.typeenv.t
	.tyfun	_gsac.gstype.compileToVar_res.u
	.tyfun	list.t	gsdl.cgs.gstype.t
	.tyfun	diff.list.t	gsdl.var.t
	.tyref	either.t	string.t	_gsac.gstype.compileToApp_res.ty

# §section §gs{gsac.gstype.compileToVar}

_gsac.gstype.compileToVar_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tylift
	.tyfun	ordered.set.t	gsdl.var.t
	.tylift
	.tyfun	list.t	gsdl.var.t
	.tyref	either.t	string.t	_gsac.gstype.compileToVar_res.ty

_gsac.gstype.compileToVar_res.ty	.tyexpr
_gsac.gstype.compileToVar_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compileToVar_res.u

_gsac.gstype.compileToVar_res.u	.tyexpr
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
list.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_emitted_ty	.tylet	ordered.set.t	gsdl.var.t
_global.subvars_ty	.tylet	list.t	gsdl.var.t
_tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
_tyfvs_ty	.tylet	diff.list.t	gsdl.var.t
_tygvars_ty	.tylet	diff.list.t	gsdl.ags.typeitem.decls.tygvar.t
	.typroduct	emitted	_emitted_ty	global.subvars	_global.subvars_ty	tyexprs	_tyexprs_ty	tyfvs	_tyfvs_ty	tygvars	_tygvars_ty	var	gsdl.var.t

# §section §gs{gsac.gstype.fields.compile}

_gsac.gstype.fields.compile_ty	.tyexpr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
	.tylift
	.tyfun	list.t	gsdl.cgs.gstype.field.t
	.tylift
	.tyfun	ordered.set.t	gsdl.var.t
	.tyref	either.t	string.t	_gsac.gstype.fields.compile_res.ty

_gsac.gstype.fields.compile_res.ty	.tyexpr
_gsac.gstype.fields.compile_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.fields.compile_res.u

_gsac.gstype.fields.compile_res.u	.tyexpr
ordered.set.t	.tygvar
gsdl.var.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
gsdl.ags.typeitem.decls.tygvar.t	.tygvar
_emitted_ty	.tylet	ordered.set.t	gsdl.var.t
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
fields_ty	.tylet	diff.list.t	gsdl.ags.typeitem.field.t
_tyfvs_ty	.tylet	diff.list.t	gsdl.var.t
_tygvars_ty	.tylet	diff.list.t	gsdl.ags.typeitem.decls.tygvar.t
	.typroduct	emitted	_emitted_ty	fields	fields_ty	tyexprs	tyexprs_ty	tyfvs	_tyfvs_ty	tygvars	_tygvars_ty

# §section §gs{gsac.gstype.gskind.compile}

_gsac.gstype.gskind.compile_ty	.tyexpr
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gskind.t
	.tyref	either.t	string.t	gsdl.ags.typeitem.gskind.t
