	.prefix

	.data

gsac.gstype.kindcheck	.closure	_gsac.gstype.kindcheck_c	_gsac.gstype.kindcheck_ty
gsac.gstype.fields.kindcheck	.closure	_gsac.gstype.fields.kindcheck_c	_gsac.gstype.fields.kindcheck_ty

gsac.gstype.compile	.closure	_gsac.gstype.compile_c	_gsac.gstype.compile_ty
_gsac.gstype.compile_w	.closure	_gsac.gstype.compile_w_c	_gsac.gstype.compile_w_ty
gsac.gstype.compileToVar	.closure	_gsac.gstype.compileToVar_c	_gsac.gstype.compileToVar_ty

gsac.gstype.fields.compile	.closure	_gsac.gstype.fields.compile_c	_gsac.gstype.fields.compile_ty

gsac.gstype.gskind.compile	.closure	_gsac.gstype.gskind.compile_c	_gsac.gstype.gskind.compile_ty

	.code

# §section §gs{gsac.gstype.kindcheck}

# > either.t string.t
_gsac.gstype.kindcheck_c	.expr
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.kindcheck_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.kindcheck_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.kindcheck_k	.forcecont
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
record.empty	.tygvar
gsdl.cgs.syntax.var.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.kindcheck_lift_k	.subcode
_gsac.gstype.kindcheck_product_k	.subcode
either.t.out	.cogvar
gsac.gstype.kindcheck	.gvar
gsac.gstype.fields.kindcheck	.gvar
ty0	.karg	gsdl.cgs.gstype.prim.u
	.analyze	ty0	app	lift	product	var
		.case	app
tyf		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	lift
ty1		.fkarg	0	gsdl.cgs.gstype.t
			.force	_gsac.gstype.kindcheck_lift_k
			.coerce	either.t.out	string.t	gsdl.cgs.gskind.t
			.app	ty1
			.enter	gsac.gstype.kindcheck
		.case	product
fs		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
			.force	_gsac.gstype.kindcheck_product_k
			.coerce	either.t.out	string.t	record.empty
			.app	fs
			.enter	gsac.gstype.fields.kindcheck
		.case	var
v		.fkarg	0	gsdl.cgs.syntax.var.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
	# > :: either.t	string.t	gsdl.cgs.gskind.t

_gsac.gstype.kindcheck_lift_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.kindcheck_lift_right_k	.subcode
either.t.out	.cogvar
gsac.gskind.check	.gvar
gsdl.cgs.gskind.unlifted	.gvar
e0	.karg	either.prim.u	string.t	gsdl.cgs.gskind.t
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	right
ky		.fkarg	0	gsdl.cgs.gskind.t
			.force	_gsac.gstype.kindcheck_lift_right_k
			.coerce	either.t.out	string.t	record.empty
			.app	ky	gsdl.cgs.gskind.unlifted
			.enter	gsac.gskind.check

_gsac.gstype.kindcheck_lift_right_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.cgs.gskind.lifted	.gvar
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	right
r		.fkarg	0	record.empty
			.app	gsdl.cgs.gskind.lifted
			.enter	either.right	string.t	gsdl.cgs.gskind.t

_gsac.gstype.kindcheck_product_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
gsdl.cgs.gskind.t	.tygvar	# Temp
either.right	.gvar
gsdl.cgs.gskind.unlifted	.gvar
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	right
r		.fkarg	0	record.empty
			.app	gsdl.cgs.gskind.unlifted
			.enter	either.right	string.t	gsdl.cgs.gskind.t

# §section §gs{gsac.gstype.fields.kindcheck}

_gsac.gstype.fields.kindcheck_c	.expr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
_gsac.gstype.fields.kindcheck_k	.subcode
list.t.out	.cogvar
fs	.larg	list.t	gsdl.cgs.gstype.field.t
	.force	_gsac.gstype.fields.kindcheck_k
	.coerce	list.t.out	gsdl.cgs.gstype.field.t
	.enter	fs

_gsac.gstype.fields.kindcheck_k	.forcecont
list.prim.u	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
list.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
record.empty	.gvar
fs0	.karg	list.prim.u	gsdl.cgs.gstype.field.t
	.analyze	fs0	:	nil
		.case	:
f0		.fkarg	0	gsdl.cgs.gstype.field.t
fs1		.fkarg	1	list.t	gsdl.cgs.gstype.field.t
			.undef	either.t	string.t	record.empty
		.case	nil
			.app	record.empty
			.enter	either.right	string.t	record.empty

# §section §gs{gsac.gstype.compile}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.compile_c	.expr
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.compile_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.compile_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.compile_k	.forcecont
gsdl.cgs.gstype.prim.u	.tygvar
_gsac.gstype.compile_w	.gvar
ty0	.karg	gsdl.cgs.gstype.prim.u
	.app	ty0
	.enter	_gsac.gstype.compile_w

_gsac.gstype.compile_w_c	.expr
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
gsdl.cgs.syntax.var.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compile_w_lift_k	.subcode
_gsac.gstype.compile_w_product_k	.subcode
either.t.out	.cogvar
gsac.gstype.compile	.gvar
gsac.gstype.fields.compile	.gvar
ty0	.larg	gsdl.cgs.gstype.prim.u
	.analyze	ty0	app	lift	product	var
		.case	app
tyf		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	lift
ty1		.fkarg	0	gsdl.cgs.gstype.t
			.force	_gsac.gstype.compile_w_lift_k
			.coerce	either.t.out	string.t	_gsac.gstype.compile_res.ty
			.app	ty1
			.enter	gsac.gstype.compile
		.case	product
fs		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
			.force	_gsac.gstype.compile_w_product_k
			.coerce	either.t.out	string.t	_gsac.gstype.fields.compile_res.ty
			.app	fs
			.enter	gsac.gstype.fields.compile
		.case	var
v		.fkarg	0	gsdl.cgs.syntax.var.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
	# > :: either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_lift_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
either.t	.tygvar	# Temp
gsdl.ags.typeitem.expr.t	.tygvar	# Temp
diff.list.t	.tygvar	# Temp
gsdl.ags.typeitem.t	.tygvar	# Temp
either.right	.gvar
gsdl.ags.typeitem.expr.lift	.gvar
e0	.karg	either.prim.u	string.t	_gsac.gstype.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	right
res1		.fkarg	0	_gsac.gstype.compile_res.ty
res0.1			.lfield	res	res1
res0			.apply	gsdl.ags.typeitem.expr.lift	|	res0.1
es0			.undefined	diff.list.t	gsdl.ags.typeitem.t
res			.lrecord	res	res0	tyexprs	es0
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_product_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
either.t	.tygvar	# Temp
gsdl.ags.typeitem.expr.t	.tygvar	# Temp
diff.list.t	.tygvar	# Temp
gsdl.ags.typeitem.t	.tygvar	# Temp
list.t	.tygvar	# Temp
either.right	.gvar
gsdl.ags.typeitem.expr.product	.gvar
diff.list.tolist	.gvar
e0	.karg	either.prim.u	string.t	_gsac.gstype.fields.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	right
fs.res		.fkarg	0	_gsac.gstype.fields.compile_res.ty
res0.fs.d			.lfield	fields	fs.res
res0.fs			.apply	diff.list.tolist	gsdl.ags.typeitem.field.t	|	res0.fs.d
res0			.apply	gsdl.ags.typeitem.expr.product	|	res0.fs
tyes			.undefined	diff.list.t	gsdl.ags.typeitem.t
res			.lrecord		res	res0	tyexprs	tyes
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compile_res.ty

# §section §gs{gsac.gstype.compileToVar}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.compileToVar_c	.expr
string.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.compileToVar_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
nm0	.larg	string.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.compileToVar_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.compileToVar_k	.forcecont
string.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
gsdl.cgs.syntax.var.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToVar_res.ty	.tygvar	# Temp
_gsac.gstype.compileToVar_k1	.subcode
either.t.out	.cogvar
_gsac.gstype.compile_w	.gvar
nm0	.fv	string.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	.danalyze	ty0	var
		.default
			.force	_gsac.gstype.compileToVar_k1
			.coerce	either.t.out	string.t	_gsac.gstype.compile_res.ty
			.app	ty0
			.enter	_gsac.gstype.compile_w
		.case	var
v		.fkarg	0	gsdl.cgs.syntax.var.t
			.undef	either.t	string.t	_gsac.gstype.compileToVar_res.ty
	# > :: either.t	string.t	_gsac.gstype.compileToVar_res.ty

_gsac.gstype.compileToVar_k1	.forcecont
string.t	.tygvar
either.prim.u	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
diff.list.t	.tygvar
either.t	.tygvar	# Temp
#diff.list.t	.tygvar	# Temp
#gsdl.ags.typeitem.t	.tygvar	# Temp
either.right	.gvar
diff.list.:	.gvar
gsdl.ags.typeitem.tyexpr	.gvar
maybe.nothing	.gvar
nm0	.fv	string.t
e0	.karg	either.prim.u	string.t	_gsac.gstype.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compileToVar_res.ty
		.case	right
res1		.fkarg	0	_gsac.gstype.compile_res.ty
nothing			.apply	maybe.nothing	gsdl.ags.typeitem.gskind.t
tye0.0			.lfield	res	res1
tye0			.apply	gsdl.ags.typeitem.tyexpr	|	nm0	nothing	tye0.0
tyes1			.undefined	diff.list.t	gsdl.ags.typeitem.t
tyes			.apply	diff.list.:	gsdl.ags.typeitem.t	|	tye0	tyes1
res			.lrecord	nm	nm0	tyexprs	tyes
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compileToVar_res.ty

# §section §gs{gsac.gstype.fields.compile}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.fields.compile_c	.expr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
_gsac.gstype.fields.compile_k	.subcode
list.t.out	.cogvar
fs	.larg	list.t	gsdl.cgs.gstype.field.t
	.force	_gsac.gstype.fields.compile_k
	.coerce	list.t.out	gsdl.cgs.gstype.field.t
	.enter	fs

_gsac.gstype.fields.compile_k	.forcecont
list.prim.u	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
either.t	.tygvar	# Temp
diff.list.t	.tygvar	# Temp
gsdl.ags.typeitem.t	.tygvar	# Temp
gsdl.ags.typeitem.field.t	.tygvar	# Temp
either.right	.gvar
diff.list.nil	.gvar
fs0	.karg	list.prim.u	gsdl.cgs.gstype.field.t
	.analyze	fs0	:	nil
		.case	:
f0		.fkarg	0	gsdl.cgs.gstype.field.t
fs1		.fkarg	1	list.t	gsdl.cgs.gstype.field.t
			.undef	either.t	string.t	_gsac.gstype.fields.compile_res.ty
		.case	nil
tyes			.undefined	diff.list.t	gsdl.ags.typeitem.t
fs			.apply	diff.list.nil	gsdl.ags.typeitem.field.t
res			.lrecord	fields	fs	tyexprs	tyes
			.app	res
			.enter	either.right	string.t	_gsac.gstype.fields.compile_res.ty

# §section §gs{gsac.gstype.gskind.compile}

# > either.t string.t
_gsac.gstype.gskind.compile_c	.expr
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
gsdl.ags.typeitem.gskind.t	.tygvar	# Temp
ky	.larg	gsdl.cgs.gskind.t
	.undef	either.t	string.t	gsdl.ags.typeitem.gskind.t

	.type

# §section §gs{gsac.gstype.kindcheck}

_gsac.gstype.kindcheck_ty	.tyexpr
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	gsdl.cgs.gskind.t

# §section §gs{gsac.gstype.fields.kindcheck}

_gsac.gstype.fields.kindcheck_ty	.tyexpr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
either.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
	.tylift
	.tyfun	list.t	gsdl.cgs.gstype.field.t
	.tyref	either.t	string.t	record.empty

# §section §gs{gsac.gstype.compile}

_gsac.gstype.compile_ty	.tyexpr
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_ty	.tyexpr
gsdl.cgs.gstype.prim.u	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gstype.prim.u
	.tyref	either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_res.ty	.tyexpr
_gsac.gstype.compile_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compile_res.u

_gsac.gstype.compile_res.u	.tyexpr
gsdl.ags.typeitem.expr.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
	.typroduct	res	gsdl.ags.typeitem.expr.t	tyexprs	tyexprs_ty

# §section §gs{gsac.gstype.compileToVar}

_gsac.gstype.compileToVar_ty	.tyexpr
string.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
_gsac.gstype.compileToVar_res.ty	.tygvar
	.tylift
	.tyfun	string.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	_gsac.gstype.compileToVar_res.ty

_gsac.gstype.compileToVar_res.ty	.tyexpr
_gsac.gstype.compileToVar_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compileToVar_res.u

_gsac.gstype.compileToVar_res.u	.tyexpr
string.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
	.typroduct	nm	string.t	tyexprs	tyexprs_ty

# §section §gs{gsac.gstype.fields.compile}

_gsac.gstype.fields.compile_ty	.tyexpr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
	.tylift
	.tyfun	list.t	gsdl.cgs.gstype.field.t
	.tyref	either.t	string.t	_gsac.gstype.fields.compile_res.ty

_gsac.gstype.fields.compile_res.ty	.tyexpr
_gsac.gstype.fields.compile_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.fields.compile_res.u

_gsac.gstype.fields.compile_res.u	.tyexpr
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
fields_ty	.tylet	diff.list.t	gsdl.ags.typeitem.field.t
	.typroduct	fields	fields_ty	tyexprs	tyexprs_ty

# §section §gs{gsac.gstype.gskind.compile}

_gsac.gstype.gskind.compile_ty	.tyexpr
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gskind.t
	.tyref	either.t	string.t	gsdl.ags.typeitem.gskind.t
