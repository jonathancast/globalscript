	.prefix

	.data

gsac.gstype.kindcheck	.closure	_gsac.gstype.kindcheck_c	_gsac.gstype.kindcheck_ty
_gsac.gstype.kindcheck_var_nothing_prefix.s	.string	Unknown\stype\svariable\s'
_gsac.gstype.kindcheck_var_nothing_suffix.s	.string	'

gsac.gstype.fields.kindcheck	.closure	_gsac.gstype.fields.kindcheck_c	_gsac.gstype.fields.kindcheck_ty

gsac.gstype.compile	.closure	_gsac.gstype.compile_c	_gsac.gstype.compile_ty
_gsac.gstype.compile_w	.closure	_gsac.gstype.compile_w_c	_gsac.gstype.compile_w_ty
gsac.gstype.compileToGlobalVar	.closure	_gsac.gstype.compileToGlobalVar_c	_gsac.gstype.compileToGlobalVar_ty
gsac.gstype.compileToApp	.closure	_gsac.gstype.compileToApp_c	_gsac.gstype.compileToApp_ty

gsac.gstype.fields.compile	.closure	_gsac.gstype.fields.compile_c	_gsac.gstype.fields.compile_ty

gsac.gstype.gskind.compile	.closure	_gsac.gstype.gskind.compile_c	_gsac.gstype.gskind.compile_ty

	.code

# §section §gs{gsac.gstype.kindcheck}

# > either.t string.t
_gsac.gstype.kindcheck_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.kindcheck_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.kindcheck_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.kindcheck_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
record.empty	.tygvar
gsdl.var.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.kindcheck_app_k	.subcode
_gsac.gstype.kindcheck_lift_k	.subcode
_gsac.gstype.kindcheck_product_k	.subcode
_gsac.gstype.kindcheck_var_k	.subcode
either.t.out	.cogvar
maybe.t.out	.cogvar
gsac.gstype.kindcheck	.gvar
gsac.gstype.fields.kindcheck	.gvar
gsdl.cgs.typeenv.gskind.get	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	.analyze	ty0	app	lift	product	var
		.case	app
tyf		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
			.force	_gsac.gstype.kindcheck_app_k
			.coerce	either.t.out	string.t	gsdl.cgs.gskind.t
			.app	pos	env	tyf
			.enter	gsac.gstype.kindcheck
		.case	lift
ty1		.fkarg	0	gsdl.cgs.gstype.t
			.force	_gsac.gstype.kindcheck_lift_k
			.coerce	either.t.out	string.t	gsdl.cgs.gskind.t
			.app	pos	env	ty1
			.enter	gsac.gstype.kindcheck
		.case	product
fs		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
			.force	_gsac.gstype.kindcheck_product_k
			.coerce	either.t.out	string.t	record.empty
			.app	fs
			.enter	gsac.gstype.fields.kindcheck
		.case	var
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.kindcheck_var_k
			.coerce	maybe.t.out	gsdl.cgs.gskind.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.gskind.get
	# > :: either.t	string.t	gsdl.cgs.gskind.t

_gsac.gstype.kindcheck_app_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
_gsac.gstype.kindcheck_app_right_k	.subcode
gsdl.cgs.gskind.t.out	.cogvar
either.left	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyx	.fv	gsdl.cgs.gstype.t
efki0	.karg	either.prim.u	string.t	gsdl.cgs.gskind.t
	.analyze	efki0	left	right
		.case	left
err		.fkarg	0	string.t
			.app	err
			.enter	either.left	string.t	gsdl.cgs.gskind.t
		.case	right
fki		.fkarg	0	gsdl.cgs.gskind.t
			.force	_gsac.gstype.kindcheck_app_right_k
			.coerce	gsdl.cgs.gskind.t.out
			.enter	fki

_gsac.gstype.kindcheck_app_right_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
gsdl.cgs.gskind.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.kindcheck_app_right_exp_k	.subcode
either.t.out	.cogvar
gsac.gstype.kindcheck	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
tyx	.fv	gsdl.cgs.gstype.t
ki0	.karg	gsdl.cgs.gskind.prim.u	# Kind of type function
	.analyze	ki0	exp	lifted	unlifted
		.case	exp
ki.b		.fkarg	0	gsdl.cgs.gskind.t
ki.e		.fkarg	1	gsdl.cgs.gskind.t
			.force	_gsac.gstype.kindcheck_app_right_exp_k
			.coerce	either.t.out	string.t	gsdl.cgs.gskind.t
			.app	pos	env	tyx
			.enter	gsac.gstype.kindcheck
		.case	lifted
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	unlifted
			.undef	either.t	string.t	gsdl.cgs.gskind.t
	# > :: either.t	string.t	gsdl.cgs.gskind.t

_gsac.gstype.kindcheck_app_right_exp_k	.forcecont
gsdl.cgs.gskind.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.kindcheck_app_right_exp_right_k	.subcode
either.t.out	.cogvar
gsac.gskind.check	.gvar
ki.b	.fv	gsdl.cgs.gskind.t
ki.e	.fv	gsdl.cgs.gskind.t
ekix	.karg	either.prim.u	string.t	gsdl.cgs.gskind.t
	.analyze	ekix	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	right
kix		.fkarg	0	gsdl.cgs.gskind.t
			.force	_gsac.gstype.kindcheck_app_right_exp_right_k
			.coerce	either.t.out	string.t	record.empty
			.app	kix	ki.e
			.enter	gsac.gskind.check

_gsac.gstype.kindcheck_app_right_exp_right_k	.forcecont
gsdl.cgs.gskind.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
ki.b	.fv	gsdl.cgs.gskind.t
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	right
x		.fkarg	0	record.empty
			.app	ki.b
			.enter	either.right	string.t	gsdl.cgs.gskind.t

_gsac.gstype.kindcheck_lift_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.kindcheck_lift_right_k	.subcode
either.t.out	.cogvar
gsac.gskind.check	.gvar
gsdl.cgs.gskind.unlifted	.gvar
e0	.karg	either.prim.u	string.t	gsdl.cgs.gskind.t
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	right
ky		.fkarg	0	gsdl.cgs.gskind.t
			.force	_gsac.gstype.kindcheck_lift_right_k
			.coerce	either.t.out	string.t	record.empty
			.app	ky	gsdl.cgs.gskind.unlifted
			.enter	gsac.gskind.check

_gsac.gstype.kindcheck_lift_right_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.cgs.gskind.lifted	.gvar
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	right
r		.fkarg	0	record.empty
			.app	gsdl.cgs.gskind.lifted
			.enter	either.right	string.t	gsdl.cgs.gskind.t

_gsac.gstype.kindcheck_product_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
gsdl.cgs.gskind.t	.tygvar	# Temp
either.right	.gvar
gsdl.cgs.gskind.unlifted	.gvar
e0	.karg	either.prim.u	string.t	record.empty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	gsdl.cgs.gskind.t
		.case	right
r		.fkarg	0	record.empty
			.app	gsdl.cgs.gskind.unlifted
			.enter	either.right	string.t	gsdl.cgs.gskind.t

_gsac.gstype.kindcheck_var_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
maybe.prim.u	.tygvar
gsdl.cgs.gskind.t	.tygvar
string.t	.tygvar
rune.t	.tygvar
either.right	.gvar
either.left	.gvar
list.<>	.gvar
gsdl.sourcepos.print	.gvar
list.:	.gvar
rune.colon	.gvar
rune.space	.gvar
_gsac.gstype.kindcheck_var_nothing_prefix.s	.gvar
gsdl.cgs.syntax.var.print	.gvar
_gsac.gstype.kindcheck_var_nothing_suffix.s	.gvar
pos	.fv	gsdl.sourcepos.t
v	.fv	gsdl.var.t
mb0	.karg	maybe.prim.u	gsdl.cgs.gskind.t
	.analyze	mb0	just	nothing
		.case	just
ki		.fkarg	0	gsdl.cgs.gskind.t
			.app	ki
			.enter	either.right	string.t	gsdl.cgs.gskind.t
		.case	nothing
pos.s			.apply	gsdl.sourcepos.print	|	pos
var.s			.apply	gsdl.cgs.syntax.var.print	|	v
msg.4			.apply	list.<>	rune.t	|	var.s	_gsac.gstype.kindcheck_var_nothing_suffix.s
msg.3			.apply	list.<>	rune.t	|	_gsac.gstype.kindcheck_var_nothing_prefix.s	msg.4
msg.2			.apply	list.:	rune.t	|	rune.space	msg.3
msg.1			.apply	list.:	rune.t	|	rune.colon	msg.2
msg			.apply	list.<>	rune.t	|	pos.s	msg.1
			.app	msg
			.enter	either.left	string.t	gsdl.cgs.gskind.t

# §section §gs{gsac.gstype.fields.kindcheck}

_gsac.gstype.fields.kindcheck_c	.expr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
_gsac.gstype.fields.kindcheck_k	.subcode
list.t.out	.cogvar
fs	.larg	list.t	gsdl.cgs.gstype.field.t
	.force	_gsac.gstype.fields.kindcheck_k
	.coerce	list.t.out	gsdl.cgs.gstype.field.t
	.enter	fs

_gsac.gstype.fields.kindcheck_k	.forcecont
list.prim.u	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
list.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
record.empty	.gvar
fs0	.karg	list.prim.u	gsdl.cgs.gstype.field.t
	.analyze	fs0	:	nil
		.case	:
f0		.fkarg	0	gsdl.cgs.gstype.field.t
fs1		.fkarg	1	list.t	gsdl.cgs.gstype.field.t
			.undef	either.t	string.t	record.empty
		.case	nil
			.app	record.empty
			.enter	either.right	string.t	record.empty

# §section §gs{gsac.gstype.compile}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.compile_c	.expr
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.compile_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
env	.larg	gsdl.cgs.typeenv.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.compile_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.compile_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
_gsac.gstype.compile_w	.gvar
env	.fv	gsdl.cgs.typeenv.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	.app	env	ty0
	.enter	_gsac.gstype.compile_w

_gsac.gstype.compile_w_c	.expr
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
gsdl.cgs.gstype.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compile_w_app_k	.subcode
_gsac.gstype.compile_w_lift_k	.subcode
_gsac.gstype.compile_w_product_k	.subcode
_gsac.gstype.compile_w_var_k	.subcode
either.t.out	.cogvar
maybe.t.out	.cogvar
gsac.gstype.compileToApp	.gvar
gsac.gstype.compile	.gvar
gsac.gstype.fields.compile	.gvar
gsdl.cgs.typeenv.typeexpansion.get	.gvar
env	.larg	gsdl.cgs.typeenv.t
ty0	.larg	gsdl.cgs.gstype.prim.u
	.analyze	ty0	app	lift	product	var
		.case	app
tyf		.fkarg	0	gsdl.cgs.gstype.t
tyx		.fkarg	1	gsdl.cgs.gstype.t
			.force	_gsac.gstype.compile_w_app_k
			.coerce	either.t.out	string.t	_gsac.gstype.compileToApp_res.ty
			.app	env	tyf
			.enter	gsac.gstype.compileToApp
		.case	lift
ty1		.fkarg	0	gsdl.cgs.gstype.t
			.force	_gsac.gstype.compile_w_lift_k
			.coerce	either.t.out	string.t	_gsac.gstype.compile_res.ty
			.app	env	ty1
			.enter	gsac.gstype.compile
		.case	product
fs		.fkarg	0	list.t	gsdl.cgs.gstype.field.t
			.force	_gsac.gstype.compile_w_product_k
			.coerce	either.t.out	string.t	_gsac.gstype.fields.compile_res.ty
			.app	fs
			.enter	gsac.gstype.fields.compile
		.case	var
v		.fkarg	0	gsdl.var.t
			.force	_gsac.gstype.compile_w_var_k
			.coerce	maybe.t.out	gsdl.cgs.typeenv.typeexpansion.t
			.app	v	env
			.enter	gsdl.cgs.typeenv.typeexpansion.get
	# > :: either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_app_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compile_res.ty	.tygvar	# Temp
e0	.karg	either.prim.u	string.t	_gsac.gstype.compileToApp_res.ty
	.undef	either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_lift_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.ags.typeitem.expr.lift	.gvar
e0	.karg	either.prim.u	string.t	_gsac.gstype.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	right
res1		.fkarg	0	_gsac.gstype.compile_res.ty
res0.1			.lfield	res	res1
res0			.apply	gsdl.ags.typeitem.expr.lift	|	res0.1
es0			.lfield	tyexprs	res1
res			.lrecord	res	res0	tyexprs	es0
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_product_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
gsdl.ags.typeitem.expr.product	.gvar
diff.list.tolist	.gvar
e0	.karg	either.prim.u	string.t	_gsac.gstype.fields.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compile_res.ty
		.case	right
fs.res		.fkarg	0	_gsac.gstype.fields.compile_res.ty
res0.fs.d			.lfield	fields	fs.res
res0.fs			.apply	diff.list.tolist	gsdl.ags.typeitem.field.t	|	res0.fs.d
res0			.apply	gsdl.ags.typeitem.expr.product	|	res0.fs
tyes			.lfield	tyexprs	fs.res
res			.lrecord		res	res0	tyexprs	tyes
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_var_k	.forcecont
maybe.prim.u	.tygvar
gsdl.cgs.typeenv.typeexpansion.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
_gsac.gstype.compile_res.ty	.tygvar	# Temp
mb0	.karg	maybe.prim.u	gsdl.cgs.typeenv.typeexpansion.t
	.undef	either.t	string.t	_gsac.gstype.compile_res.ty

# §section §gs{gsac.gstype.compileToGlobalVar}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.compileToGlobalVar_c	.expr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.compileToGlobalVar_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
pos	.larg	gsdl.sourcepos.t
env	.larg	gsdl.cgs.typeenv.t
nm0	.larg	gsdl.var.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.compileToGlobalVar_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.compileToGlobalVar_k	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToGlobalVar_res.ty	.tygvar	# Temp
_gsac.gstype.compileToGlobalVar_k1	.subcode
either.t.out	.cogvar
_gsac.gstype.compile_w	.gvar
pos	.fv	gsdl.sourcepos.t
env	.fv	gsdl.cgs.typeenv.t
nm0	.fv	gsdl.var.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	.force	_gsac.gstype.compileToGlobalVar_k1
	.coerce	either.t.out	string.t	_gsac.gstype.compile_res.ty
	.app	env	ty0
	.enter	_gsac.gstype.compile_w

_gsac.gstype.compileToGlobalVar_k1	.forcecont
gsdl.sourcepos.t	.tygvar
gsdl.var.t	.tygvar
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
_gsac.gstype.compileToGlobalVar_res.ty	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
gsdl.ags.typeitem.decls.t	.tygvar
gsdl.ags.typeitem.expr.t	.tygvar
diff.list.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
diff.list.:	.gvar
gsdl.ags.typeitem.tyexpr	.gvar
maybe.nothing	.gvar
pos	.fv	gsdl.sourcepos.t
nm0	.fv	gsdl.var.t
e0	.karg	either.prim.u	string.t	_gsac.gstype.compile_res.ty
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	string.t
			.undef	either.t	string.t	_gsac.gstype.compileToGlobalVar_res.ty
		.case	right
res1		.fkarg	0	_gsac.gstype.compile_res.ty
nothing			.apply	maybe.nothing	gsdl.ags.typeitem.gskind.t
ds			.lrecord	|	gsdl.ags.typeitem.decls.t
tye0.0			.lfield	res	res1
tye0			.apply	gsdl.ags.typeitem.tyexpr	|	pos	nm0	nothing	ds	tye0.0
tyes1			.lfield	tyexprs	res1
tyes			.apply	diff.list.:	gsdl.ags.typeitem.t	|	tye0	tyes1
res			.lrecord	nm	nm0	tyexprs	tyes
			.app	res
			.enter	either.right	string.t	_gsac.gstype.compileToGlobalVar_res.ty

# §section §gs{gsac.gstype.compileToApp}

_gsac.gstype.compileToApp_c	.expr
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
_gsac.gstype.compileToApp_k	.subcode
gsdl.cgs.gstype.t.out	.cogvar
env	.larg	gsdl.cgs.typeenv.t
ty	.larg	gsdl.cgs.gstype.t
	.force	_gsac.gstype.compileToApp_k
	.coerce	gsdl.cgs.gstype.t.out
	.enter	ty

_gsac.gstype.compileToApp_k	.forcecont
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
_gsac.gstype.compileToApp_default_k	.subcode
either.t.out	.cogvar
_gsac.gstype.compile_w	.gvar
env	.fv	gsdl.cgs.typeenv.t
ty0	.karg	gsdl.cgs.gstype.prim.u
	# > .danalyze	ty0
		# > .default
			.force	_gsac.gstype.compileToApp_default_k
			.coerce	either.t.out	string.t	_gsac.gstype.compile_res.ty
			.app	env	ty0
			.enter	_gsac.gstype.compile_w
	# > :: either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_default_k	.forcecont
either.prim.u	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
either.t	.tygvar	# Temp
_gsac.gstype.compileToApp_res.ty	.tygvar	# Temp
e0	.karg	either.prim.u	string.t	_gsac.gstype.compile_res.ty
	.undef	either.t	string.t	_gsac.gstype.compileToApp_res.ty

# §section §gs{gsac.gstype.fields.compile}

# > either.t string.t ⊕ writer.m (diff.list.t gsdl.ags.typeitem.t)
_gsac.gstype.fields.compile_c	.expr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
_gsac.gstype.fields.compile_k	.subcode
list.t.out	.cogvar
fs	.larg	list.t	gsdl.cgs.gstype.field.t
	.force	_gsac.gstype.fields.compile_k
	.coerce	list.t.out	gsdl.cgs.gstype.field.t
	.enter	fs

_gsac.gstype.fields.compile_k	.forcecont
list.prim.u	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
list.t	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
either.t	.tygvar	# Temp
either.right	.gvar
diff.list.nil	.gvar
fs0	.karg	list.prim.u	gsdl.cgs.gstype.field.t
	.analyze	fs0	:	nil
		.case	:
f0		.fkarg	0	gsdl.cgs.gstype.field.t
fs1		.fkarg	1	list.t	gsdl.cgs.gstype.field.t
			.undef	either.t	string.t	_gsac.gstype.fields.compile_res.ty
		.case	nil
tyes			.apply	diff.list.nil	gsdl.ags.typeitem.t
fs			.apply	diff.list.nil	gsdl.ags.typeitem.field.t
res			.lrecord	fields	fs	tyexprs	tyes
			.app	res
			.enter	either.right	string.t	_gsac.gstype.fields.compile_res.ty

# §section §gs{gsac.gstype.gskind.compile}

# > either.t string.t
_gsac.gstype.gskind.compile_c	.expr
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar	# Temp
string.t	.tygvar	# Temp
gsdl.ags.typeitem.gskind.t	.tygvar	# Temp
ky	.larg	gsdl.cgs.gskind.t
	.undef	either.t	string.t	gsdl.ags.typeitem.gskind.t

	.type

# §section §gs{gsac.gstype.kindcheck}

_gsac.gstype.kindcheck_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
gsdl.cgs.gskind.t	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	gsdl.cgs.gskind.t

# §section §gs{gsac.gstype.fields.kindcheck}

_gsac.gstype.fields.kindcheck_ty	.tyexpr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
either.t	.tygvar
string.t	.tygvar
record.empty	.tygvar
	.tylift
	.tyfun	list.t	gsdl.cgs.gstype.field.t
	.tyref	either.t	string.t	record.empty

# §section §gs{gsac.gstype.compile}

_gsac.gstype.compile_ty	.tyexpr
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_w_ty	.tyexpr
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.prim.u	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compile_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.prim.u
	.tyref	either.t	string.t	_gsac.gstype.compile_res.ty

_gsac.gstype.compile_res.ty	.tyexpr
_gsac.gstype.compile_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compile_res.u

_gsac.gstype.compile_res.u	.tyexpr
gsdl.ags.typeitem.expr.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
	.typroduct	res	gsdl.ags.typeitem.expr.t	tyexprs	tyexprs_ty

# §section §gs{gsac.gstype.compileToGlobalVar}

_gsac.gstype.compileToGlobalVar_ty	.tyexpr
gsdl.sourcepos.t	.tygvar
gsdl.cgs.typeenv.t	.tygvar
gsdl.var.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToGlobalVar_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.sourcepos.t
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.var.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	_gsac.gstype.compileToGlobalVar_res.ty

_gsac.gstype.compileToGlobalVar_res.ty	.tyexpr
_gsac.gstype.compileToGlobalVar_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compileToGlobalVar_res.u

_gsac.gstype.compileToGlobalVar_res.u	.tyexpr
gsdl.var.t	.tygvar
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
	.typroduct	nm	gsdl.var.t	tyexprs	tyexprs_ty

_gsac.gstype.compileToApp_ty	.tyexpr
gsdl.cgs.typeenv.t	.tygvar
gsdl.cgs.gstype.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.compileToApp_res.ty	.tygvar
	.tylift
	.tyfun	gsdl.cgs.typeenv.t
	.tylift
	.tyfun	gsdl.cgs.gstype.t
	.tyref	either.t	string.t	_gsac.gstype.compileToApp_res.ty

_gsac.gstype.compileToApp_res.ty	.tyexpr
_gsac.gstype.compileToApp_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.compileToApp_res.u

_gsac.gstype.compileToApp_res.u	.tyexpr
	.typroduct

# §section §gs{gsac.gstype.fields.compile}

_gsac.gstype.fields.compile_ty	.tyexpr
list.t	.tygvar
gsdl.cgs.gstype.field.t	.tygvar
either.t	.tygvar
string.t	.tygvar
_gsac.gstype.fields.compile_res.ty	.tygvar
	.tylift
	.tyfun	list.t	gsdl.cgs.gstype.field.t
	.tyref	either.t	string.t	_gsac.gstype.fields.compile_res.ty

_gsac.gstype.fields.compile_res.ty	.tyexpr
_gsac.gstype.fields.compile_res.u	.tygvar
	.tylift
	.tyref	_gsac.gstype.fields.compile_res.u

_gsac.gstype.fields.compile_res.u	.tyexpr
diff.list.t	.tygvar
gsdl.ags.typeitem.t	.tygvar
gsdl.ags.typeitem.field.t	.tygvar
tyexprs_ty	.tylet	diff.list.t	gsdl.ags.typeitem.t
fields_ty	.tylet	diff.list.t	gsdl.ags.typeitem.field.t
	.typroduct	fields	fields_ty	tyexprs	tyexprs_ty

# §section §gs{gsac.gstype.gskind.compile}

_gsac.gstype.gskind.compile_ty	.tyexpr
gsdl.cgs.gskind.t	.tygvar
either.t	.tygvar
string.t	.tygvar
gsdl.ags.typeitem.gskind.t	.tygvar
	.tylift
	.tyfun	gsdl.cgs.gskind.t
	.tyref	either.t	string.t	gsdl.ags.typeitem.gskind.t
