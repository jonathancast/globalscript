	.document

	.data

	.cast	_ep	_ep.in
_ep	.closure	_ep_c

	.code

_ep_c	.impprog	ibio.prim	ibio
ibio.prim.iport	.tygvar
rune.t	.tygvar
ibio.prim.oport	.tygvar
_ep_as_c	.subcode
_ep_if_c	.subcode
_ep_s_c	.subcode
_ep_body_c	.subcode
i	.larg	ibio.prim.iport	rune.t
o	.larg	ibio.prim.oport	rune.t
eo	.larg	ibio.prim.oport	rune.t
as	.bind	_ep_as_c
if	.bind	_ep_if_c
s	.bind	_ep_s_c
	.body	_ep_body_c

_ep_as_c	.expr
ibio.prim.env.args.get	.gvar
	.yield	ibio.prim.env.args.get

_ep_if_c	.expr
ibio.prim.iport	.tygvar
rune.t	.tygvar
list.t	.tygvar
_ep_if_k	.subcode
string.ty	.tylet	list.t	rune.t
list.t.out	.cogvar
i	.fv	ibio.prim.iport	rune.t
as	.fv	list.t	string.ty
	.force	_ep_if_k
	.coerce	list.t.out	string.ty
	.enter	as

_ep_if_k	.forcecont
list.prim.u	.tygvar
list.t	.tygvar
rune.t	.tygvar
ibio.prim.iport	.tygvar
string.ty	.tylet	list.t	rune.t
res.ty	.tylet	ibio.prim.iport	rune.t
ibio.file.read.open.prim	.gvar
ibio.file.name.in	.gvar
ibio.rune.external.io	.gvar
ibio.prim.unit	.gvar
i	.fv	ibio.prim.iport	rune.t
as0	.karg	list.prim.u	string.ty
	.analyze	as0	:	nil
		.case	:
a0		.fkarg	0	list.t	rune.t
as1		.fkarg	1	list.t	string.ty
fn			.apply	ibio.file.name.in	|	a0
			.app	ibio.rune.external.io	fn
			.enter	ibio.file.read.open.prim	rune.t
		.case	nil
			.lift
			.app	i
			.yield	ibio.prim.unit	res.ty

_ep_s_c	.expr
ibio.prim.iport	.tygvar
rune.t	.tygvar
list.t	.tygvar
res.ty	.tylet	list.t	rune.t
ibio.lex.receive	.gvar
ibio.lex.receiver.many	.gvar
ibio.lex.receiver.symbol	.gvar
if	.efv	ibio.prim.iport	rune.t
sym	.apply	ibio.lex.receiver.symbol	rune.t
ms	.apply	ibio.lex.receiver.many	rune.t	rune.t	|	sym
	.app	ms	if
	.enter	ibio.lex.receive	rune.t	res.ty

_ep_body_c	.expr
ibio.prim.oport	.tygvar
rune.t	.tygvar
list.t	.tygvar
ibio.prim.write	.gvar
o	.fv	ibio.prim.oport	rune.t
s	.fv	list.t	rune.t
	.app	o	s
	.yield	ibio.prim.write	rune.t

	.coercion

_ep.in	.tycoercion
ibio.m	.tygvar
rune.t	.tygvar
record.empty	.tygvar
	.tydefinition ibio.m	rune.t	rune.t	record.empty
