#calculus: gsdl.string-code 0.7
#type: document

	.data

	.closure	_ep_c	_ep_ty

	.code

_ep_c	.impprog	ibio.prim	ibio
rune.t	.tygvar
record.empty	.tygvar
ibio.prim.iport	.tygvar
ibio.prim.oport	.tygvar
mdl.file.t	.tygvar
list.t	.tygvar	-- Temp
string.t	.tygvar	-- Temp
ibio.file.name.t	.tygvar	-- Temp
parser.pos.t	.tygvar	-- Temp
parser.t	.tygvar	-- Temp
_ep_body_c	.subcode
ibio.m.in	.cogvar
parser.parse	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
parser.fail	.gvar	-- Temp
	.coerce	ibio.m.in	rune.t	rune.t	record.empty
i	.larg	ibio.prim.iport	rune.t
o	.larg	ibio.prim.oport	rune.t
eo	.larg	ibio.prim.oport	rune.t
	.lift
as	.undefined	list.t	string.t
fn	.undefined	ibio.file.name.t
-- > if	.undefined	ibio.prim.iport	rune.t
pos	.undefined	parser.pos.t
p	.apply	parser.fail	rune.t	mdl.file.t
s	.undefined	list.t	rune.t
ef	.apply	parser.parse	rune.t	mdl.file.t	|	parser.rune.advance	rune.print	pos	p	s
	.body	.closure	_ep_body_c

_ep_body_c	.expr
ibio.prim.oport	.tygvar
rune.t	.tygvar
either.t	.tygvar
parser.err.t	.tygvar
mdl.file.t	.tygvar
_ep_body_k	.subcode
either.t.out	.cogvar
eo	.fv	ibio.prim.oport	rune.t
ef	.fv	either.t	parser.err.t	mdl.file.t
	.force	_ep_body_k
	.coerce	either.t.out	parser.err.t	mdl.file.t
	.enter	ef

_ep_body_k	.forcecont
ibio.prim.oport	.tygvar
rune.t	.tygvar
either.prim.u	.tygvar
parser.err.t	.tygvar
mdl.file.t	.tygvar
ibio.prim.t	.tygvar	-- Temp
record.empty	.tygvar	-- Temp
_ep_body_left_res_c	.subcode
eo	.fv	ibio.prim.oport	rune.t
e0	.karg	either.prim.u	parser.err.t	mdl.file.t
	.analyze	e0	left	right
		.case	left
err		.fkarg	0	parser.err.t
res			.closure	_ep_body_left_res_c
			.enter	res
		.case	right
f		.fkarg	0	mdl.file.t
			.undef	ibio.prim.t	record.empty

_ep_body_left_res_c	.impprog	ibio.prim	ibio
ibio.prim.oport	.tygvar
rune.t	.tygvar
parser.err.t	.tygvar
string.t	.tygvar	-- Temp
ibio.prim.t	.tygvar	-- Temp
record.empty	.tygvar	-- Temp
ibio.prim.write	.gvar
list.<>	.gvar
parser.err.fmt	.gvar
eo	.fv	ibio.prim.oport	rune.t
err	.fv	parser.err.t
	.lift
s1	.apply	parser.err.fmt	|	err
s2	.undefined	string.t
err.s	.apply	list.<>	rune.t	|	s1	s2
	.bind	.apply	ibio.prim.write	rune.t	|	eo	err.s
	.body	.undefined	ibio.prim.t	record.empty

	.type

_ep_ty	.tyexpr
ibio.m	.tygvar
rune.t	.tygvar
record.empty	.tygvar
	.tyref	ibio.m	rune.t	rune.t	record.empty
