#calculus: gsdl.string-code 0.6

	.prefix

	.data

mdl.hack.compiler.type.decl.compile	.closure	_mdl.hack.compiler.type.decl.compile_c

mdl.hack.compiler.type.header.s	.string	Header\sfile:\n\n
mdl.hack.compiler.type.source.s	.string	Source\sfile:\n\n
mdl.hack.compile.type.toprow.s	.string	/*\s↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\s*/\n
mdl.hack.compile.type.auto.generated.s	.string	/*\sAuto-generated\sby\smdltype2c\s*/\n/*\sDo\snot\schange\sif\sWest\sBaiýan\sNaval\sIntelligence\sknows\swhere\syou\slive\s*/\n\n
mdl.hack.compile.type.bottomrow.s	.string	/*\s↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑\s*/\n

_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.s	.string	struct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.mid.s	.string	_blocking\s{\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_inherit.s	.string	\s\s\s\sstruct\sapi_prim_blocking\sbl;\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_value_prefix.s	.string	\s\s\s\sstruct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_value_suffix.s	.string	;\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.suffix.s	.string	};\n\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.prefix.s	.string	static\sstruct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.mid.s	.string	_blocking\s*
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.suffix.s	.string	_blocking_alloc(void);\n\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.proto.prefix.s	.string	static\sapi_prim_blocking_gccopy\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.proto.suffix.s	.string	_blocking_gccopy;\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.proto.prefix.s	.string	static\sapi_prim_blocking_gcevacuate\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.proto.suffix.s	.string	_blocking_gcevacuate;\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.proto.prefix.s	.string	static\sapi_prim_blocking_gccleanup\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.proto.suffix.s	.string	_blocking_gccleanup;\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.prefix.s	.string	struct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid.s	.string	_blocking\s*\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid1.s	.string	_blocking_alloc()\n{\n\s\s\s\sstruct\sapi_prim_blocking\s*res;\n\s\s\s\sstruct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid2.s	.string	_blocking\s*
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid3.s	.string	;\n\n\s\s\s\sres\s=\sapi_blocking_alloc(\n\s\s\s\s\s\s\s\ssizeof(struct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid4.s	.string	_blocking),\n\s\s\s\s\s\s\s\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid5.s	.string	_blocking_gccopy,\n\s\s\s\s\s\s\s\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid6.s	.string	_blocking_gcevacuate,\n\s\s\s\s\s\s\s\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid7.s	.string	_blocking_gccleanup\n\s\s\s\s);\n\s\s\s\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid8.s	.string	\s=\s(struct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid9.s	.string	_blocking\s*)res;\n\s\s\s\smemset((uchar*)
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid10.s	.string	\s+\ssizeof(struct\sapi_prim_blocking),\s0,\ssizeof(struct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid11.s	.string	_blocking)\s-\ssizeof(struct\sapi_prim_blocking));\n\n\s\s\s\sreturn\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.suffix.s	.string	;\n}\n\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.prefix.s	.string	struct\sapi_prim_blocking\s*\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid.s	.string	_blocking_gccopy(struct\sgsstringbuilder\s*err,\sstruct\sapi_prim_blocking\s*blocking)\n{\n\s\s\s\sstruct\sapi_prim_blocking\s*newblocking;\n\s\s\s\sstruct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid1.s	.string	_blocking\s*
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid2.s	.string	,\s*new
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid3.s	.string	;\n\n\s\s\s\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid4.s	.string	\s=\s(struct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid5.s	.string	_blocking\s*)blocking;\n\n\s\s\s\snew
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid6.s	.string	\s=\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid7.s	.string	_blocking_alloc();\n\s\s\s\snewblocking\s=\s(struct\sapi_prim_blocking\s*)new
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid8.s	.string	;\n\n\s\s\s\smemcpy((uchar*)new
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid9.s	.string	\s+\ssizeof(struct\sapi_prim_blocking),\s(uchar*)
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid10.s	.string	\s+\ssizeof(struct\sapi_prim_blocking),\ssizeof(struct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.suffix.s	.string	_blocking)\s-\ssizeof(struct\sapi_prim_blocking));\n\n\s\s\s\sreturn\snewblocking;\n}\n\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.prefix.s	.string	int\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid.s	.string	_blocking_gcevacuate(struct\sgsstringbuilder\s*err,\sstruct\sapi_prim_blocking\s*pblocking)\n{\n\s\s\s\sstruct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid1.s	.string	_blocking\s*
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid2.s	.string	;\n\n\s\s\s\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid3.s	.string	\s=\s(struct\s
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid4.s	.string	_blocking\s*)pblocking;\n\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_prefix.s	.string	\s\s\s\sif\s(
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_mid.s	.string	_evacuate(err,\s&
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_mid1.s	.string	->
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_suffix.s	.string	)\s<\s0)\sreturn\s-1;\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.suffix.s	.string	\s\s\s\sreturn\s0;\n}\n\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.defn.prefix.s	.string	void\n
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.defn.suffix.s	.string	_blocking_gccleanup(struct\sapi_prim_blocking\s*blocking)\n{\n}\n\n

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.prefix.s	.string	struct\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.inherit.s	.string	_cont\s{\n\s\s\s\sstruct\sace_cont\scont;\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_list_int.s	.string	\s\s\s\sint\snum
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.footer.s	.string	};\n\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_macro.header.s	.string	#define\sACE_STACK_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s	.string	_PUSH(pcont,\sa_pos,\sthread,\s
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_list_mid.s	.string	,\styp
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_list_mid.s1	.string	,\s
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s1	.string	badreturn)\sdo\s{\s\\\n\s\s\s\sif\s(!((pcont)\s=\s(struct\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s2	.string	_cont\s*)ace_stack_alloc(thread,\sa_pos,\ssizeof(struct\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s3	.string	_cont)
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.badreturn.s	.string	)))\sbadreturn;\s\\\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.type.s	.string	\s\s\s\s(pcont)->cont.node\s=\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.type.suffix.s	.string	_cont;\s\\\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.pos.s	.string	\s\s\s\s(pcont)->cont.pos\s=\sa_pos;\s\\\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_prefix.s	.string	\s\s\s\s(pcont)->num
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s	.string	\s=\s(n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s1	.string	);\s\\\n\s\s\s\sfor\s(i\s=\s0;\si\s<\s(n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s2	.string	);\si++)\sACE_STACK_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s3	.string	(*(pcont),\si)\s=\s(typ
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_suffix.s	.string	);\s\\\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.footer.s	.string	}\swhile\s(0)\n\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts_cont.s	.string	(cont)
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_prefix.s	.string	#define\sACE_STACK_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s	.string	(cont,\si)\s(*(
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s1	.string	*)((char*)&(cont)\s+\ssizeof(struct\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s2	.string	_cont)
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s3	.string	\s+\s(i)\s*\ssizeof(
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_suffix.s	.string	)))\n\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.mid.s	.string	_BOTTOM(pcont)\s((void\s*)((char*)(pcont)\s+\ssizeof(struct\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.mid.s1	.string	_cont)
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_prefix.s	.string	\s+\s
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_mid.s	.string	.num
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_mid.s1	.string	\s*\ssizeof(
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_suffix.s	.string	)
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom_pcont.s	.string	(*(pcont))
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.suffix.s	.string	))\n\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_source.evac.s	.string	In\sacestack.c,\sin\sace_stack_gcevacuate:\n\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.s	.string	\s\s\s\s\s\s\s\s\s\s\s\scase\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s	.string	_cont:\s{\n\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\sstruct\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s1	.string	_cont\s*
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s2	.string	\s=\s(struct\sace_stack_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s3	.string	_cont\s*)cont;\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_prefix.s	.string	\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\sfor\s(i\s=\s0;\si\s<\s
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_mid.s	.string	->num
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_mid.s1	.string	;\si++)\n\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_suffix.s	.string	\n\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s;\n
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_prefix.s	.string	ACE_STACK_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_mid.s	.string	(*
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_suffix.s	.string	,\si)
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s	.string	\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\sp\s=\sACE_STACK_
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s1	.string	_BOTTOM(
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s2	.string	);\n\s\s\s\s\s\s\s\s\s\s\s\s\s\s\s\scontinue;\n\s\s\s\s\s\s\s\s\s\s\s\s}\n\n

_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.prefix.s	.string	struct\s
_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.mid.s	.string	_blocking\s{\n\s\s\s\sstruct\sgslprim_blocking\sgs;\n
_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.suffix.s	.string	};\n\n

mdl.hack.compiler.type.size.expr	.closure	_mdl.hack.compiler.type.size.expr_c
_mdl.hack.compiler.type.size.expr_bco_bco.size.s	.string	sizeof(struct\sgsbco\s*)
_mdl.hack.compiler.type.size.expr_gsvalue_gsvalue.size.s	.string	sizeof(gsvalue)

_mdl.hack.compiler.type_singular	.closure	_mdl.hack.compiler.type_singular_c	_mdl.hack.compiler.type_singular_ty

mdl.hack.compiler.type.ctype	.closure	_mdl.hack.compiler.type.ctype_c
_mdl.hack.compiler.type.ctype_bco_bco.s	.string	struct\sgsbco\s*
_mdl.hack.compiler.type.ctype_gsvalue_gsvalue.s	.string	gsvalue

_mdl.hack.compiler.type_evac	.closure	_mdl.hack.compiler.type_evac_c
_mdl.hack.compiler.type_evac_bco_prefix.s	.string	if\s(gs_gc_trace_bco(err,\s&
_mdl.hack.compiler.type_evac_bco_suffix.s	.string	)\s<\s0)\sreturn\s-1
_mdl.hack.compiler.type_evac_gsvalue_prefix.s	.string	if\s(GS_GC_TRACE(err,\s&
_mdl.hack.compiler.type_evac_gsvalue_suffix.s	.string	)\s<\s0)\sreturn\s-1

	.code

-- §section §gs{mdl.hack.compiler.type.decl.compile}

_mdl.hack.compiler.type.decl.compile_c	.expr
mdl.type.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_k	.subcode
mdl.type.decl.t.out	.cogvar
ty	.larg	mdl.type.decl.t
	.force	_mdl.hack.compiler.type.decl.compile_k
	.coerce	mdl.type.decl.t.out
	.enter	ty

_mdl.hack.compiler.type.decl.compile_k	.forcecont
mdl.type.decl.prim.u	.tygvar
string.t	.tygvar
list.t	.tygvar
mdl.type.field.decl.t	.tygvar
rune.t	.tygvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_list.sizes.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_c	.subcode
_mdl.hack.compiler.type.decl.compile_lprim.blocking_fs.fields.f_c	.subcode
list.<>	.gvar
mdl.hack.compiler.type.header.s	.gvar
mdl.hack.compile.type.toprow.s	.gvar
mdl.hack.compile.type.auto.generated.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_inherit.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.suffix.s	.gvar
mdl.hack.compile.type.bottomrow.s	.gvar
mdl.hack.compiler.type.source.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.proto.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.proto.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.proto.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.proto.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.proto.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.proto.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid1.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid2.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid3.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid4.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid5.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid6.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid7.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid8.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid9.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid10.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid11.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid1.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid2.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid3.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid4.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid5.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid6.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid7.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid8.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid9.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid10.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid1.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid2.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid3.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid4.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.defn.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.defn.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.inherit.s	.gvar
list.concat	.gvar
list.map	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.footer.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_macro.header.s	.gvar
string.toupper	.gvar
list.scanl	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s1	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s2	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s3	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.badreturn.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.type.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.type.suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.pos.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.footer.s	.gvar
list.byZip.map2	.gvar
list.nil	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts_cont.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.mid.s1	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom_pcont.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.suffix.s	.gvar
list.:	.gvar
rune.new.line	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_source.evac.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s1	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s2	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s3	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s1	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s2	.gvar
_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.suffix.s	.gvar
ty0	.karg	mdl.type.decl.prim.u
	.analyze	ty0	api.prim.blocking	interpreted.stackframe	lprim.blocking
		.case	api.prim.blocking
id		.fkarg	0	string.t
fs		.fkarg	1	list.t	mdl.type.field.decl.t
field.f			.closure	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_c
fs.fields.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	field.f	fs
fs.fields.s			.apply	list.concat	rune.t	|	fs.fields.ss
field.evac.f			.closure	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_c
fs.evacs.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	field.evac.f	fs
fs.evacs.s			.apply	list.concat	rune.t	|	fs.evacs.ss
s97			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.defn.suffix.s	mdl.hack.compile.type.bottomrow.s
s96			.apply	list.<>	rune.t	|	id	s97
s95			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.defn.prefix.s	s96
s94			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.suffix.s	s95
s93			.apply	list.<>	rune.t	|	fs.evacs.s	s94
s92			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid4.s	s93
s91			.apply	list.<>	rune.t	|	id	s92
s90			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid3.s	s91
s89			.apply	list.<>	rune.t	|	id	s90
s88			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid2.s	s89
s87			.apply	list.<>	rune.t	|	id	s88
s86			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid1.s	s87
s85			.apply	list.<>	rune.t	|	id	s86
s84			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.mid.s	s85
s83			.apply	list.<>	rune.t	|	id	s84
s82			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.defn.prefix.s	s83
s81			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.suffix.s	s82
s80			.apply	list.<>	rune.t	|	id	s81
s79			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid10.s	s80
s78			.apply	list.<>	rune.t	|	id	s79
s77			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid9.s	s78
s76			.apply	list.<>	rune.t	|	id	s77
s75			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid8.s	s76
s74			.apply	list.<>	rune.t	|	id	s75
s73			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid7.s	s74
s72			.apply	list.<>	rune.t	|	id	s73
s71			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid6.s	s72
s70			.apply	list.<>	rune.t	|	id	s71
s69			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid5.s	s70
s68			.apply	list.<>	rune.t	|	id	s69
s67			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid4.s	s68
s66			.apply	list.<>	rune.t	|	id	s67
s65			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid3.s	s66
s64			.apply	list.<>	rune.t	|	id	s65
s63			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid2.s	s64
s62			.apply	list.<>	rune.t	|	id	s63
s61			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid1.s	s62
s60			.apply	list.<>	rune.t	|	id	s61
s59			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.mid.s	s60
s58			.apply	list.<>	rune.t	|	id	s59
s57			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.defn.prefix.s	s58
s56			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.suffix.s	s57
s55			.apply	list.<>	rune.t	|	id	s56
s54			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid11.s	s55
s53			.apply	list.<>	rune.t	|	id	s54
s52			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid10.s	s53
s51			.apply	list.<>	rune.t	|	id	s52
s50			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid9.s	s51
s49			.apply	list.<>	rune.t	|	id	s50
s48			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid8.s	s49
s47			.apply	list.<>	rune.t	|	id	s48
s46			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid7.s	s47
s45			.apply	list.<>	rune.t	|	id	s46
s44			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid6.s	s45
s43			.apply	list.<>	rune.t	|	id	s44
s42			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid5.s	s43
s41			.apply	list.<>	rune.t	|	id	s42
s40			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid4.s	s41
s39			.apply	list.<>	rune.t	|	id	s40
s38			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid3.s	s39
s37			.apply	list.<>	rune.t	|	id	s38
s36			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid2.s	s37
s35			.apply	list.<>	rune.t	|	id	s36
s34			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid1.s	s35
s33			.apply	list.<>	rune.t	|	id	s34
s32			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.mid.s	s33
s31			.apply	list.<>	rune.t	|	id	s32
s30			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.defn.prefix.s	s31
s29			.apply	list.:	rune.t	|	rune.new.line	s30
s28			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.proto.suffix.s	s29
s27			.apply	list.<>	rune.t	|	id	s28
s26			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_cleanup.proto.prefix.s	s27
s25			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.proto.suffix.s	s26
s24			.apply	list.<>	rune.t	|	id	s25
s23			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_evacuate.proto.prefix.s	s24
s22			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.proto.suffix.s	s23
s21			.apply	list.<>	rune.t	|	id	s22
s20			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_copy.proto.prefix.s	s21
s19			.apply	list.<>	rune.t	|	mdl.hack.compile.type.auto.generated.s	s20
s18			.apply	list.<>	rune.t	|	mdl.hack.compile.type.toprow.s	s19
s17			.apply	list.<>	rune.t	|	mdl.hack.compiler.type.source.s	s18
s16			.apply	list.:	rune.t	|	rune.new.line	s17
s15			.apply	list.<>	rune.t	|	mdl.hack.compile.type.bottomrow.s	s16
s14			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.suffix.s	s15
s13			.apply	list.<>	rune.t	|	id	s14
s12			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.mid.s	s13
s11			.apply	list.<>	rune.t	|	id	s12
s10			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_alloc.proto.prefix.s	s11
s9			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.suffix.s	s10
s8			.apply	list.<>	rune.t	|	fs.fields.s	s9
s7			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_inherit.s	s8
s6			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.mid.s	s7
s5			.apply	list.<>	rune.t	|	id	s6
s4			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_struct.s	s5
s3			.apply	list.<>	rune.t	|	mdl.hack.compile.type.auto.generated.s	s4
s2			.apply	list.:	rune.t	|	rune.new.line	s3
s1			.apply	list.<>	rune.t	|	mdl.hack.compile.type.toprow.s	s2
			.app	mdl.hack.compiler.type.header.s	s1
			.enter	list.<>	rune.t
		.case	interpreted.stackframe
id		.fkarg	0	string.t
fs		.fkarg	1	list.t	mdl.type.field.decl.t
field.f			.closure	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_c
fs.fields.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	field.f	fs
fs.fields.s			.apply	list.concat	rune.t	|	fs.fields.ss
id.uc			.apply	string.toupper	|	id
pushargs.f			.closure	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_c
fs.pushargs.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	pushargs.f	fs
fs.pushargs.s			.apply	list.concat	rune.t	|	fs.pushargs.ss
list.sizes.f			.closure	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_list.sizes.f_c
fs.list.sizes.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	list.sizes.f	fs
fs.list.sizes.s			.apply	list.concat	rune.t	|	fs.list.sizes.ss
push.sets.f		.closure	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_c
fs.push.sets.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	push.sets.f	fs
fs.push.sets.s			.apply	list.concat	rune.t	|	fs.push.sets.ss
sizes.f		.closure	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_c
extracts.sizes.f			.apply	sizes.f	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts_cont.s
extracts.fs.sizes.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	extracts.sizes.f	fs
string.<>			.apply	list.<>	rune.t
string.nil			.apply	list.nil	rune.t
extracts.fs.sizes.prev.ss			.apply	list.scanl	string.t	string.t	|	string.<>	string.nil	extracts.fs.sizes.ss
extracts.f		.closure	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_c
fs.extracts.ss			.apply	list.byZip.map2	string.t	mdl.type.field.decl.t	string.t	|	extracts.f	extracts.fs.sizes.prev.ss	fs
fs.extracts.s			.apply	list.concat	rune.t	|	fs.extracts.ss
bottom.sizes.f			.apply	sizes.f	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom_pcont.s
bottom.fs.sizes.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	bottom.sizes.f	fs
bottom.fs.sizes.s			.apply	list.concat	rune.t	|	bottom.fs.sizes.ss
evacs.f		.closure	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_c
fs.evacs.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	evacs.f	fs
fs.evacs.s			.apply	list.concat	rune.t	|	fs.evacs.ss
s52			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s2	mdl.hack.compile.type.bottomrow.s
s51			.apply	list.<>	rune.t	|	id	s52
s50			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s1	s51
s49			.apply	list.<>	rune.t	|	id.uc	s50
s48			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.footer.s	s49
s47			.apply	list.<>	rune.t	|	fs.evacs.s	s48
s46			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s3	s47
s45			.apply	list.<>	rune.t	|	id	s46
s44			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s2	s45
s43			.apply	list.<>	rune.t	|	id	s44
s42			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s1	s43
s41			.apply	list.<>	rune.t	|	id	s42
s40			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.mid.s	s41
s39			.apply	list.<>	rune.t	|	id	s40
s38			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_case.s	s39
s37			.apply	list.<>	rune.t	|	mdl.hack.compile.type.auto.generated.s	s38
s36			.apply	list.<>	rune.t	|	mdl.hack.compile.type.toprow.s	s37
s35			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_source.evac.s	s36
s34			.apply	list.:	rune.t	|	rune.new.line	s35
s33			.apply	list.<>	rune.t	|	mdl.hack.compile.type.bottomrow.s	s34
s32			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.suffix.s	s33
s31			.apply	list.<>	rune.t	|	bottom.fs.sizes.s	s32
s30			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.mid.s1	s31
s29			.apply	list.<>	rune.t	|	id	s30
s28			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_bottom.mid.s	s29
s27			.apply	list.<>	rune.t	|	id.uc	s28
s26			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_macro.header.s	s27
s25			.apply	list.<>	rune.t	|	fs.extracts.s	s26
s24			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.footer.s	s25
s23			.apply	list.<>	rune.t	|	fs.push.sets.s	s24
s22			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.pos.s	s23
s21			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.type.suffix.s	s22
s20			.apply	list.<>	rune.t	|	id	s21
s19			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.set.type.s	s20
s18			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.badreturn.s	s19
s17			.apply	list.<>	rune.t	|	fs.list.sizes.s	s18
s16			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s3	s17
s15			.apply	list.<>	rune.t	|	id	s16
s14			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s2	s15
s13			.apply	list.<>	rune.t	|	id	s14
s12			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s1	s13
s11			.apply	list.<>	rune.t	|	fs.pushargs.s	s12
s10			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.mid.s	s11
s9			.apply	list.<>	rune.t	|	id.uc	s10
s8			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_macro.header.s	s9
s7			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.footer.s	s8
s6			.apply	list.<>	rune.t	|	fs.fields.s	s7
s5			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.inherit.s	s6
s4			.apply	list.<>	rune.t	|	id	s5
s3			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_struct.stack.prefix.s	s4
s2			.apply	list.<>	rune.t	|	mdl.hack.compile.type.auto.generated.s	s3
s1			.apply	list.<>	rune.t	|	mdl.hack.compile.type.toprow.s	s2
			.app	mdl.hack.compiler.type.header.s	s1
			.enter	list.<>	rune.t
		.case	lprim.blocking
id		.fkarg	0	string.t
fs		.fkarg	1	list.t	mdl.type.field.decl.t
fs.fields.f			.closure	_mdl.hack.compiler.type.decl.compile_lprim.blocking_fs.fields.f_c
fs.fields.ss			.apply	list.map	mdl.type.field.decl.t	string.t	|	fs.fields.f	fs
fs.fields.s			.apply	list.concat	rune.t	|	fs.fields.ss
s8			.undefined	string.t
s7			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.suffix.s	s8
s6			.apply	list.<>	rune.t	|	fs.fields.s	s7
s5			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.mid.s	s6
s4			.apply	list.<>	rune.t	|	id	s5
s3			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_lprim.blocking_struct.lprim.prefix.s	s4
s2			.apply	list.<>	rune.t	|	mdl.hack.compile.type.auto.generated.s	s3
s1			.apply	list.<>	rune.t	|	mdl.hack.compile.type.toprow.s	s2
			.app	mdl.hack.compiler.type.header.s	s1
			.enter	list.<>	rune.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_c	.expr
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_k	.subcode
mdl.type.t.out	.cogvar
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_value_prefix.s	.gvar
list.:	.gvar
rune.space	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_value_suffix.s	.gvar
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
			.undef	string.t
		.case	value
nm		.fkarg	0	string.t
s2			.apply	list.<>	rune.t	|	f.nm	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_value_suffix.s
s1			.apply	list.:	rune.t	|	rune.space	s2
s			.apply	list.<>	rune.t	|	nm	s1
			.app	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.f_value_prefix.s	s
			.enter	list.<>	rune.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_c	.expr
string.t	.tygvar
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_k	.subcode
mdl.type.t.out	.cogvar
id	.fv	string.t
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_mid1.s	.gvar
_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_suffix.s	.gvar
id	.fv	string.t
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
			.undef	string.t
		.case	value
nm		.fkarg	0	string.t
s4			.apply	list.<>	rune.t	|	f.nm	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_suffix.s
s3			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_mid1.s	s4
s2			.apply	list.<>	rune.t	|	id	s3
s1			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_mid.s	s2
s			.apply	list.<>	rune.t	|	nm	s1
			.app	_mdl.hack.compiler.type.decl.compile_api.prim.blocking_field.evac.f_value_prefix.s	s
			.enter	list.<>	rune.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_c	.expr
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_k	.subcode
mdl.type.t.out	.cogvar
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_list_int.s	.gvar
list.:	.gvar
rune.semi	.gvar
list.singleton	.gvar
rune.new.line	.gvar
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
s2			.apply	list.singleton	rune.t	|	rune.new.line
s1			.apply	list.:	rune.t	|	rune.semi	s2
s			.apply	list.<>	rune.t	|	f.nm	s1
			.app	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_field.f_list_int.s	s
			.enter	list.<>	rune.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_c	.expr
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_k	.subcode
mdl.type.t.out	.cogvar
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.:	.gvar
rune.latin.letter.n	.gvar
list.<>	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_list_mid.s	.gvar
_mdl.hack.compiler.type_singular	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_list_mid.s1	.gvar
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
f.nm.sing			.apply	_mdl.hack.compiler.type_singular	|	f.nm
s2			.apply	list.<>	rune.t	|	f.nm.sing	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_list_mid.s1
s1			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_pushargs.f_list_mid.s	s2
s			.apply	list.<>	rune.t	|	f.nm	s1
			.app	rune.latin.letter.n	s
			.enter	list.:	rune.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_list.sizes.f_c	.expr
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_list.sizes.f_k	.subcode
mdl.type.t.out	.cogvar
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_list.sizes.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_list.sizes.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.:	.gvar
rune.space	.gvar
rune.plus	.gvar
rune.left.paren	.gvar
rune.latin.letter.n	.gvar
list.<>	.gvar
rune.right.paren	.gvar
rune.star	.gvar
mdl.hack.compiler.type.size.expr	.gvar
list.nil	.gvar
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
s10			.apply	list.nil	rune.t
s9			.apply	mdl.hack.compiler.type.size.expr	|	ty1	s10
s8			.apply	list.:	rune.t	|	rune.space	s9
s7			.apply	list.:	rune.t	|	rune.star	s8
s6			.apply	list.:	rune.t	|	rune.space	s7
s5			.apply	list.:	rune.t	|	rune.right.paren	s6
s4			.apply	list.<>	rune.t	|	f.nm	s5
s3			.apply	list.:	rune.t	|	rune.latin.letter.n	s4
s2			.apply	list.:	rune.t	|	rune.left.paren	s3
s1			.apply	list.:	rune.t	|	rune.space	s2
s			.apply	list.:	rune.t	|	rune.plus	s1
			.app	rune.space	s
			.enter	list.:	rune.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_c	.expr
string.t	.tygvar
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_k	.subcode
mdl.type.t.out	.cogvar
id.uc	.fv	string.t
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s1	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s2	.gvar
list.:	.gvar
rune.underscore	.gvar
string.toupper	.gvar
_mdl.hack.compiler.type_singular	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s3	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_suffix.s	.gvar
id.uc	.fv	string.t
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
f.nm.sing			.apply	_mdl.hack.compiler.type_singular	|	f.nm
f.nm.sing.uc			.apply	string.toupper	|	f.nm.sing
s10			.apply	list.<>	rune.t	|	f.nm.sing	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_suffix.s
s9			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s3	s10
s8			.apply	list.<>	rune.t	|	f.nm.sing.uc	s9
s7			.apply	list.:	rune.t	|	rune.underscore	s8
s6			.apply	list.<>	rune.t	|	id.uc	s7
s5			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s2	s6
s4			.apply	list.<>	rune.t	|	f.nm	s5
s3			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s1	s4
s2			.apply	list.<>	rune.t	|	f.nm	s3
s1			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_mid.s	s2
s			.apply	list.<>	rune.t	|	f.nm	s1
			.app	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_push.sets.f_list_prefix.s	s
			.enter	list.<>	rune.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_c	.expr
string.t	.tygvar
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_k	.subcode
mdl.type.t.out	.cogvar
id	.fv	string.t
id.uc	.fv	string.t
prev.sizes	.larg	string.t
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_prefix.s	.gvar
list.:	.gvar
rune.underscore	.gvar
string.toupper	.gvar
_mdl.hack.compiler.type_singular	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s	.gvar
mdl.hack.compiler.type.ctype	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s1	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s2	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s3	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_suffix.s	.gvar
id	.fv	string.t
id.uc	.fv	string.t
prev.sizes	.fv	string.t
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
f.nm.sing			.apply	_mdl.hack.compiler.type_singular	|	f.nm
f.nm.sing.uc			.apply	string.toupper	|	f.nm.sing
ty1.c.s			.apply	mdl.hack.compiler.type.ctype	|	ty1
s10			.apply	list.<>	rune.t	|	ty1.c.s	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_suffix.s
s9			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s3	s10
s8			.apply	list.<>	rune.t	|	prev.sizes	s9
s7			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s2	s8
s6			.apply	list.<>	rune.t	|	id	s7
s5			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s1	s6
s4			.apply	list.<>	rune.t	|	ty1.c.s	s5
s3			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_mid.s	s4
s2			.apply	list.<>	rune.t	|	f.nm.sing.uc	s3
s1			.apply	list.:	rune.t	|	rune.underscore	s2
s			.apply	list.<>	rune.t	|	id.uc	s1
			.app	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_extracts.f_list_prefix.s	s
			.enter	list.<>	rune.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_c	.expr
string.t	.tygvar
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_k	.subcode
mdl.type.t.out	.cogvar
x	.larg	string.t
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_mid.s1	.gvar
mdl.hack.compiler.type.ctype	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_suffix.s	.gvar
x	.fv	string.t
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
ty1.c.s			.apply	mdl.hack.compiler.type.ctype	|	ty1
s4			.apply	list.<>	rune.t	|	ty1.c.s	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_suffix.s
s3			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_mid.s1	s4
s2			.apply	list.<>	rune.t	|	f.nm	s3
s1			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_mid.s	s2
s			.apply	list.<>	rune.t	|	x	s1
			.app	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_sizes.f_list_prefix.s	s
			.enter	list.<>	rune.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_c	.expr
string.t	.tygvar
mdl.type.field.decl.t	.tygvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_k	.subcode
mdl.type.t.out	.cogvar
id	.fv	string.t
id.uc	.fv	string.t
f	.larg	mdl.type.field.decl.t
f.nm	.lfield	name	f
f.ty	.lfield	gstype	f
	.force	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_k
	.coerce	mdl.type.t.out
	.enter	f.ty

_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_prefix.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_mid.s1	.gvar
_mdl.hack.compiler.type_evac	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_prefix.s	.gvar
list.:	.gvar
rune.underscore	.gvar
string.toupper	.gvar
_mdl.hack.compiler.type_singular	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_mid.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_suffix.s	.gvar
_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_suffix.s	.gvar
id	.fv	string.t
id.uc	.fv	string.t
f.nm	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.undef	string.t
		.case	gsvalue
			.undef	string.t
		.case	list
ty1		.fkarg	0	mdl.type.t
f.nm.sing			.apply	_mdl.hack.compiler.type_singular	|	f.nm
f.nm.sing.uc			.apply	string.toupper	|	f.nm.sing
item.s5			.apply	list.<>	rune.t	|	id	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_suffix.s
item.s4			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_mid.s	item.s5
item.s3			.apply	list.<>	rune.t	|	f.nm.sing.uc	item.s4
item.s2			.apply	list.:	rune.t	|	rune.underscore	item.s3
item.s1			.apply	list.<>	rune.t	|	id.uc	item.s2
item.s			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_item.s_prefix.s	item.s1
item.evac.s			.apply	_mdl.hack.compiler.type_evac	|	ty1	item.s
s4			.apply	list.<>	rune.t	|	item.evac.s	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_suffix.s
s3			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_mid.s1	s4
s2			.apply	list.<>	rune.t	|	f.nm	s3
s1			.apply	list.<>	rune.t	|	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_mid.s	s2
s			.apply	list.<>	rune.t	|	id	s1
			.app	_mdl.hack.compiler.type.decl.compile_interpreted.stackframe_evacs.f_list_prefix.s	s
			.enter	list.<>	rune.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

_mdl.hack.compiler.type.decl.compile_lprim.blocking_fs.fields.f_c	.expr
mdl.type.field.decl.t	.tygvar
string.t	.tygvar
f	.larg	mdl.type.field.decl.t
	.undef	string.t

-- §section §gs{mdl.hack.compiler.type.size.expr}

_mdl.hack.compiler.type.size.expr_c	.expr
mdl.type.t	.tygvar
_mdl.hack.compiler.type.size.expr_k	.subcode
mdl.type.t.out	.cogvar
ty	.larg	mdl.type.t
	.force	_mdl.hack.compiler.type.size.expr_k
	.coerce	mdl.type.t.out
	.enter	ty

_mdl.hack.compiler.type.size.expr_k	.forcecont
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
string.t	.tygvar
diff.list.t	.tygvar	-- Temp
diff.list.fromlist	.gvar
_mdl.hack.compiler.type.size.expr_bco_bco.size.s	.gvar
_mdl.hack.compiler.type.size.expr_gsvalue_gsvalue.size.s	.gvar
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.app	_mdl.hack.compiler.type.size.expr_bco_bco.size.s
			.enter	diff.list.fromlist	rune.t
		.case	gsvalue
			.app	_mdl.hack.compiler.type.size.expr_gsvalue_gsvalue.size.s
			.enter	diff.list.fromlist	rune.t
		.case	list
ty1		.fkarg	0	mdl.type.t
			.undef	diff.list.t	rune.t
		.case	value
nm		.fkarg	0	string.t
			.undef	diff.list.t	rune.t
	-- > :: diff.list.t	rune.t

-- §section §gs{_mdl.hack.compiler.type_singular}

_mdl.hack.compiler.type_singular_c	.expr
string.t	.tygvar
rune.t	.tygvar
_mdl.hack.compiler.type_singular_k0	.subcode
list.t.out	.cogvar
s	.larg	string.t
	.force	_mdl.hack.compiler.type_singular_k0
	.coerce	list.t.out	rune.t
	.enter	s

_mdl.hack.compiler.type_singular_k0	.forcecont
list.prim.u	.tygvar
rune.t	.tygvar
string.t	.tygvar
_mdl.hack.compiler.type_singular_k1	.subcode
list.t.out	.cogvar
s0	.karg	list.prim.u	rune.t
	.analyze	s0	:	nil
		.case	:
c0		.fkarg	0	rune.t
s1		.fkarg	1	string.t
			.force	_mdl.hack.compiler.type_singular_k1
			.coerce	list.t.out	rune.t
			.enter	s1
		.case	nil
			.undef	string.t

_mdl.hack.compiler.type_singular_k1	.forcecont
rune.t	.tygvar
list.prim.u	.tygvar
string.t	.tygvar
_mdl.hack.compiler.type_singular_nil_k	.subcode
bool.t.out	.cogvar
list.:	.gvar
_mdl.hack.compiler.type_singular	.gvar
rune.≡	.gvar
rune.latin.letter.s	.gvar
c0	.fv	rune.t
s1	.fv	string.t
s1.0	.karg	list.prim.u	rune.t
	.analyze	s1.0	:	nil
		.case	:
c1		.fkarg	0	rune.t
s2		.fkarg	1	string.t
s3			.apply	_mdl.hack.compiler.type_singular	|	s1
			.app	c0	s3
			.enter	list.:	rune.t
		.case	nil
			.force	_mdl.hack.compiler.type_singular_nil_k
			.coerce	bool.t.out
			.app	c0	rune.latin.letter.s
			.enter	rune.≡

_mdl.hack.compiler.type_singular_nil_k	.forcecont
bool.prim.u	.tygvar
rune.t	.tygvar
string.t	.tygvar	-- Temp
list.nil	.gvar
b0	.karg	bool.prim.u	-- c0 ≡ r/s/?
	.analyze	b0	false	true
		.case	false
			.undef	string.t
		.case	true
			.enter	list.nil	rune.t

-- §section §gs{mdl.hack.compiler.type.ctype}

_mdl.hack.compiler.type.ctype_c	.expr
mdl.type.t	.tygvar
_mdl.hack.compiler.type.ctype_k	.subcode
mdl.type.t.out	.cogvar
ty	.larg	mdl.type.t
	.force	_mdl.hack.compiler.type.ctype_k
	.coerce	mdl.type.t.out
	.enter	ty

_mdl.hack.compiler.type.ctype_k	.forcecont
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
string.t	.tygvar	-- Temp
_mdl.hack.compiler.type.ctype_bco_bco.s	.gvar
_mdl.hack.compiler.type.ctype_gsvalue_gsvalue.s	.gvar
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
			.enter	_mdl.hack.compiler.type.ctype_bco_bco.s
		.case	gsvalue
			.enter	_mdl.hack.compiler.type.ctype_gsvalue_gsvalue.s
		.case	list
ty1		.fkarg	0	mdl.type.t
			.undef	string.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

-- §section §gs{_mdl.hack.compiler.type_evac}

_mdl.hack.compiler.type_evac_c	.expr
mdl.type.t	.tygvar
string.t	.tygvar
_mdl.hack.compiler.type_evac_k	.subcode
mdl.type.t.out	.cogvar
ty	.larg	mdl.type.t
x.s	.larg	string.t
	.force	_mdl.hack.compiler.type_evac_k
	.coerce	mdl.type.t.out
	.enter	ty

_mdl.hack.compiler.type_evac_k	.forcecont
string.t	.tygvar
mdl.type.prim.u	.tygvar
mdl.type.t	.tygvar
rune.t	.tygvar
list.<>	.gvar
_mdl.hack.compiler.type_evac_bco_prefix.s	.gvar
_mdl.hack.compiler.type_evac_bco_suffix.s	.gvar
_mdl.hack.compiler.type_evac_gsvalue_prefix.s	.gvar
_mdl.hack.compiler.type_evac_gsvalue_suffix.s	.gvar
x.s	.fv	string.t
ty0	.karg	mdl.type.prim.u
	.analyze	ty0	bco	gsvalue	list	value
		.case	bco
s			.apply	list.<>	rune.t	|	x.s	_mdl.hack.compiler.type_evac_bco_suffix.s
			.app	_mdl.hack.compiler.type_evac_bco_prefix.s	s
			.enter	list.<>	rune.t
		.case	gsvalue
s			.apply	list.<>	rune.t	|	x.s	_mdl.hack.compiler.type_evac_gsvalue_suffix.s
			.app	_mdl.hack.compiler.type_evac_gsvalue_prefix.s	s
			.enter	list.<>	rune.t
		.case	list
ty1		.fkarg	0	mdl.type.t
			.undef	string.t
		.case	value
nm		.fkarg	0	string.t
			.undef	string.t
	-- > :: string.t

	.type

-- §section §gs{_mdl.hack.compiler.type_singular}

_mdl.hack.compiler.type_singular_ty	.tyexpr
string.t	.tygvar
	.tylift
	.tyfun	string.t
	.tyref	string.t
