#calculus: gsdl.string-code 0.6

	.document

	.data

	.closure	_ep_c

_ep_tests	.list	test.property.t	_test_parse.interpreted.stackframe	_test_parse.field.decl

_test_parse.interpreted.stackframe	.closure	_test_parse.interpreted.stackframe_c
_test_parse.interpreted.stackframe_label	.string	qq{interpreted\sstackframe\sempty\s{\\n};\\n}\s=~\sdecl.parser
_test_parse.interpreted.stackframe_input	.string	interpreted\sstackframe\sempty\s{\n};\n

_test_parse.field.decl	.closure	_test_parse.field.decl_c
_test_parse.field.decl_label	.string	qq{conts\s::\sbco;\\n}\s=~\sfield.decl.parser
_test_parse.field.decl_input	.string	conts\s::\sbco;\n

	.code

_ep_c	.expr
test.all	.gvar
_ep_tests	.gvar
	.app	_ep_tests
	.enter	test.all

-- §section §gs{qq{interpreted stackframe empty {\\n};\\n} =~ decl.parser}

_test_parse.interpreted.stackframe_c	.expr
rune.t	.tygvar
mdl.type.decl.t	.tygvar
_test_parse.interpreted.stackframe_k_c	.subcode
test.property.label	.gvar
_test_parse.interpreted.stackframe_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
mdl.type.decl.parser	.gvar
_test_parse.interpreted.stackframe_input	.gvar
k	.closure	_test_parse.interpreted.stackframe_k_c
test	.apply	parser.test.assert.passes	rune.t	mdl.type.decl.t	|	parser.rune.advance	rune.print	mdl.type.decl.parser	_test_parse.interpreted.stackframe_input	k
	.app	_test_parse.interpreted.stackframe_label	test
	.enter	test.property.label

_test_parse.interpreted.stackframe_k_c	.expr
mdl.type.decl.t	.tygvar
test.true	.gvar
d	.larg	mdl.type.decl.t
	.enter	test.true

-- §section §gs{qq{conts :: bco;\\n} =~ field.decl.parser}

_test_parse.field.decl_c	.expr
rune.t	.tygvar
mdl.type.field.decl.t	.tygvar
_test_parse.field.decl_k_c	.subcode
test.property.label	.gvar
_test_parse.field.decl_label	.gvar
parser.test.assert.passes	.gvar
parser.rune.advance	.gvar
rune.print	.gvar
mdl.type.field.decl.parser	.gvar
_test_parse.field.decl_input	.gvar
k	.closure	_test_parse.field.decl_k_c
test	.apply	parser.test.assert.passes	rune.t	mdl.type.field.decl.t	|	parser.rune.advance	rune.print	mdl.type.field.decl.parser	_test_parse.field.decl_input	k
	.app	_test_parse.field.decl_label	test
	.enter	test.property.label

_test_parse.field.decl_k_c	.expr
mdl.type.field.decl.t	.tygvar
test.true	.gvar
d	.larg	mdl.type.field.decl.t
	.enter	test.true
