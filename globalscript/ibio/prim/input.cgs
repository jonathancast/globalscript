module ibio.prim.input = .Π〈
    abstype iptr.t :: ⌊∗⌋ → ∗ = .primarg "ibio.prim.input.iptr.t";
    abstype iroutine.m :: ? → ∗ = .api "ibio.prim.input.iroutine.m";
    iroutine.tag :: ∀ ('α :: ⌊∗⌋). iptr.t α .→ iroutine.m .Σ〈 symbol .uΠ〈〉; unix.eof .uΠ〈〉; ibio.eof .uΠ〈〉;〉 = 
        .apiprim "ibio.prim.input.iroutine.tag"
    ;
    iroutine.get :: ∀ ('α :: ⌊∗⌋). iptr.t α .→ iroutine.m α = .apiprim "ibio.prim.input.iroutine.get";
    iroutine.advance :: ∀ ('α :: ⌊∗⌋). iptr.t α → iroutine.m α = .apiprim "ibio.prim.input.iroutine.advance";
    iroutine.accept :: ∀ ('α :: ⌊∗⌋). iptr.t α → iroutine.m .Π〈〉 = .apiprim "ibio.prim.iroutine.accept";
〉
